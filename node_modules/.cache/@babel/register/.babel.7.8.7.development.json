{
  "{\"sourceRoot\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"filename\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\\\\ServerGetSQLData.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "filename": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\ServerGetSQLData.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\ServerGetSQLData.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\ServerGetSQLData.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
        "sourceFileName": "ServerGetSQLData.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar SQLFunctions = require('./Functions/SQLFunctions');\n\nvar userFunctions = require('./Functions/UserFunctions');\n\nvar SQLConfig = require('./Functions/SQLConfig'); // Basic Server module\n\n\nvar express = require('express');\n\nvar jwt = require('jsonwebtoken');\n\nvar cors = require('cors');\n\nvar app = express();\napp.use(express.json());\napp.use(cors());\nvar addRecord = false;\nvar inNewRecord = false;\nvar countRegedUser = 0; // The server information\n\nvar port = process.env.PORT || SQLConfig.serverPort;\nvar serverIO = app.listen(port, function () {\n  return console.log(\"getSQLData is listening on port \".concat(port, \"!\"));\n}); // All the accessable users for the app\n\nvar regedUserList = require('./Functions/RegedUser.json'); // Run function for the mehods ================================================================================================\n\n\nvar emtyDataArrays = function emtyDataArrays(emtyingArr) {\n  //Emtying the array at the end\n  emtyingArr = [];\n}; // Validate the user who whants logging in\n\n\nvar createdToken = []; // Middleware according the name\n\nvar verifyToken = function verifyToken(req, res, next) {\n  //const bearerHeader = req.headers['authorization'].split(' ')[1];\n  // check there is a token\n  //if (bearerHeader === createdToken[0]) {       \n  var getInlogedUser = req.params.user;\n  SQLFunctions.runSQLConn(SQLFunctions.buildCorrectSQLStatements('userSpec', getInlogedUser)); //jwt.verify(bearerHeader, 'inlogSecretKey');\n\n  userFunctions.verifyUser(getInlogedUser);\n  setTimeout(function () {\n    res.status(200).send(SQLFunctions.incommingSQLDataArr);\n  }, 3000);\n  next(); //}\n  //else res.status(403).send('Authorization failed!');\n};\n\nvar verifyUserData = function verifyUserData(req, res, next) {}; // Run method when requested from client ======================================================================================\n// Run Logout  \n\n\napp.get('/SQLData', function (req, res) {\n  SQLFunctions.emptyUserData();\n  SQLFunctions.runSQLConn(SQLFunctions.buildCorrectSQLStatements('first run', ''));\n  setTimeout(function () {\n    console.log(\"incommingSQLDataArr\", SQLFunctions.incommingSQLDataArr);\n    res.status(200).send(SQLFunctions.incommingSQLDataArr);\n  }, 1000);\n  console.log('=========================userSpec==========================================');\n}); // UserReg =========================================================================\n\napp.post('/SQLData/UserReg', function (req, res) {\n  addRecord = true;\n  console.log('116');\n  var incomingNewUser = req.body; // Axios add, bodyData\n\n  userFunctions.userReg(incomingNewUser);\n  res.status(200).send(incomingNewUser);\n  console.log('===================================================================');\n  addRecord = false;\n  SQLFunctions.emtyDataArrays();\n}); // User loging in =============================================================================================================\n\n/* \r\n    Request a UserValidation and store the unser as a token --> the token sending back as a response.\r\n    When the user is logedin there is a getmethos for collecting the user specefic data and sending back to the app\r\n*/\n\napp.post('/SQLData/Auth', function (req, res) {\n  /*  The userdata is incomming and send into he function to validate the Logging in user:\r\n      if = true, the code = 200 is send back together with a tokem else the code = 404 is send with no data */\n  var incommingUserData = req.body.bodyData;\n  var returninUserData = userFunctions.validateUser(incommingUserData);\n\n  if (returninUserData.userMatch === true) {\n    jwt.sign(returninUserData, 'inlogSecretKey', function (error, token) {\n      console.log(\"token\", token);\n\n      if (token) {\n        createdToken.push(token);\n        res.statusMessage = \"You are authenticated'\";\n        res.status(200).send(token);\n      }\n\n      if (error) res.status(500);\n    });\n  }\n\n  if (returninUserData.userMatch === false) {\n    res.statusMessage = \"User does not find!\";\n    res.status(203).send(null); // User is unmatch\n  }\n\n  returninUserData = {};\n}); // Requested userData is send back if the token is the same as created\n\napp.get('/SQLData/:user',\n/*  verifyToken, */\nfunction (req, res) {\n  SQLFunctions.emptyUserData();\n  inNewRecord = true;\n  var getInlogedUser = req.params.user;\n  console.log(\"getInlogedUser - 111\", getInlogedUser);\n  SQLFunctions.runSQLConn(SQLFunctions.buildCorrectSQLStatements('userSpec', getInlogedUser)); //jwt.verify(bearerHeader, 'inlogSecretKey');\n\n  setTimeout(function () {\n    console.log(\"incommingSQLDataArr - 112\", SQLFunctions.incommingSQLDataArr);\n    res.status(200).send(SQLFunctions.incommingSQLDataArr);\n  }, 3000);\n}); // AddSQLData & RegUsers ============================================================\n\napp.post('/SQLData/AddRecord', function (req, res) {\n  addRecord = true;\n  var currentInData = req.body.bodyData;\n  SQLFunctions.runSQLConn(SQLFunctions.buildCorrectSQLStatements('addRecord', currentInData)); //incommingSQLDataArr.push(currentStatement);\n\n  console.log('===================================================================');\n  addRecord = false;\n  emtyDataArrays();\n}); // =================================================================================\n// Run filtering\n\napp.post('/SQLData/filter', function (req, res) {}); // ============================================================================================================================\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "ServerGetSQLData.js"
      ],
      "names": [
        "SQLFunctions",
        "require",
        "userFunctions",
        "SQLConfig",
        "express",
        "jwt",
        "cors",
        "app",
        "use",
        "json",
        "addRecord",
        "inNewRecord",
        "countRegedUser",
        "port",
        "process",
        "env",
        "PORT",
        "serverPort",
        "serverIO",
        "listen",
        "console",
        "log",
        "regedUserList",
        "emtyDataArrays",
        "emtyingArr",
        "createdToken",
        "verifyToken",
        "req",
        "res",
        "next",
        "getInlogedUser",
        "params",
        "user",
        "runSQLConn",
        "buildCorrectSQLStatements",
        "verifyUser",
        "setTimeout",
        "status",
        "send",
        "incommingSQLDataArr",
        "verifyUserData",
        "get",
        "emptyUserData",
        "post",
        "incomingNewUser",
        "body",
        "userReg",
        "incommingUserData",
        "bodyData",
        "returninUserData",
        "validateUser",
        "userMatch",
        "sign",
        "error",
        "token",
        "push",
        "statusMessage",
        "currentInData"
      ],
      "mappings": ";;AAAA,IAAMA,YAAY,GAAGC,OAAO,CAAC,0BAAD,CAA5B;;AACA,IAAMC,aAAa,GAAGD,OAAO,CAAC,2BAAD,CAA7B;;AAEA,IAAME,SAAS,GAAGF,OAAO,CAAC,uBAAD,CAAzB,C,CAEA;;;AACA,IAAMG,OAAO,GAAGH,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAII,GAAG,GAAGJ,OAAO,CAAC,cAAD,CAAjB;;AAEA,IAAIK,IAAI,GAAGL,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAMM,GAAG,GAAGH,OAAO,EAAnB;AACAG,GAAG,CAACC,GAAJ,CAAQJ,OAAO,CAACK,IAAR,EAAR;AACAF,GAAG,CAACC,GAAJ,CAAQF,IAAI,EAAZ;AAEA,IAAII,SAAS,GAAG,KAAhB;AACA,IAAIC,WAAW,GAAG,KAAlB;AACA,IAAIC,cAAc,GAAG,CAArB,C,CAEA;;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoBb,SAAS,CAACc,UAA3C;AACA,IAAIC,QAAQ,GAAGX,GAAG,CAACY,MAAJ,CAAWN,IAAX,EAAiB;AAAA,SAAMO,OAAO,CAACC,GAAR,2CAA+CR,IAA/C,OAAN;AAAA,CAAjB,CAAf,C,CAEA;;AACA,IAAIS,aAAa,GAAGrB,OAAO,CAAC,4BAAD,CAA3B,C,CAEA;;;AAEA,IAAIsB,cAAc,GAAG,SAAjBA,cAAiB,CAACC,UAAD,EAAgB;AACjC;AACAA,EAAAA,UAAU,GAAG,EAAb;AACH,CAHD,C,CAIA;;;AACA,IAAMC,YAAY,GAAG,EAArB,C,CAEA;;AACA,IAAIC,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAmB;AACjC;AACA;AACA;AACI,MAAIC,cAAc,GAAGH,GAAG,CAACI,MAAJ,CAAWC,IAAhC;AACAhC,EAAAA,YAAY,CAACiC,UAAb,CAAwBjC,YAAY,CAACkC,yBAAb,CAAuC,UAAvC,EAAmDJ,cAAnD,CAAxB,EAL6B,CAM7B;;AACA5B,EAAAA,aAAa,CAACiC,UAAd,CAAyBL,cAAzB;AACAM,EAAAA,UAAU,CAAC,YAAM;AACbR,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBtC,YAAY,CAACuC,mBAAlC;AACH,GAFS,EAEP,IAFO,CAAV;AAGAV,EAAAA,IAAI,GAXyB,CAYjC;AACA;AACH,CAdD;;AAeA,IAAIW,cAAc,GAAG,SAAjBA,cAAiB,CAACb,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAmB,CAEvC,CAFD,C,CAIA;AACA;;;AACAtB,GAAG,CAACkC,GAAJ,CAAQ,UAAR,EAAoB,UAACd,GAAD,EAAMC,GAAN,EAAc;AAC9B5B,EAAAA,YAAY,CAAC0C,aAAb;AACA1C,EAAAA,YAAY,CAACiC,UAAb,CAAwBjC,YAAY,CAACkC,yBAAb,CAAuC,WAAvC,EAAoD,EAApD,CAAxB;AACAE,EAAAA,UAAU,CAAC,YAAO;AACdhB,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCrB,YAAY,CAACuC,mBAAhD;AACAX,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBtC,YAAY,CAACuC,mBAAlC;AACH,GAHS,EAGP,IAHO,CAAV;AAIInB,EAAAA,OAAO,CAACC,GAAR,CAAY,6EAAZ;AACP,CARD,E,CASA;;AACAd,GAAG,CAACoC,IAAJ,CAAS,kBAAT,EAA6B,UAAChB,GAAD,EAAMC,GAAN,EAAc;AACvClB,EAAAA,SAAS,GAAG,IAAZ;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,MAAMuB,eAAe,GAAGjB,GAAG,CAACkB,IAA5B,CAHuC,CAGL;;AAElC3C,EAAAA,aAAa,CAAC4C,OAAd,CAAsBF,eAAtB;AACAhB,EAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBM,eAArB;AAGAxB,EAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACAX,EAAAA,SAAS,GAAG,KAAZ;AACAV,EAAAA,YAAY,CAACuB,cAAb;AACH,CAZD,E,CAaA;;AACA;;;;;AAIAhB,GAAG,CAACoC,IAAJ,CAAS,eAAT,EAA0B,UAAChB,GAAD,EAAMC,GAAN,EAAc;AACpC;;AAEA,MAAImB,iBAAiB,GAAGpB,GAAG,CAACkB,IAAJ,CAASG,QAAjC;AACA,MAAIC,gBAAgB,GAAG/C,aAAa,CAACgD,YAAd,CAA2BH,iBAA3B,CAAvB;;AAEA,MAAIE,gBAAgB,CAACE,SAAjB,KAA+B,IAAnC,EAAyC;AACrC9C,IAAAA,GAAG,CAAC+C,IAAJ,CAASH,gBAAT,EAA2B,gBAA3B,EAA6C,UAACI,KAAD,EAAQC,KAAR,EAAkB;AAC/DlC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBiC,KAArB;;AACI,UAAGA,KAAH,EAAS;AACL7B,QAAAA,YAAY,CAAC8B,IAAb,CAAkBD,KAAlB;AACA1B,QAAAA,GAAG,CAAC4B,aAAJ,GAAoB,wBAApB;AACA5B,QAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBgB,KAArB;AACH;;AACD,UAAID,KAAJ,EAAWzB,GAAG,CAACS,MAAJ,CAAW,GAAX;AACd,KARD;AASF;;AAEF,MAAIY,gBAAgB,CAACE,SAAjB,KAA+B,KAAnC,EAA0C;AACtCvB,IAAAA,GAAG,CAAC4B,aAAJ,GAAoB,qBAApB;AACA5B,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,IAArB,EAFsC,CAEV;AAC/B;;AACDW,EAAAA,gBAAgB,GAAG,EAAnB;AACH,CAvBD,E,CAwBA;;AACA1C,GAAG,CAACkC,GAAJ,CAAQ,gBAAR;AAAyB;AAAoB,UAACd,GAAD,EAAMC,GAAN,EAAc;AACvD5B,EAAAA,YAAY,CAAC0C,aAAb;AACA/B,EAAAA,WAAW,GAAG,IAAd;AACA,MAAImB,cAAc,GAAGH,GAAG,CAACI,MAAJ,CAAWC,IAAhC;AACAZ,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCS,cAApC;AAEA9B,EAAAA,YAAY,CAACiC,UAAb,CAAwBjC,YAAY,CAACkC,yBAAb,CAAuC,UAAvC,EAAmDJ,cAAnD,CAAxB,EANuD,CAOvD;;AAEAM,EAAAA,UAAU,CAAC,YAAM;AACbhB,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCrB,YAAY,CAACuC,mBAAtD;AACAX,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBtC,YAAY,CAACuC,mBAAlC;AACH,GAHS,EAGP,IAHO,CAAV;AAIH,CAbD,E,CAcA;;AACAhC,GAAG,CAACoC,IAAJ,CAAS,oBAAT,EAA+B,UAAChB,GAAD,EAAMC,GAAN,EAAc;AACzClB,EAAAA,SAAS,GAAG,IAAZ;AACA,MAAI+C,aAAa,GAAG9B,GAAG,CAACkB,IAAJ,CAASG,QAA7B;AAEAhD,EAAAA,YAAY,CAACiC,UAAb,CAAwBjC,YAAY,CAACkC,yBAAb,CAAuC,WAAvC,EAAoDuB,aAApD,CAAxB,EAJyC,CAKzC;;AACArC,EAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACAX,EAAAA,SAAS,GAAG,KAAZ;AACAa,EAAAA,cAAc;AACjB,CATD,E,CAWA;AAEA;;AACAhB,GAAG,CAACoC,IAAJ,CAAS,iBAAT,EAA4B,UAAChB,GAAD,EAAMC,GAAN,EAAc,CAGzC,CAHD,E,CAKA",
      "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "sourcesContent": [
        "const SQLFunctions = require('./Functions/SQLFunctions'); \r\nconst userFunctions = require('./Functions/UserFunctions');\r\n\r\nconst SQLConfig = require('./Functions/SQLConfig');\r\n\r\n// Basic Server module\r\nconst express = require('express');\r\nlet jwt = require('jsonwebtoken');\r\n\r\nlet cors = require('cors');\r\nconst app = express();\r\napp.use(express.json());\r\napp.use(cors());\r\n\r\nlet addRecord = false;\r\nlet inNewRecord = false; \r\nlet countRegedUser = 0;\r\n\r\n// The server information\r\nconst port = process.env.PORT || SQLConfig.serverPort;\r\nlet serverIO = app.listen(port, () => console.log(`getSQLData is listening on port ${port}!`));\r\n\r\n// All the accessable users for the app\r\nlet regedUserList = require('./Functions/RegedUser.json');\r\n\r\n// Run function for the mehods ================================================================================================\r\n\r\nlet emtyDataArrays = (emtyingArr) => {\r\n    //Emtying the array at the end\r\n    emtyingArr = [];\r\n}\r\n// Validate the user who whants logging in\r\nconst createdToken = [];\r\n\r\n// Middleware according the name\r\nlet verifyToken = (req, res, next) =>{\r\n    //const bearerHeader = req.headers['authorization'].split(' ')[1];\r\n    // check there is a token\r\n    //if (bearerHeader === createdToken[0]) {       \r\n        let getInlogedUser = req.params.user;\r\n        SQLFunctions.runSQLConn(SQLFunctions.buildCorrectSQLStatements('userSpec', getInlogedUser));\r\n        //jwt.verify(bearerHeader, 'inlogSecretKey');\r\n        userFunctions.verifyUser(getInlogedUser)       \r\n        setTimeout(() => {   \r\n            res.status(200).send(SQLFunctions.incommingSQLDataArr);\r\n        }, 3000); \r\n        next();\r\n    //}\r\n    //else res.status(403).send('Authorization failed!');\r\n} \r\nlet verifyUserData = (req, res, next) =>{\r\n\r\n}\r\n\r\n// Run method when requested from client ======================================================================================\r\n// Run Logout  \r\napp.get('/SQLData', (req, res) => {\r\n    SQLFunctions.emptyUserData();\r\n    SQLFunctions.runSQLConn(SQLFunctions.buildCorrectSQLStatements('first run', '')); \r\n    setTimeout(()  => {\r\n        console.log(\"incommingSQLDataArr\", SQLFunctions.incommingSQLDataArr)\r\n        res.status(200).send(SQLFunctions.incommingSQLDataArr);\r\n    }, 1000);  \r\n        console.log('=========================userSpec==========================================');\r\n});\r\n// UserReg =========================================================================\r\napp.post('/SQLData/UserReg', (req, res) => {\r\n    addRecord = true;\r\n    console.log('116');\r\n    const incomingNewUser = req.body; // Axios add, bodyData\r\n\r\n    userFunctions.userReg(incomingNewUser);\r\n    res.status(200).send(incomingNewUser);\r\n\r\n\r\n    console.log('===================================================================');\r\n    addRecord = false;\r\n    SQLFunctions.emtyDataArrays();\r\n});\r\n// User loging in =============================================================================================================\r\n/* \r\n    Request a UserValidation and store the unser as a token --> the token sending back as a response.\r\n    When the user is logedin there is a getmethos for collecting the user specefic data and sending back to the app\r\n*/\r\napp.post('/SQLData/Auth', (req, res) => {\r\n    /*  The userdata is incomming and send into he function to validate the Logging in user:\r\n        if = true, the code = 200 is send back together with a tokem else the code = 404 is send with no data */\r\n    let incommingUserData = req.body.bodyData;\r\n    let returninUserData = userFunctions.validateUser(incommingUserData);\r\n     \r\n    if (returninUserData.userMatch === true) {        \r\n        jwt.sign(returninUserData, 'inlogSecretKey', (error, token) => {\r\n        console.log(\"token\", token)\r\n            if(token){\r\n                createdToken.push(token);\r\n                res.statusMessage = \"You are authenticated'\";\r\n                res.status(200).send(token);\r\n            }\r\n            if (error) res.status(500);             \r\n        });        \r\n     }    \r\n\r\n    if (returninUserData.userMatch === false) {\r\n        res.statusMessage = \"User does not find!\";\r\n        res.status(203).send(null); // User is unmatch\r\n    }\r\n    returninUserData = {};\r\n});\r\n// Requested userData is send back if the token is the same as created\r\napp.get('/SQLData/:user',/*  verifyToken, */ (req, res) => {\r\n    SQLFunctions.emptyUserData();\r\n    inNewRecord = true;\r\n    let getInlogedUser = req.params.user;\r\n    console.log(\"getInlogedUser - 111\", getInlogedUser)\r\n    \r\n    SQLFunctions.runSQLConn(SQLFunctions.buildCorrectSQLStatements('userSpec', getInlogedUser));\r\n    //jwt.verify(bearerHeader, 'inlogSecretKey');\r\n    \r\n    setTimeout(() => {   \r\n        console.log(\"incommingSQLDataArr - 112\", SQLFunctions.incommingSQLDataArr)\r\n        res.status(200).send(SQLFunctions.incommingSQLDataArr);\r\n    }, 3000); \r\n});\r\n// AddSQLData & RegUsers ============================================================\r\napp.post('/SQLData/AddRecord', (req, res) => {\r\n    addRecord = true;\r\n    let currentInData = req.body.bodyData;\r\n\r\n    SQLFunctions.runSQLConn(SQLFunctions.buildCorrectSQLStatements('addRecord', currentInData));\r\n    //incommingSQLDataArr.push(currentStatement);\r\n    console.log('===================================================================');\r\n    addRecord = false;\r\n    emtyDataArrays();\r\n});\r\n\r\n// =================================================================================\r\n\r\n// Run filtering\r\napp.post('/SQLData/filter', (req, res) => {\r\n    \r\n\r\n});\r\n\r\n// ============================================================================================================================ "
      ]
    },
    "sourceType": "script",
    "mtime": 1585215956912
  },
  "{\"sourceRoot\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"filename\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\\\\SQLFunction.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "filename": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\SQLFunction.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\SQLFunction.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\SQLFunction.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
        "sourceFileName": "SQLFunction.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildCorrectSQLStatements = exports.runSQLConn = exports.test = exports.incommingSQLDataArr = void 0;\n\n//SQL Config\nvar mysql = require('mysql');\n\nvar SQLConfig = require('./SQLConfig');\n\nvar incommingSQLDataArr = [];\nexports.incommingSQLDataArr = incommingSQLDataArr;\nvar currentStatement = '';\nvar choosenStatement = '';\nvar count = 0;\nvar defaultStatement = \"SELECT * FROM \".concat(SQLConfig.SQLTable);\nvar test = 2;\nexports.test = test;\n\nvar runSQLConn = function runSQLConn(SQLStatement) {\n  count++;\n  console.log(\"K\\xF6rning - \".concat(count)); // Creates a connection between the server and my client and listen for SQL changes¨\n  //let SQLConn = mysql.createConnection([{multipleStatements: true}, 'mysql://djcp7bmvky3s0mnm:osp74zwrq5ut4gun@m60mxazb4g6sb4nn.chr7pe7iynqr.eu-west-1.rds.amazonaws.com:3306/q3uqurm7z68qb3h2']);\n\n  console.log(\"Ansluten till DB :)\");\n  var SQLConn = mysql.createConnection({\n    host: SQLConfig.host,\n    user: SQLConfig.user,\n    password: SQLConfig.password,\n    port: SQLConfig.sqlPort,\n    database: SQLConfig.database,\n    multipleStatements: SQLConfig.multipleStatements\n  });\n  SQLConn.connect(function (err) {\n    if (err) throw err;\n    SQLConn.query(SQLStatement, function (err, sqlResult) {\n      console.log('85');\n      incommingSQLDataArr.push(sqlResult); //console.log(\"incommingSQLDataArr - 43\", incommingSQLDataArr)\n\n      if (err) {\n        //SQLConn.release();\n        return;\n      }\n    });\n    SQLConn.end();\n  });\n  console.log(\"incommingSQLDataArr - 67\", incommingSQLDataArr);\n};\n\nexports.runSQLConn = runSQLConn;\n\nvar buildCorrectSQLStatements = function buildCorrectSQLStatements(statementType, SQLObj) {\n  // Find correct SQLStatement\n  var statementCols = 'date, activity, state, concerned, type, place, content';\n  if (statementType === 'first run') choosenStatement = \"SELECT * FROM \".concat(SQLConfig.SQLTable, \" ORDER BY date DESC\");\n\n  if (statementType === 'addRecord') {\n    var statementInsertIntoData = \"('\".concat(SQLObj.join(\"','\"), \"');\");\n    choosenStatement = \"INSERT INTO \".concat(SQLConfig.SQLTable, \" (sent, \").concat(statementCols, \") VALUES\").concat(statementInsertIntoData);\n  }\n\n  if (statementType === 'userSpec') {\n    choosenStatement = \"SELECT * FROM \".concat(SQLConfig.SQLTable, \" WHERE userName=\").concat(SQLObj, \" ORDER BY date DESC\");\n  } //if (statementType === 'filter') choosenStatement = `SELECT * FROM data ${SQLObj.currentStatement.operator} ${ SQLObj.currentStatement.filterIn } in ('${ SQLObj.currentStatement.SQLFilterStr}')`;\n\n\n  currentStatement = choosenStatement;\n  console.log('116');\n  console.log(currentStatement);\n  return currentStatement;\n}; //Function to choose correct statement according the inomming data\n\n\nexports.buildCorrectSQLStatements = buildCorrectSQLStatements;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNRTEZ1bmN0aW9uLmpzIl0sIm5hbWVzIjpbIm15c3FsIiwicmVxdWlyZSIsIlNRTENvbmZpZyIsImluY29tbWluZ1NRTERhdGFBcnIiLCJjdXJyZW50U3RhdGVtZW50IiwiY2hvb3NlblN0YXRlbWVudCIsImNvdW50IiwiZGVmYXVsdFN0YXRlbWVudCIsIlNRTFRhYmxlIiwidGVzdCIsInJ1blNRTENvbm4iLCJTUUxTdGF0ZW1lbnQiLCJjb25zb2xlIiwibG9nIiwiU1FMQ29ubiIsImNyZWF0ZUNvbm5lY3Rpb24iLCJob3N0IiwidXNlciIsInBhc3N3b3JkIiwicG9ydCIsInNxbFBvcnQiLCJkYXRhYmFzZSIsIm11bHRpcGxlU3RhdGVtZW50cyIsImNvbm5lY3QiLCJlcnIiLCJxdWVyeSIsInNxbFJlc3VsdCIsInB1c2giLCJlbmQiLCJidWlsZENvcnJlY3RTUUxTdGF0ZW1lbnRzIiwic3RhdGVtZW50VHlwZSIsIlNRTE9iaiIsInN0YXRlbWVudENvbHMiLCJzdGF0ZW1lbnRJbnNlcnRJbnRvRGF0YSIsImpvaW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBLElBQUlBLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBbkI7O0FBQ0EsSUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsYUFBRCxDQUF6Qjs7QUFDTyxJQUFJRSxtQkFBbUIsR0FBRyxFQUExQjs7QUFDUCxJQUFJQyxnQkFBZ0IsR0FBRyxFQUF2QjtBQUNBLElBQUlDLGdCQUFnQixHQUFHLEVBQXZCO0FBQ0EsSUFBSUMsS0FBSyxHQUFHLENBQVo7QUFFQSxJQUFJQyxnQkFBZ0IsMkJBQW9CTCxTQUFTLENBQUNNLFFBQTlCLENBQXBCO0FBRU8sSUFBSUMsSUFBSSxHQUFHLENBQVg7OztBQUVBLElBQUlDLFVBQVUsR0FBRyxTQUFiQSxVQUFhLENBQUNDLFlBQUQsRUFBaUI7QUFFckNMLEVBQUFBLEtBQUs7QUFDTE0sRUFBQUEsT0FBTyxDQUFDQyxHQUFSLHdCQUF5QlAsS0FBekIsR0FIcUMsQ0FJckM7QUFDQTs7QUFFQU0sRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVkscUJBQVo7QUFDQSxNQUFJQyxPQUFPLEdBQUdkLEtBQUssQ0FBQ2UsZ0JBQU4sQ0FBdUI7QUFDakNDLElBQUFBLElBQUksRUFBRWQsU0FBUyxDQUFDYyxJQURpQjtBQUVqQ0MsSUFBQUEsSUFBSSxFQUFFZixTQUFTLENBQUNlLElBRmlCO0FBR2pDQyxJQUFBQSxRQUFRLEVBQUVoQixTQUFTLENBQUNnQixRQUhhO0FBSWpDQyxJQUFBQSxJQUFJLEVBQUVqQixTQUFTLENBQUNrQixPQUppQjtBQUtqQ0MsSUFBQUEsUUFBUSxFQUFFbkIsU0FBUyxDQUFDbUIsUUFMYTtBQU1qQ0MsSUFBQUEsa0JBQWtCLEVBQUVwQixTQUFTLENBQUNvQjtBQU5HLEdBQXZCLENBQWQ7QUFRQVIsRUFBQUEsT0FBTyxDQUFDUyxPQUFSLENBQWdCLFVBQVNDLEdBQVQsRUFBYztBQUMxQixRQUFJQSxHQUFKLEVBQVMsTUFBTUEsR0FBTjtBQUNUVixJQUFBQSxPQUFPLENBQUNXLEtBQVIsQ0FBY2QsWUFBZCxFQUE0QixVQUFVYSxHQUFWLEVBQWVFLFNBQWYsRUFBMEI7QUFDbERkLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLElBQVo7QUFDQVYsTUFBQUEsbUJBQW1CLENBQUN3QixJQUFwQixDQUF5QkQsU0FBekIsRUFGa0QsQ0FHbEQ7O0FBQ0EsVUFBSUYsR0FBSixFQUFTO0FBQ0w7QUFDQTtBQUNIO0FBQ0osS0FSRDtBQVNBVixJQUFBQSxPQUFPLENBQUNjLEdBQVI7QUFDSCxHQVpEO0FBYUFoQixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSwwQkFBWixFQUF3Q1YsbUJBQXhDO0FBQ0gsQ0E5Qk07Ozs7QUErQkEsSUFBSTBCLHlCQUF5QixHQUFHLFNBQTVCQSx5QkFBNEIsQ0FBQ0MsYUFBRCxFQUFnQkMsTUFBaEIsRUFBMEI7QUFBRTtBQUMvRCxNQUFJQyxhQUFhLEdBQUcsd0RBQXBCO0FBRUEsTUFBSUYsYUFBYSxLQUFLLFdBQXRCLEVBQW1DekIsZ0JBQWdCLDJCQUFvQkgsU0FBUyxDQUFDTSxRQUE5Qix3QkFBaEI7O0FBRW5DLE1BQUlzQixhQUFhLEtBQUssV0FBdEIsRUFBbUM7QUFDL0IsUUFBSUcsdUJBQXVCLGVBQVNGLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLEtBQVosQ0FBVCxRQUEzQjtBQUNBN0IsSUFBQUEsZ0JBQWdCLHlCQUFtQkgsU0FBUyxDQUFDTSxRQUE3QixxQkFBaUR3QixhQUFqRCxxQkFBMkVDLHVCQUEzRSxDQUFoQjtBQUNIOztBQUdELE1BQUlILGFBQWEsS0FBSyxVQUF0QixFQUFrQztBQUM5QnpCLElBQUFBLGdCQUFnQiwyQkFBb0JILFNBQVMsQ0FBQ00sUUFBOUIsNkJBQTBEdUIsTUFBMUQsd0JBQWhCO0FBQ0gsR0FiNEQsQ0FlN0Q7OztBQUVBM0IsRUFBQUEsZ0JBQWdCLEdBQUdDLGdCQUFuQjtBQUNBTyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxLQUFaO0FBQ0FELEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZVCxnQkFBWjtBQUVBLFNBQU9BLGdCQUFQO0FBQ0gsQ0F0Qk0sQyxDQXVCSCIsInNvdXJjZVJvb3QiOiJEOlxcV2ViXFxIQkdXb3Jrc1xcU2NoZWR1a2VBcHBcXFNlcnZlckhlcm9rdSIsInNvdXJjZXNDb250ZW50IjpbIi8vU1FMIENvbmZpZ1xyXG52YXIgbXlzcWwgPSByZXF1aXJlKCdteXNxbCcpO1xyXG5jb25zdCBTUUxDb25maWcgPSByZXF1aXJlKCcuL1NRTENvbmZpZycpO1xyXG5leHBvcnQgbGV0IGluY29tbWluZ1NRTERhdGFBcnIgPSBbXTtcclxubGV0IGN1cnJlbnRTdGF0ZW1lbnQgPSAnJztcclxubGV0IGNob29zZW5TdGF0ZW1lbnQgPSAnJztcclxubGV0IGNvdW50ID0gMDtcclxuXHJcbmxldCBkZWZhdWx0U3RhdGVtZW50ID0gYFNFTEVDVCAqIEZST00gJHtTUUxDb25maWcuU1FMVGFibGV9YDtcclxuXHJcbmV4cG9ydCBsZXQgdGVzdCA9IDI7XHJcblxyXG5leHBvcnQgbGV0IHJ1blNRTENvbm4gPSAoU1FMU3RhdGVtZW50KSA9PnsgICAgICAgIFxyXG5cclxuICAgIGNvdW50Kys7XHJcbiAgICBjb25zb2xlLmxvZyhgS8O2cm5pbmcgLSAke2NvdW50fWApO1xyXG4gICAgLy8gQ3JlYXRlcyBhIGNvbm5lY3Rpb24gYmV0d2VlbiB0aGUgc2VydmVyIGFuZCBteSBjbGllbnQgYW5kIGxpc3RlbiBmb3IgU1FMIGNoYW5nZXPCqFxyXG4gICAgLy9sZXQgU1FMQ29ubiA9IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oW3ttdWx0aXBsZVN0YXRlbWVudHM6IHRydWV9LCAnbXlzcWw6Ly9kamNwN2Jtdmt5M3MwbW5tOm9zcDc0endycTV1dDRndW5AbTYwbXhhemI0ZzZzYjRubi5jaHI3cGU3aXlucXIuZXUtd2VzdC0xLnJkcy5hbWF6b25hd3MuY29tOjMzMDYvcTN1cXVybTd6NjhxYjNoMiddKTtcclxuXHJcbiAgICBjb25zb2xlLmxvZyhcIkFuc2x1dGVuIHRpbGwgREIgOilcIik7XHJcbiAgICBsZXQgU1FMQ29ubiA9IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oe1xyXG4gICAgICAgIGhvc3Q6IFNRTENvbmZpZy5ob3N0LFxyXG4gICAgICAgIHVzZXI6IFNRTENvbmZpZy51c2VyLFxyXG4gICAgICAgIHBhc3N3b3JkOiBTUUxDb25maWcucGFzc3dvcmQsXHJcbiAgICAgICAgcG9ydDogU1FMQ29uZmlnLnNxbFBvcnQsXHJcbiAgICAgICAgZGF0YWJhc2U6IFNRTENvbmZpZy5kYXRhYmFzZSxcclxuICAgICAgICBtdWx0aXBsZVN0YXRlbWVudHM6IFNRTENvbmZpZy5tdWx0aXBsZVN0YXRlbWVudHMsXHJcbiAgICB9KTtcclxuICAgIFNRTENvbm4uY29ubmVjdChmdW5jdGlvbihlcnIpIHsgXHJcbiAgICAgICAgaWYgKGVycikgdGhyb3cgZXJyOyAgICAgICAgXHJcbiAgICAgICAgU1FMQ29ubi5xdWVyeShTUUxTdGF0ZW1lbnQsIGZ1bmN0aW9uIChlcnIsIHNxbFJlc3VsdCkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnODUnKTtcclxuICAgICAgICAgICAgaW5jb21taW5nU1FMRGF0YUFyci5wdXNoKHNxbFJlc3VsdCk7XHJcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coXCJpbmNvbW1pbmdTUUxEYXRhQXJyIC0gNDNcIiwgaW5jb21taW5nU1FMRGF0YUFycilcclxuICAgICAgICAgICAgaWYgKGVycikge1xyXG4gICAgICAgICAgICAgICAgLy9TUUxDb25uLnJlbGVhc2UoKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pOyBcclxuICAgICAgICBTUUxDb25uLmVuZCgpO1xyXG4gICAgfSk7XHJcbiAgICBjb25zb2xlLmxvZyhcImluY29tbWluZ1NRTERhdGFBcnIgLSA2N1wiLCBpbmNvbW1pbmdTUUxEYXRhQXJyKTtcclxufVxyXG5leHBvcnQgbGV0IGJ1aWxkQ29ycmVjdFNRTFN0YXRlbWVudHMgPSAoc3RhdGVtZW50VHlwZSwgU1FMT2JqKSA9PnsgLy8gRmluZCBjb3JyZWN0IFNRTFN0YXRlbWVudFxyXG4gICAgbGV0IHN0YXRlbWVudENvbHMgPSAnZGF0ZSwgYWN0aXZpdHksIHN0YXRlLCBjb25jZXJuZWQsIHR5cGUsIHBsYWNlLCBjb250ZW50JzsgICAgXHJcbiAgICBcclxuICAgIGlmIChzdGF0ZW1lbnRUeXBlID09PSAnZmlyc3QgcnVuJykgY2hvb3NlblN0YXRlbWVudCA9IGBTRUxFQ1QgKiBGUk9NICR7U1FMQ29uZmlnLlNRTFRhYmxlfSBPUkRFUiBCWSBkYXRlIERFU0NgO1xyXG4gICAgXHJcbiAgICBpZiAoc3RhdGVtZW50VHlwZSA9PT0gJ2FkZFJlY29yZCcpIHtcclxuICAgICAgICBsZXQgc3RhdGVtZW50SW5zZXJ0SW50b0RhdGEgPSBgKCckeyBTUUxPYmouam9pbihcIicsJ1wiKX0nKTtgO1xyXG4gICAgICAgIGNob29zZW5TdGF0ZW1lbnQgPSBgSU5TRVJUIElOVE8gJHsgU1FMQ29uZmlnLlNRTFRhYmxlfSAoc2VudCwgJHsgc3RhdGVtZW50Q29scyB9KSBWQUxVRVMkeyBzdGF0ZW1lbnRJbnNlcnRJbnRvRGF0YX1gOyAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgaWYgKHN0YXRlbWVudFR5cGUgPT09ICd1c2VyU3BlYycpIHtcclxuICAgICAgICBjaG9vc2VuU3RhdGVtZW50ID0gYFNFTEVDVCAqIEZST00gJHtTUUxDb25maWcuU1FMVGFibGV9IFdIRVJFIHVzZXJOYW1lPSR7IFNRTE9iaiB9IE9SREVSIEJZIGRhdGUgREVTQ2A7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vaWYgKHN0YXRlbWVudFR5cGUgPT09ICdmaWx0ZXInKSBjaG9vc2VuU3RhdGVtZW50ID0gYFNFTEVDVCAqIEZST00gZGF0YSAke1NRTE9iai5jdXJyZW50U3RhdGVtZW50Lm9wZXJhdG9yfSAkeyBTUUxPYmouY3VycmVudFN0YXRlbWVudC5maWx0ZXJJbiB9IGluICgnJHsgU1FMT2JqLmN1cnJlbnRTdGF0ZW1lbnQuU1FMRmlsdGVyU3RyfScpYDtcclxuICAgIFxyXG4gICAgY3VycmVudFN0YXRlbWVudCA9IGNob29zZW5TdGF0ZW1lbnQ7XHJcbiAgICBjb25zb2xlLmxvZygnMTE2Jyk7XHJcbiAgICBjb25zb2xlLmxvZyhjdXJyZW50U3RhdGVtZW50KTtcclxuICAgIFxyXG4gICAgcmV0dXJuIGN1cnJlbnRTdGF0ZW1lbnQ7XHJcbn1cclxuICAgIC8vRnVuY3Rpb24gdG8gY2hvb3NlIGNvcnJlY3Qgc3RhdGVtZW50IGFjY29yZGluZyB0aGUgaW5vbW1pbmcgZGF0YSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "SQLFunction.js"
      ],
      "names": [
        "mysql",
        "require",
        "SQLConfig",
        "incommingSQLDataArr",
        "currentStatement",
        "choosenStatement",
        "count",
        "defaultStatement",
        "SQLTable",
        "test",
        "runSQLConn",
        "SQLStatement",
        "console",
        "log",
        "SQLConn",
        "createConnection",
        "host",
        "user",
        "password",
        "port",
        "sqlPort",
        "database",
        "multipleStatements",
        "connect",
        "err",
        "query",
        "sqlResult",
        "push",
        "end",
        "buildCorrectSQLStatements",
        "statementType",
        "SQLObj",
        "statementCols",
        "statementInsertIntoData",
        "join"
      ],
      "mappings": ";;;;;;;AAAA;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAzB;;AACO,IAAIE,mBAAmB,GAAG,EAA1B;;AACP,IAAIC,gBAAgB,GAAG,EAAvB;AACA,IAAIC,gBAAgB,GAAG,EAAvB;AACA,IAAIC,KAAK,GAAG,CAAZ;AAEA,IAAIC,gBAAgB,2BAAoBL,SAAS,CAACM,QAA9B,CAApB;AAEO,IAAIC,IAAI,GAAG,CAAX;;;AAEA,IAAIC,UAAU,GAAG,SAAbA,UAAa,CAACC,YAAD,EAAiB;AAErCL,EAAAA,KAAK;AACLM,EAAAA,OAAO,CAACC,GAAR,wBAAyBP,KAAzB,GAHqC,CAIrC;AACA;;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,MAAIC,OAAO,GAAGd,KAAK,CAACe,gBAAN,CAAuB;AACjCC,IAAAA,IAAI,EAAEd,SAAS,CAACc,IADiB;AAEjCC,IAAAA,IAAI,EAAEf,SAAS,CAACe,IAFiB;AAGjCC,IAAAA,QAAQ,EAAEhB,SAAS,CAACgB,QAHa;AAIjCC,IAAAA,IAAI,EAAEjB,SAAS,CAACkB,OAJiB;AAKjCC,IAAAA,QAAQ,EAAEnB,SAAS,CAACmB,QALa;AAMjCC,IAAAA,kBAAkB,EAAEpB,SAAS,CAACoB;AANG,GAAvB,CAAd;AAQAR,EAAAA,OAAO,CAACS,OAAR,CAAgB,UAASC,GAAT,EAAc;AAC1B,QAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTV,IAAAA,OAAO,CAACW,KAAR,CAAcd,YAAd,EAA4B,UAAUa,GAAV,EAAeE,SAAf,EAA0B;AAClDd,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAV,MAAAA,mBAAmB,CAACwB,IAApB,CAAyBD,SAAzB,EAFkD,CAGlD;;AACA,UAAIF,GAAJ,EAAS;AACL;AACA;AACH;AACJ,KARD;AASAV,IAAAA,OAAO,CAACc,GAAR;AACH,GAZD;AAaAhB,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCV,mBAAxC;AACH,CA9BM;;;;AA+BA,IAAI0B,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,aAAD,EAAgBC,MAAhB,EAA0B;AAAE;AAC/D,MAAIC,aAAa,GAAG,wDAApB;AAEA,MAAIF,aAAa,KAAK,WAAtB,EAAmCzB,gBAAgB,2BAAoBH,SAAS,CAACM,QAA9B,wBAAhB;;AAEnC,MAAIsB,aAAa,KAAK,WAAtB,EAAmC;AAC/B,QAAIG,uBAAuB,eAASF,MAAM,CAACG,IAAP,CAAY,KAAZ,CAAT,QAA3B;AACA7B,IAAAA,gBAAgB,yBAAmBH,SAAS,CAACM,QAA7B,qBAAiDwB,aAAjD,qBAA2EC,uBAA3E,CAAhB;AACH;;AAGD,MAAIH,aAAa,KAAK,UAAtB,EAAkC;AAC9BzB,IAAAA,gBAAgB,2BAAoBH,SAAS,CAACM,QAA9B,6BAA0DuB,MAA1D,wBAAhB;AACH,GAb4D,CAe7D;;;AAEA3B,EAAAA,gBAAgB,GAAGC,gBAAnB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYT,gBAAZ;AAEA,SAAOA,gBAAP;AACH,CAtBM,C,CAuBH",
      "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "sourcesContent": [
        "//SQL Config\r\nvar mysql = require('mysql');\r\nconst SQLConfig = require('./SQLConfig');\r\nexport let incommingSQLDataArr = [];\r\nlet currentStatement = '';\r\nlet choosenStatement = '';\r\nlet count = 0;\r\n\r\nlet defaultStatement = `SELECT * FROM ${SQLConfig.SQLTable}`;\r\n\r\nexport let test = 2;\r\n\r\nexport let runSQLConn = (SQLStatement) =>{        \r\n\r\n    count++;\r\n    console.log(`Körning - ${count}`);\r\n    // Creates a connection between the server and my client and listen for SQL changes¨\r\n    //let SQLConn = mysql.createConnection([{multipleStatements: true}, 'mysql://djcp7bmvky3s0mnm:osp74zwrq5ut4gun@m60mxazb4g6sb4nn.chr7pe7iynqr.eu-west-1.rds.amazonaws.com:3306/q3uqurm7z68qb3h2']);\r\n\r\n    console.log(\"Ansluten till DB :)\");\r\n    let SQLConn = mysql.createConnection({\r\n        host: SQLConfig.host,\r\n        user: SQLConfig.user,\r\n        password: SQLConfig.password,\r\n        port: SQLConfig.sqlPort,\r\n        database: SQLConfig.database,\r\n        multipleStatements: SQLConfig.multipleStatements,\r\n    });\r\n    SQLConn.connect(function(err) { \r\n        if (err) throw err;        \r\n        SQLConn.query(SQLStatement, function (err, sqlResult) {\r\n            console.log('85');\r\n            incommingSQLDataArr.push(sqlResult);\r\n            //console.log(\"incommingSQLDataArr - 43\", incommingSQLDataArr)\r\n            if (err) {\r\n                //SQLConn.release();\r\n                return;\r\n            }\r\n        }); \r\n        SQLConn.end();\r\n    });\r\n    console.log(\"incommingSQLDataArr - 67\", incommingSQLDataArr);\r\n}\r\nexport let buildCorrectSQLStatements = (statementType, SQLObj) =>{ // Find correct SQLStatement\r\n    let statementCols = 'date, activity, state, concerned, type, place, content';    \r\n    \r\n    if (statementType === 'first run') choosenStatement = `SELECT * FROM ${SQLConfig.SQLTable} ORDER BY date DESC`;\r\n    \r\n    if (statementType === 'addRecord') {\r\n        let statementInsertIntoData = `('${ SQLObj.join(\"','\")}');`;\r\n        choosenStatement = `INSERT INTO ${ SQLConfig.SQLTable} (sent, ${ statementCols }) VALUES${ statementInsertIntoData}`;  \r\n    }\r\n    \r\n    \r\n    if (statementType === 'userSpec') {\r\n        choosenStatement = `SELECT * FROM ${SQLConfig.SQLTable} WHERE userName=${ SQLObj } ORDER BY date DESC`;\r\n    }\r\n    \r\n    //if (statementType === 'filter') choosenStatement = `SELECT * FROM data ${SQLObj.currentStatement.operator} ${ SQLObj.currentStatement.filterIn } in ('${ SQLObj.currentStatement.SQLFilterStr}')`;\r\n    \r\n    currentStatement = choosenStatement;\r\n    console.log('116');\r\n    console.log(currentStatement);\r\n    \r\n    return currentStatement;\r\n}\r\n    //Function to choose correct statement according the inomming data"
      ]
    },
    "sourceType": "script",
    "mtime": 1584021344732
  },
  "{\"sourceRoot\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\\\\Functions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"filename\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\\\\Functions\\\\SQLFunction.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "filename": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions\\SQLFunction.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions\\SQLFunction.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions\\SQLFunction.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions",
        "sourceFileName": "SQLFunction.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildCorrectSQLStatements = exports.runSQLConn = exports.test = exports.incommingSQLDataArr = void 0;\n\n//SQL Config\nvar mysql = require('mysql');\n\nvar SQLConfig = require('./SQLConfig');\n\nvar incommingSQLDataArr = [];\nexports.incommingSQLDataArr = incommingSQLDataArr;\nvar currentStatement = '';\nvar choosenStatement = '';\nvar count = 0;\nvar defaultStatement = \"SELECT * FROM \".concat(SQLConfig.SQLTable);\nvar test = 2;\nexports.test = test;\n\nvar runSQLConn = function runSQLConn(SQLStatement) {\n  count++;\n  console.log(\"K\\xF6rning - \".concat(count)); // Creates a connection between the server and my client and listen for SQL changes¨\n  //let SQLConn = mysql.createConnection([{multipleStatements: true}, 'mysql://djcp7bmvky3s0mnm:osp74zwrq5ut4gun@m60mxazb4g6sb4nn.chr7pe7iynqr.eu-west-1.rds.amazonaws.com:3306/q3uqurm7z68qb3h2']);\n\n  console.log(\"Ansluten till DB :)\");\n  var SQLConn = mysql.createConnection({\n    host: SQLConfig.host,\n    user: SQLConfig.user,\n    password: SQLConfig.password,\n    port: SQLConfig.sqlPort,\n    database: SQLConfig.database,\n    multipleStatements: SQLConfig.multipleStatements\n  });\n  SQLConn.connect(function (err) {\n    if (err) throw err;\n    SQLConn.query(SQLStatement, function (err, sqlResult) {\n      console.log('85');\n      incommingSQLDataArr.push(sqlResult); //console.log(\"incommingSQLDataArr - 43\", incommingSQLDataArr)\n\n      if (err) {\n        //SQLConn.release();\n        return;\n      }\n    });\n    SQLConn.end();\n  });\n  console.log(\"incommingSQLDataArr - 67\", incommingSQLDataArr);\n};\n\nexports.runSQLConn = runSQLConn;\n\nvar buildCorrectSQLStatements = function buildCorrectSQLStatements(statementType, SQLObj) {\n  // Find correct SQLStatement\n  var statementCols = 'date, activity, state, concerned, type, place, content';\n  if (statementType === 'first run') choosenStatement = \"SELECT * FROM \".concat(SQLConfig.SQLTable, \" ORDER BY date DESC\");\n\n  if (statementType === 'addRecord') {\n    var statementInsertIntoData = \"('\".concat(SQLObj.join(\"','\"), \"');\");\n    choosenStatement = \"INSERT INTO \".concat(SQLConfig.SQLTable, \" (sent, \").concat(statementCols, \") VALUES\").concat(statementInsertIntoData);\n  }\n\n  if (statementType === 'userSpec') {\n    choosenStatement = \"SELECT * FROM \".concat(SQLConfig.SQLTable, \" WHERE userName=\").concat(SQLObj, \" ORDER BY date DESC\");\n  } //if (statementType === 'filter') choosenStatement = `SELECT * FROM data ${SQLObj.currentStatement.operator} ${ SQLObj.currentStatement.filterIn } in ('${ SQLObj.currentStatement.SQLFilterStr}')`;\n\n\n  currentStatement = choosenStatement;\n  console.log('116');\n  console.log(currentStatement);\n  return currentStatement;\n}; //Function to choose correct statement according the inomming data\n\n\nexports.buildCorrectSQLStatements = buildCorrectSQLStatements;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNRTEZ1bmN0aW9uLmpzIl0sIm5hbWVzIjpbIm15c3FsIiwicmVxdWlyZSIsIlNRTENvbmZpZyIsImluY29tbWluZ1NRTERhdGFBcnIiLCJjdXJyZW50U3RhdGVtZW50IiwiY2hvb3NlblN0YXRlbWVudCIsImNvdW50IiwiZGVmYXVsdFN0YXRlbWVudCIsIlNRTFRhYmxlIiwidGVzdCIsInJ1blNRTENvbm4iLCJTUUxTdGF0ZW1lbnQiLCJjb25zb2xlIiwibG9nIiwiU1FMQ29ubiIsImNyZWF0ZUNvbm5lY3Rpb24iLCJob3N0IiwidXNlciIsInBhc3N3b3JkIiwicG9ydCIsInNxbFBvcnQiLCJkYXRhYmFzZSIsIm11bHRpcGxlU3RhdGVtZW50cyIsImNvbm5lY3QiLCJlcnIiLCJxdWVyeSIsInNxbFJlc3VsdCIsInB1c2giLCJlbmQiLCJidWlsZENvcnJlY3RTUUxTdGF0ZW1lbnRzIiwic3RhdGVtZW50VHlwZSIsIlNRTE9iaiIsInN0YXRlbWVudENvbHMiLCJzdGF0ZW1lbnRJbnNlcnRJbnRvRGF0YSIsImpvaW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBLElBQUlBLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBbkI7O0FBQ0EsSUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsYUFBRCxDQUF6Qjs7QUFDTyxJQUFJRSxtQkFBbUIsR0FBRyxFQUExQjs7QUFDUCxJQUFJQyxnQkFBZ0IsR0FBRyxFQUF2QjtBQUNBLElBQUlDLGdCQUFnQixHQUFHLEVBQXZCO0FBQ0EsSUFBSUMsS0FBSyxHQUFHLENBQVo7QUFFQSxJQUFJQyxnQkFBZ0IsMkJBQW9CTCxTQUFTLENBQUNNLFFBQTlCLENBQXBCO0FBRU8sSUFBSUMsSUFBSSxHQUFHLENBQVg7OztBQUVBLElBQUlDLFVBQVUsR0FBRyxTQUFiQSxVQUFhLENBQUNDLFlBQUQsRUFBaUI7QUFFckNMLEVBQUFBLEtBQUs7QUFDTE0sRUFBQUEsT0FBTyxDQUFDQyxHQUFSLHdCQUF5QlAsS0FBekIsR0FIcUMsQ0FJckM7QUFDQTs7QUFFQU0sRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVkscUJBQVo7QUFDQSxNQUFJQyxPQUFPLEdBQUdkLEtBQUssQ0FBQ2UsZ0JBQU4sQ0FBdUI7QUFDakNDLElBQUFBLElBQUksRUFBRWQsU0FBUyxDQUFDYyxJQURpQjtBQUVqQ0MsSUFBQUEsSUFBSSxFQUFFZixTQUFTLENBQUNlLElBRmlCO0FBR2pDQyxJQUFBQSxRQUFRLEVBQUVoQixTQUFTLENBQUNnQixRQUhhO0FBSWpDQyxJQUFBQSxJQUFJLEVBQUVqQixTQUFTLENBQUNrQixPQUppQjtBQUtqQ0MsSUFBQUEsUUFBUSxFQUFFbkIsU0FBUyxDQUFDbUIsUUFMYTtBQU1qQ0MsSUFBQUEsa0JBQWtCLEVBQUVwQixTQUFTLENBQUNvQjtBQU5HLEdBQXZCLENBQWQ7QUFRQVIsRUFBQUEsT0FBTyxDQUFDUyxPQUFSLENBQWdCLFVBQVNDLEdBQVQsRUFBYztBQUMxQixRQUFJQSxHQUFKLEVBQVMsTUFBTUEsR0FBTjtBQUNUVixJQUFBQSxPQUFPLENBQUNXLEtBQVIsQ0FBY2QsWUFBZCxFQUE0QixVQUFVYSxHQUFWLEVBQWVFLFNBQWYsRUFBMEI7QUFDbERkLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLElBQVo7QUFDQVYsTUFBQUEsbUJBQW1CLENBQUN3QixJQUFwQixDQUF5QkQsU0FBekIsRUFGa0QsQ0FHbEQ7O0FBQ0EsVUFBSUYsR0FBSixFQUFTO0FBQ0w7QUFDQTtBQUNIO0FBQ0osS0FSRDtBQVNBVixJQUFBQSxPQUFPLENBQUNjLEdBQVI7QUFDSCxHQVpEO0FBYUFoQixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSwwQkFBWixFQUF3Q1YsbUJBQXhDO0FBQ0gsQ0E5Qk07Ozs7QUErQkEsSUFBSTBCLHlCQUF5QixHQUFHLFNBQTVCQSx5QkFBNEIsQ0FBQ0MsYUFBRCxFQUFnQkMsTUFBaEIsRUFBMEI7QUFBRTtBQUMvRCxNQUFJQyxhQUFhLEdBQUcsd0RBQXBCO0FBRUEsTUFBSUYsYUFBYSxLQUFLLFdBQXRCLEVBQW1DekIsZ0JBQWdCLDJCQUFvQkgsU0FBUyxDQUFDTSxRQUE5Qix3QkFBaEI7O0FBRW5DLE1BQUlzQixhQUFhLEtBQUssV0FBdEIsRUFBbUM7QUFDL0IsUUFBSUcsdUJBQXVCLGVBQVNGLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLEtBQVosQ0FBVCxRQUEzQjtBQUNBN0IsSUFBQUEsZ0JBQWdCLHlCQUFtQkgsU0FBUyxDQUFDTSxRQUE3QixxQkFBaUR3QixhQUFqRCxxQkFBMkVDLHVCQUEzRSxDQUFoQjtBQUNIOztBQUdELE1BQUlILGFBQWEsS0FBSyxVQUF0QixFQUFrQztBQUM5QnpCLElBQUFBLGdCQUFnQiwyQkFBb0JILFNBQVMsQ0FBQ00sUUFBOUIsNkJBQTBEdUIsTUFBMUQsd0JBQWhCO0FBQ0gsR0FiNEQsQ0FlN0Q7OztBQUVBM0IsRUFBQUEsZ0JBQWdCLEdBQUdDLGdCQUFuQjtBQUNBTyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxLQUFaO0FBQ0FELEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZVCxnQkFBWjtBQUVBLFNBQU9BLGdCQUFQO0FBQ0gsQ0F0Qk0sQyxDQXVCSCIsInNvdXJjZVJvb3QiOiJEOlxcV2ViXFxIQkdXb3Jrc1xcU2NoZWR1a2VBcHBcXFNlcnZlckhlcm9rdVxcRnVuY3Rpb25zIiwic291cmNlc0NvbnRlbnQiOlsiLy9TUUwgQ29uZmlnXHJcbnZhciBteXNxbCA9IHJlcXVpcmUoJ215c3FsJyk7XHJcbmNvbnN0IFNRTENvbmZpZyA9IHJlcXVpcmUoJy4vU1FMQ29uZmlnJyk7XHJcbmV4cG9ydCBsZXQgaW5jb21taW5nU1FMRGF0YUFyciA9IFtdO1xyXG5sZXQgY3VycmVudFN0YXRlbWVudCA9ICcnO1xyXG5sZXQgY2hvb3NlblN0YXRlbWVudCA9ICcnO1xyXG5sZXQgY291bnQgPSAwO1xyXG5cclxubGV0IGRlZmF1bHRTdGF0ZW1lbnQgPSBgU0VMRUNUICogRlJPTSAke1NRTENvbmZpZy5TUUxUYWJsZX1gO1xyXG5cclxuZXhwb3J0IGxldCB0ZXN0ID0gMjtcclxuXHJcbmV4cG9ydCBsZXQgcnVuU1FMQ29ubiA9IChTUUxTdGF0ZW1lbnQpID0+eyAgICAgICAgXHJcblxyXG4gICAgY291bnQrKztcclxuICAgIGNvbnNvbGUubG9nKGBLw7ZybmluZyAtICR7Y291bnR9YCk7XHJcbiAgICAvLyBDcmVhdGVzIGEgY29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBzZXJ2ZXIgYW5kIG15IGNsaWVudCBhbmQgbGlzdGVuIGZvciBTUUwgY2hhbmdlc8KoXHJcbiAgICAvL2xldCBTUUxDb25uID0gbXlzcWwuY3JlYXRlQ29ubmVjdGlvbihbe211bHRpcGxlU3RhdGVtZW50czogdHJ1ZX0sICdteXNxbDovL2RqY3A3Ym12a3kzczBtbm06b3NwNzR6d3JxNXV0NGd1bkBtNjBteGF6YjRnNnNiNG5uLmNocjdwZTdpeW5xci5ldS13ZXN0LTEucmRzLmFtYXpvbmF3cy5jb206MzMwNi9xM3VxdXJtN3o2OHFiM2gyJ10pO1xyXG5cclxuICAgIGNvbnNvbGUubG9nKFwiQW5zbHV0ZW4gdGlsbCBEQiA6KVwiKTtcclxuICAgIGxldCBTUUxDb25uID0gbXlzcWwuY3JlYXRlQ29ubmVjdGlvbih7XHJcbiAgICAgICAgaG9zdDogU1FMQ29uZmlnLmhvc3QsXHJcbiAgICAgICAgdXNlcjogU1FMQ29uZmlnLnVzZXIsXHJcbiAgICAgICAgcGFzc3dvcmQ6IFNRTENvbmZpZy5wYXNzd29yZCxcclxuICAgICAgICBwb3J0OiBTUUxDb25maWcuc3FsUG9ydCxcclxuICAgICAgICBkYXRhYmFzZTogU1FMQ29uZmlnLmRhdGFiYXNlLFxyXG4gICAgICAgIG11bHRpcGxlU3RhdGVtZW50czogU1FMQ29uZmlnLm11bHRpcGxlU3RhdGVtZW50cyxcclxuICAgIH0pO1xyXG4gICAgU1FMQ29ubi5jb25uZWN0KGZ1bmN0aW9uKGVycikgeyBcclxuICAgICAgICBpZiAoZXJyKSB0aHJvdyBlcnI7ICAgICAgICBcclxuICAgICAgICBTUUxDb25uLnF1ZXJ5KFNRTFN0YXRlbWVudCwgZnVuY3Rpb24gKGVyciwgc3FsUmVzdWx0KSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCc4NScpO1xyXG4gICAgICAgICAgICBpbmNvbW1pbmdTUUxEYXRhQXJyLnB1c2goc3FsUmVzdWx0KTtcclxuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcImluY29tbWluZ1NRTERhdGFBcnIgLSA0M1wiLCBpbmNvbW1pbmdTUUxEYXRhQXJyKVxyXG4gICAgICAgICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICAgICAgICAvL1NRTENvbm4ucmVsZWFzZSgpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7IFxyXG4gICAgICAgIFNRTENvbm4uZW5kKCk7XHJcbiAgICB9KTtcclxuICAgIGNvbnNvbGUubG9nKFwiaW5jb21taW5nU1FMRGF0YUFyciAtIDY3XCIsIGluY29tbWluZ1NRTERhdGFBcnIpO1xyXG59XHJcbmV4cG9ydCBsZXQgYnVpbGRDb3JyZWN0U1FMU3RhdGVtZW50cyA9IChzdGF0ZW1lbnRUeXBlLCBTUUxPYmopID0+eyAvLyBGaW5kIGNvcnJlY3QgU1FMU3RhdGVtZW50XHJcbiAgICBsZXQgc3RhdGVtZW50Q29scyA9ICdkYXRlLCBhY3Rpdml0eSwgc3RhdGUsIGNvbmNlcm5lZCwgdHlwZSwgcGxhY2UsIGNvbnRlbnQnOyAgICBcclxuICAgIFxyXG4gICAgaWYgKHN0YXRlbWVudFR5cGUgPT09ICdmaXJzdCBydW4nKSBjaG9vc2VuU3RhdGVtZW50ID0gYFNFTEVDVCAqIEZST00gJHtTUUxDb25maWcuU1FMVGFibGV9IE9SREVSIEJZIGRhdGUgREVTQ2A7XHJcbiAgICBcclxuICAgIGlmIChzdGF0ZW1lbnRUeXBlID09PSAnYWRkUmVjb3JkJykge1xyXG4gICAgICAgIGxldCBzdGF0ZW1lbnRJbnNlcnRJbnRvRGF0YSA9IGAoJyR7IFNRTE9iai5qb2luKFwiJywnXCIpfScpO2A7XHJcbiAgICAgICAgY2hvb3NlblN0YXRlbWVudCA9IGBJTlNFUlQgSU5UTyAkeyBTUUxDb25maWcuU1FMVGFibGV9IChzZW50LCAkeyBzdGF0ZW1lbnRDb2xzIH0pIFZBTFVFUyR7IHN0YXRlbWVudEluc2VydEludG9EYXRhfWA7ICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgXHJcbiAgICBpZiAoc3RhdGVtZW50VHlwZSA9PT0gJ3VzZXJTcGVjJykge1xyXG4gICAgICAgIGNob29zZW5TdGF0ZW1lbnQgPSBgU0VMRUNUICogRlJPTSAke1NRTENvbmZpZy5TUUxUYWJsZX0gV0hFUkUgdXNlck5hbWU9JHsgU1FMT2JqIH0gT1JERVIgQlkgZGF0ZSBERVNDYDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLy9pZiAoc3RhdGVtZW50VHlwZSA9PT0gJ2ZpbHRlcicpIGNob29zZW5TdGF0ZW1lbnQgPSBgU0VMRUNUICogRlJPTSBkYXRhICR7U1FMT2JqLmN1cnJlbnRTdGF0ZW1lbnQub3BlcmF0b3J9ICR7IFNRTE9iai5jdXJyZW50U3RhdGVtZW50LmZpbHRlckluIH0gaW4gKCckeyBTUUxPYmouY3VycmVudFN0YXRlbWVudC5TUUxGaWx0ZXJTdHJ9JylgO1xyXG4gICAgXHJcbiAgICBjdXJyZW50U3RhdGVtZW50ID0gY2hvb3NlblN0YXRlbWVudDtcclxuICAgIGNvbnNvbGUubG9nKCcxMTYnKTtcclxuICAgIGNvbnNvbGUubG9nKGN1cnJlbnRTdGF0ZW1lbnQpO1xyXG4gICAgXHJcbiAgICByZXR1cm4gY3VycmVudFN0YXRlbWVudDtcclxufVxyXG4gICAgLy9GdW5jdGlvbiB0byBjaG9vc2UgY29ycmVjdCBzdGF0ZW1lbnQgYWNjb3JkaW5nIHRoZSBpbm9tbWluZyBkYXRhIl19",
    "map": {
      "version": 3,
      "sources": [
        "SQLFunction.js"
      ],
      "names": [
        "mysql",
        "require",
        "SQLConfig",
        "incommingSQLDataArr",
        "currentStatement",
        "choosenStatement",
        "count",
        "defaultStatement",
        "SQLTable",
        "test",
        "runSQLConn",
        "SQLStatement",
        "console",
        "log",
        "SQLConn",
        "createConnection",
        "host",
        "user",
        "password",
        "port",
        "sqlPort",
        "database",
        "multipleStatements",
        "connect",
        "err",
        "query",
        "sqlResult",
        "push",
        "end",
        "buildCorrectSQLStatements",
        "statementType",
        "SQLObj",
        "statementCols",
        "statementInsertIntoData",
        "join"
      ],
      "mappings": ";;;;;;;AAAA;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAzB;;AACO,IAAIE,mBAAmB,GAAG,EAA1B;;AACP,IAAIC,gBAAgB,GAAG,EAAvB;AACA,IAAIC,gBAAgB,GAAG,EAAvB;AACA,IAAIC,KAAK,GAAG,CAAZ;AAEA,IAAIC,gBAAgB,2BAAoBL,SAAS,CAACM,QAA9B,CAApB;AAEO,IAAIC,IAAI,GAAG,CAAX;;;AAEA,IAAIC,UAAU,GAAG,SAAbA,UAAa,CAACC,YAAD,EAAiB;AAErCL,EAAAA,KAAK;AACLM,EAAAA,OAAO,CAACC,GAAR,wBAAyBP,KAAzB,GAHqC,CAIrC;AACA;;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,MAAIC,OAAO,GAAGd,KAAK,CAACe,gBAAN,CAAuB;AACjCC,IAAAA,IAAI,EAAEd,SAAS,CAACc,IADiB;AAEjCC,IAAAA,IAAI,EAAEf,SAAS,CAACe,IAFiB;AAGjCC,IAAAA,QAAQ,EAAEhB,SAAS,CAACgB,QAHa;AAIjCC,IAAAA,IAAI,EAAEjB,SAAS,CAACkB,OAJiB;AAKjCC,IAAAA,QAAQ,EAAEnB,SAAS,CAACmB,QALa;AAMjCC,IAAAA,kBAAkB,EAAEpB,SAAS,CAACoB;AANG,GAAvB,CAAd;AAQAR,EAAAA,OAAO,CAACS,OAAR,CAAgB,UAASC,GAAT,EAAc;AAC1B,QAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTV,IAAAA,OAAO,CAACW,KAAR,CAAcd,YAAd,EAA4B,UAAUa,GAAV,EAAeE,SAAf,EAA0B;AAClDd,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAV,MAAAA,mBAAmB,CAACwB,IAApB,CAAyBD,SAAzB,EAFkD,CAGlD;;AACA,UAAIF,GAAJ,EAAS;AACL;AACA;AACH;AACJ,KARD;AASAV,IAAAA,OAAO,CAACc,GAAR;AACH,GAZD;AAaAhB,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCV,mBAAxC;AACH,CA9BM;;;;AA+BA,IAAI0B,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,aAAD,EAAgBC,MAAhB,EAA0B;AAAE;AAC/D,MAAIC,aAAa,GAAG,wDAApB;AAEA,MAAIF,aAAa,KAAK,WAAtB,EAAmCzB,gBAAgB,2BAAoBH,SAAS,CAACM,QAA9B,wBAAhB;;AAEnC,MAAIsB,aAAa,KAAK,WAAtB,EAAmC;AAC/B,QAAIG,uBAAuB,eAASF,MAAM,CAACG,IAAP,CAAY,KAAZ,CAAT,QAA3B;AACA7B,IAAAA,gBAAgB,yBAAmBH,SAAS,CAACM,QAA7B,qBAAiDwB,aAAjD,qBAA2EC,uBAA3E,CAAhB;AACH;;AAGD,MAAIH,aAAa,KAAK,UAAtB,EAAkC;AAC9BzB,IAAAA,gBAAgB,2BAAoBH,SAAS,CAACM,QAA9B,6BAA0DuB,MAA1D,wBAAhB;AACH,GAb4D,CAe7D;;;AAEA3B,EAAAA,gBAAgB,GAAGC,gBAAnB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYT,gBAAZ;AAEA,SAAOA,gBAAP;AACH,CAtBM,C,CAuBH",
      "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions",
      "sourcesContent": [
        "//SQL Config\r\nvar mysql = require('mysql');\r\nconst SQLConfig = require('./SQLConfig');\r\nexport let incommingSQLDataArr = [];\r\nlet currentStatement = '';\r\nlet choosenStatement = '';\r\nlet count = 0;\r\n\r\nlet defaultStatement = `SELECT * FROM ${SQLConfig.SQLTable}`;\r\n\r\nexport let test = 2;\r\n\r\nexport let runSQLConn = (SQLStatement) =>{        \r\n\r\n    count++;\r\n    console.log(`Körning - ${count}`);\r\n    // Creates a connection between the server and my client and listen for SQL changes¨\r\n    //let SQLConn = mysql.createConnection([{multipleStatements: true}, 'mysql://djcp7bmvky3s0mnm:osp74zwrq5ut4gun@m60mxazb4g6sb4nn.chr7pe7iynqr.eu-west-1.rds.amazonaws.com:3306/q3uqurm7z68qb3h2']);\r\n\r\n    console.log(\"Ansluten till DB :)\");\r\n    let SQLConn = mysql.createConnection({\r\n        host: SQLConfig.host,\r\n        user: SQLConfig.user,\r\n        password: SQLConfig.password,\r\n        port: SQLConfig.sqlPort,\r\n        database: SQLConfig.database,\r\n        multipleStatements: SQLConfig.multipleStatements,\r\n    });\r\n    SQLConn.connect(function(err) { \r\n        if (err) throw err;        \r\n        SQLConn.query(SQLStatement, function (err, sqlResult) {\r\n            console.log('85');\r\n            incommingSQLDataArr.push(sqlResult);\r\n            //console.log(\"incommingSQLDataArr - 43\", incommingSQLDataArr)\r\n            if (err) {\r\n                //SQLConn.release();\r\n                return;\r\n            }\r\n        }); \r\n        SQLConn.end();\r\n    });\r\n    console.log(\"incommingSQLDataArr - 67\", incommingSQLDataArr);\r\n}\r\nexport let buildCorrectSQLStatements = (statementType, SQLObj) =>{ // Find correct SQLStatement\r\n    let statementCols = 'date, activity, state, concerned, type, place, content';    \r\n    \r\n    if (statementType === 'first run') choosenStatement = `SELECT * FROM ${SQLConfig.SQLTable} ORDER BY date DESC`;\r\n    \r\n    if (statementType === 'addRecord') {\r\n        let statementInsertIntoData = `('${ SQLObj.join(\"','\")}');`;\r\n        choosenStatement = `INSERT INTO ${ SQLConfig.SQLTable} (sent, ${ statementCols }) VALUES${ statementInsertIntoData}`;  \r\n    }\r\n    \r\n    \r\n    if (statementType === 'userSpec') {\r\n        choosenStatement = `SELECT * FROM ${SQLConfig.SQLTable} WHERE userName=${ SQLObj } ORDER BY date DESC`;\r\n    }\r\n    \r\n    //if (statementType === 'filter') choosenStatement = `SELECT * FROM data ${SQLObj.currentStatement.operator} ${ SQLObj.currentStatement.filterIn } in ('${ SQLObj.currentStatement.SQLFilterStr}')`;\r\n    \r\n    currentStatement = choosenStatement;\r\n    console.log('116');\r\n    console.log(currentStatement);\r\n    \r\n    return currentStatement;\r\n}\r\n    //Function to choose correct statement according the inomming data"
      ]
    },
    "sourceType": "script",
    "mtime": 1584021568401
  },
  "{\"sourceRoot\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\\\\Functions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"filename\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\\\\Functions\\\\SQLFunctions.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "filename": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions\\SQLFunctions.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions\\SQLFunctions.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions\\SQLFunctions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions",
        "sourceFileName": "SQLFunctions.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n//SQL Config\nvar mysql = require('mysql');\n\nvar SQLConfig = require('./SQLConfig');\n\nvar incommingSQLDataArr = [];\nvar currentStatement = '';\nvar choosenStatement = '';\nvar count = 0;\nvar defaultStatement = \"SELECT * FROM \".concat(SQLConfig.SQLTable);\n\nexports.runSQLConn = function (SQLStatement) {\n  count++; // Creates a connection between the server and my client and listen for SQL changes¨\n  //let SQLConn = mysql.createConnection([{multipleStatements: true}, 'mysql://djcp7bmvky3s0mnm:osp74zwrq5ut4gun@m60mxazb4g6sb4nn.chr7pe7iynqr.eu-west-1.rds.amazonaws.com:3306/q3uqurm7z68qb3h2']);\n\n  console.log(\"Ansluten till DB :)\");\n  var SQLConn = mysql.createConnection({\n    host: SQLConfig.host,\n    user: SQLConfig.user,\n    password: SQLConfig.password,\n    port: SQLConfig.sqlPort,\n    database: SQLConfig.database,\n    multipleStatements: SQLConfig.multipleStatements\n  });\n  SQLConn.connect(function (err) {\n    if (err) throw err;\n    console.log(\"runSQLConn -> SQLStatement - 29\", SQLStatement);\n    SQLConn.query(SQLStatement, function (err, sqlResult) {\n      console.log(\"runSQLConn -> sqlResult\", sqlResult);\n      incommingSQLDataArr.push(sqlResult);\n\n      if (err) {\n        //SQLConn.release();\n        return;\n      }\n    });\n    SQLConn.end();\n  });\n};\n\nexports.buildCorrectSQLStatements = function (statementType, SQLObj) {\n  // Find correct SQLStatement\n  console.log(\"buildCorrectSQLStatements -> SQLObj - 42\", SQLObj);\n  var statementCols = 'date, activity, state, concerned, type, place, content';\n  if (statementType === 'first run') choosenStatement = \"SELECT * FROM \".concat(SQLConfig.SQLTable, \" ORDER BY date DESC\");\n\n  if (statementType === 'addRecord') {\n    var statementInsertIntoData = \"('\".concat(SQLObj.join(\"','\"), \"');\");\n    choosenStatement = \"INSERT INTO \".concat(SQLConfig.SQLTable, \" (sent, \").concat(statementCols, \") VALUES\").concat(statementInsertIntoData);\n  }\n\n  if (statementType === 'userSpec') {\n    choosenStatement = \"SELECT * FROM \".concat(SQLConfig.SQLTable, \" WHERE userName=\\\"\").concat(SQLObj, \"\\\" ORDER BY date DESC\");\n  } //if (statementType === 'filter') choosenStatement = `SELECT * FROM data ${SQLObj.currentStatement.operator} ${ SQLObj.currentStatement.filterIn } in ('${ SQLObj.currentStatement.SQLFilterStr}')`;\n\n\n  currentStatement = choosenStatement;\n  console.log(\"buildCorrectSQLStatements -> currentStatement - 60\", currentStatement);\n  return currentStatement;\n}; //Function to choose correct statement according the inomming data\n\n\nexports.emptyUserData = function () {\n  incommingSQLDataArr = [];\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNRTEZ1bmN0aW9ucy5qcyJdLCJuYW1lcyI6WyJteXNxbCIsInJlcXVpcmUiLCJTUUxDb25maWciLCJpbmNvbW1pbmdTUUxEYXRhQXJyIiwiY3VycmVudFN0YXRlbWVudCIsImNob29zZW5TdGF0ZW1lbnQiLCJjb3VudCIsImRlZmF1bHRTdGF0ZW1lbnQiLCJTUUxUYWJsZSIsImV4cG9ydHMiLCJydW5TUUxDb25uIiwiU1FMU3RhdGVtZW50IiwiY29uc29sZSIsImxvZyIsIlNRTENvbm4iLCJjcmVhdGVDb25uZWN0aW9uIiwiaG9zdCIsInVzZXIiLCJwYXNzd29yZCIsInBvcnQiLCJzcWxQb3J0IiwiZGF0YWJhc2UiLCJtdWx0aXBsZVN0YXRlbWVudHMiLCJjb25uZWN0IiwiZXJyIiwicXVlcnkiLCJzcWxSZXN1bHQiLCJwdXNoIiwiZW5kIiwiYnVpbGRDb3JyZWN0U1FMU3RhdGVtZW50cyIsInN0YXRlbWVudFR5cGUiLCJTUUxPYmoiLCJzdGF0ZW1lbnRDb2xzIiwic3RhdGVtZW50SW5zZXJ0SW50b0RhdGEiLCJqb2luIiwiZW1wdHlVc2VyRGF0YSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBLElBQUlBLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBbkI7O0FBQ0EsSUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsYUFBRCxDQUF6Qjs7QUFDQSxJQUFJRSxtQkFBbUIsR0FBRyxFQUExQjtBQUNBLElBQUlDLGdCQUFnQixHQUFHLEVBQXZCO0FBQ0EsSUFBSUMsZ0JBQWdCLEdBQUcsRUFBdkI7QUFDQSxJQUFJQyxLQUFLLEdBQUcsQ0FBWjtBQUVBLElBQUlDLGdCQUFnQiwyQkFBb0JMLFNBQVMsQ0FBQ00sUUFBOUIsQ0FBcEI7O0FBRUFDLE9BQU8sQ0FBQ0MsVUFBUixHQUFxQixVQUFDQyxZQUFELEVBQWlCO0FBQ2xDTCxFQUFBQSxLQUFLLEdBRDZCLENBRWxDO0FBQ0E7O0FBRUFNLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHFCQUFaO0FBQ0EsTUFBSUMsT0FBTyxHQUFHZCxLQUFLLENBQUNlLGdCQUFOLENBQXVCO0FBQ2pDQyxJQUFBQSxJQUFJLEVBQUVkLFNBQVMsQ0FBQ2MsSUFEaUI7QUFFakNDLElBQUFBLElBQUksRUFBRWYsU0FBUyxDQUFDZSxJQUZpQjtBQUdqQ0MsSUFBQUEsUUFBUSxFQUFFaEIsU0FBUyxDQUFDZ0IsUUFIYTtBQUlqQ0MsSUFBQUEsSUFBSSxFQUFFakIsU0FBUyxDQUFDa0IsT0FKaUI7QUFLakNDLElBQUFBLFFBQVEsRUFBRW5CLFNBQVMsQ0FBQ21CLFFBTGE7QUFNakNDLElBQUFBLGtCQUFrQixFQUFFcEIsU0FBUyxDQUFDb0I7QUFORyxHQUF2QixDQUFkO0FBUUFSLEVBQUFBLE9BQU8sQ0FBQ1MsT0FBUixDQUFnQixVQUFTQyxHQUFULEVBQWM7QUFDMUIsUUFBSUEsR0FBSixFQUFTLE1BQU1BLEdBQU47QUFDVFosSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksaUNBQVosRUFBK0NGLFlBQS9DO0FBQ0FHLElBQUFBLE9BQU8sQ0FBQ1csS0FBUixDQUFjZCxZQUFkLEVBQTRCLFVBQVVhLEdBQVYsRUFBZUUsU0FBZixFQUEwQjtBQUN0RGQsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVkseUJBQVosRUFBdUNhLFNBQXZDO0FBQ0l2QixNQUFBQSxtQkFBbUIsQ0FBQ3dCLElBQXBCLENBQXlCRCxTQUF6Qjs7QUFDQSxVQUFJRixHQUFKLEVBQVM7QUFDTDtBQUNBO0FBQ0g7QUFDSixLQVBEO0FBUUFWLElBQUFBLE9BQU8sQ0FBQ2MsR0FBUjtBQUNILEdBWkQ7QUFhSCxDQTNCRDs7QUE0QkFuQixPQUFPLENBQUNvQix5QkFBUixHQUFvQyxVQUFDQyxhQUFELEVBQWdCQyxNQUFoQixFQUEwQjtBQUFFO0FBQzVEbkIsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMENBQVosRUFBd0RrQixNQUF4RDtBQUNBLE1BQUlDLGFBQWEsR0FBRyx3REFBcEI7QUFFQSxNQUFJRixhQUFhLEtBQUssV0FBdEIsRUFBbUN6QixnQkFBZ0IsMkJBQW9CSCxTQUFTLENBQUNNLFFBQTlCLHdCQUFoQjs7QUFFbkMsTUFBSXNCLGFBQWEsS0FBSyxXQUF0QixFQUFtQztBQUMvQixRQUFJRyx1QkFBdUIsZUFBU0YsTUFBTSxDQUFDRyxJQUFQLENBQVksS0FBWixDQUFULFFBQTNCO0FBQ0E3QixJQUFBQSxnQkFBZ0IseUJBQW1CSCxTQUFTLENBQUNNLFFBQTdCLHFCQUFpRHdCLGFBQWpELHFCQUEyRUMsdUJBQTNFLENBQWhCO0FBQ0g7O0FBR0QsTUFBSUgsYUFBYSxLQUFLLFVBQXRCLEVBQWtDO0FBQzlCekIsSUFBQUEsZ0JBQWdCLDJCQUFvQkgsU0FBUyxDQUFDTSxRQUE5QiwrQkFBMER1QixNQUExRCwwQkFBaEI7QUFDSCxHQWR5RCxDQWdCMUQ7OztBQUVBM0IsRUFBQUEsZ0JBQWdCLEdBQUdDLGdCQUFuQjtBQUNBTyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxvREFBWixFQUFrRVQsZ0JBQWxFO0FBQ0EsU0FBT0EsZ0JBQVA7QUFDSCxDQXJCRCxDLENBc0JJOzs7QUFFSkssT0FBTyxDQUFDMEIsYUFBUixHQUF3QixZQUFNO0FBQzFCaEMsRUFBQUEsbUJBQW1CLEdBQUcsRUFBdEI7QUFDSCxDQUZEIiwic291cmNlUm9vdCI6IkQ6XFxXZWJcXEhCR1dvcmtzXFxTY2hlZHVrZUFwcFxcU2VydmVySGVyb2t1XFxGdW5jdGlvbnMiLCJzb3VyY2VzQ29udGVudCI6WyIvL1NRTCBDb25maWdcclxudmFyIG15c3FsID0gcmVxdWlyZSgnbXlzcWwnKTtcclxuY29uc3QgU1FMQ29uZmlnID0gcmVxdWlyZSgnLi9TUUxDb25maWcnKTtcclxubGV0IGluY29tbWluZ1NRTERhdGFBcnIgPSBbXTtcclxubGV0IGN1cnJlbnRTdGF0ZW1lbnQgPSAnJztcclxubGV0IGNob29zZW5TdGF0ZW1lbnQgPSAnJztcclxubGV0IGNvdW50ID0gMDtcclxuXHJcbmxldCBkZWZhdWx0U3RhdGVtZW50ID0gYFNFTEVDVCAqIEZST00gJHtTUUxDb25maWcuU1FMVGFibGV9YDtcclxuXHJcbmV4cG9ydHMucnVuU1FMQ29ubiA9IChTUUxTdGF0ZW1lbnQpID0+eyAgICAgIFxyXG4gICAgY291bnQrKztcclxuICAgIC8vIENyZWF0ZXMgYSBjb25uZWN0aW9uIGJldHdlZW4gdGhlIHNlcnZlciBhbmQgbXkgY2xpZW50IGFuZCBsaXN0ZW4gZm9yIFNRTCBjaGFuZ2VzwqhcclxuICAgIC8vbGV0IFNRTENvbm4gPSBteXNxbC5jcmVhdGVDb25uZWN0aW9uKFt7bXVsdGlwbGVTdGF0ZW1lbnRzOiB0cnVlfSwgJ215c3FsOi8vZGpjcDdibXZreTNzMG1ubTpvc3A3NHp3cnE1dXQ0Z3VuQG02MG14YXpiNGc2c2I0bm4uY2hyN3BlN2l5bnFyLmV1LXdlc3QtMS5yZHMuYW1hem9uYXdzLmNvbTozMzA2L3EzdXF1cm03ejY4cWIzaDInXSk7XHJcblxyXG4gICAgY29uc29sZS5sb2coXCJBbnNsdXRlbiB0aWxsIERCIDopXCIpO1xyXG4gICAgbGV0IFNRTENvbm4gPSBteXNxbC5jcmVhdGVDb25uZWN0aW9uKHtcclxuICAgICAgICBob3N0OiBTUUxDb25maWcuaG9zdCxcclxuICAgICAgICB1c2VyOiBTUUxDb25maWcudXNlcixcclxuICAgICAgICBwYXNzd29yZDogU1FMQ29uZmlnLnBhc3N3b3JkLFxyXG4gICAgICAgIHBvcnQ6IFNRTENvbmZpZy5zcWxQb3J0LFxyXG4gICAgICAgIGRhdGFiYXNlOiBTUUxDb25maWcuZGF0YWJhc2UsXHJcbiAgICAgICAgbXVsdGlwbGVTdGF0ZW1lbnRzOiBTUUxDb25maWcubXVsdGlwbGVTdGF0ZW1lbnRzLFxyXG4gICAgfSk7XHJcbiAgICBTUUxDb25uLmNvbm5lY3QoZnVuY3Rpb24oZXJyKSB7IFxyXG4gICAgICAgIGlmIChlcnIpIHRocm93IGVycjsgICAgICAgIFxyXG4gICAgICAgIGNvbnNvbGUubG9nKFwicnVuU1FMQ29ubiAtPiBTUUxTdGF0ZW1lbnQgLSAyOVwiLCBTUUxTdGF0ZW1lbnQpXHJcbiAgICAgICAgU1FMQ29ubi5xdWVyeShTUUxTdGF0ZW1lbnQsIGZ1bmN0aW9uIChlcnIsIHNxbFJlc3VsdCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwicnVuU1FMQ29ubiAtPiBzcWxSZXN1bHRcIiwgc3FsUmVzdWx0KVxyXG4gICAgICAgICAgICBpbmNvbW1pbmdTUUxEYXRhQXJyLnB1c2goc3FsUmVzdWx0KTtcclxuICAgICAgICAgICAgaWYgKGVycikge1xyXG4gICAgICAgICAgICAgICAgLy9TUUxDb25uLnJlbGVhc2UoKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pOyBcclxuICAgICAgICBTUUxDb25uLmVuZCgpO1xyXG4gICAgfSk7XHJcbn1cclxuZXhwb3J0cy5idWlsZENvcnJlY3RTUUxTdGF0ZW1lbnRzID0gKHN0YXRlbWVudFR5cGUsIFNRTE9iaikgPT57IC8vIEZpbmQgY29ycmVjdCBTUUxTdGF0ZW1lbnRcclxuICAgIGNvbnNvbGUubG9nKFwiYnVpbGRDb3JyZWN0U1FMU3RhdGVtZW50cyAtPiBTUUxPYmogLSA0MlwiLCBTUUxPYmopXHJcbiAgICBsZXQgc3RhdGVtZW50Q29scyA9ICdkYXRlLCBhY3Rpdml0eSwgc3RhdGUsIGNvbmNlcm5lZCwgdHlwZSwgcGxhY2UsIGNvbnRlbnQnOyAgICBcclxuICAgIFxyXG4gICAgaWYgKHN0YXRlbWVudFR5cGUgPT09ICdmaXJzdCBydW4nKSBjaG9vc2VuU3RhdGVtZW50ID0gYFNFTEVDVCAqIEZST00gJHtTUUxDb25maWcuU1FMVGFibGV9IE9SREVSIEJZIGRhdGUgREVTQ2A7XHJcbiAgICBcclxuICAgIGlmIChzdGF0ZW1lbnRUeXBlID09PSAnYWRkUmVjb3JkJykge1xyXG4gICAgICAgIGxldCBzdGF0ZW1lbnRJbnNlcnRJbnRvRGF0YSA9IGAoJyR7IFNRTE9iai5qb2luKFwiJywnXCIpfScpO2A7XHJcbiAgICAgICAgY2hvb3NlblN0YXRlbWVudCA9IGBJTlNFUlQgSU5UTyAkeyBTUUxDb25maWcuU1FMVGFibGV9IChzZW50LCAkeyBzdGF0ZW1lbnRDb2xzIH0pIFZBTFVFUyR7IHN0YXRlbWVudEluc2VydEludG9EYXRhfWA7ICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgXHJcbiAgICBpZiAoc3RhdGVtZW50VHlwZSA9PT0gJ3VzZXJTcGVjJykge1xyXG4gICAgICAgIGNob29zZW5TdGF0ZW1lbnQgPSBgU0VMRUNUICogRlJPTSAke1NRTENvbmZpZy5TUUxUYWJsZX0gV0hFUkUgdXNlck5hbWU9XCIke1NRTE9ian1cIiBPUkRFUiBCWSBkYXRlIERFU0NgO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvL2lmIChzdGF0ZW1lbnRUeXBlID09PSAnZmlsdGVyJykgY2hvb3NlblN0YXRlbWVudCA9IGBTRUxFQ1QgKiBGUk9NIGRhdGEgJHtTUUxPYmouY3VycmVudFN0YXRlbWVudC5vcGVyYXRvcn0gJHsgU1FMT2JqLmN1cnJlbnRTdGF0ZW1lbnQuZmlsdGVySW4gfSBpbiAoJyR7IFNRTE9iai5jdXJyZW50U3RhdGVtZW50LlNRTEZpbHRlclN0cn0nKWA7XHJcbiAgICBcclxuICAgIGN1cnJlbnRTdGF0ZW1lbnQgPSBjaG9vc2VuU3RhdGVtZW50OyAgIFxyXG4gICAgY29uc29sZS5sb2coXCJidWlsZENvcnJlY3RTUUxTdGF0ZW1lbnRzIC0+IGN1cnJlbnRTdGF0ZW1lbnQgLSA2MFwiLCBjdXJyZW50U3RhdGVtZW50KVxyXG4gICAgcmV0dXJuIGN1cnJlbnRTdGF0ZW1lbnQ7XHJcbn1cclxuICAgIC8vRnVuY3Rpb24gdG8gY2hvb3NlIGNvcnJlY3Qgc3RhdGVtZW50IGFjY29yZGluZyB0aGUgaW5vbW1pbmcgZGF0YVxyXG4gICAgXHJcbmV4cG9ydHMuZW1wdHlVc2VyRGF0YSA9ICgpID0+IHtcclxuICAgIGluY29tbWluZ1NRTERhdGFBcnIgPSBbXTtcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "SQLFunctions.js"
      ],
      "names": [
        "mysql",
        "require",
        "SQLConfig",
        "incommingSQLDataArr",
        "currentStatement",
        "choosenStatement",
        "count",
        "defaultStatement",
        "SQLTable",
        "exports",
        "runSQLConn",
        "SQLStatement",
        "console",
        "log",
        "SQLConn",
        "createConnection",
        "host",
        "user",
        "password",
        "port",
        "sqlPort",
        "database",
        "multipleStatements",
        "connect",
        "err",
        "query",
        "sqlResult",
        "push",
        "end",
        "buildCorrectSQLStatements",
        "statementType",
        "SQLObj",
        "statementCols",
        "statementInsertIntoData",
        "join",
        "emptyUserData"
      ],
      "mappings": ";;AAAA;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAIE,mBAAmB,GAAG,EAA1B;AACA,IAAIC,gBAAgB,GAAG,EAAvB;AACA,IAAIC,gBAAgB,GAAG,EAAvB;AACA,IAAIC,KAAK,GAAG,CAAZ;AAEA,IAAIC,gBAAgB,2BAAoBL,SAAS,CAACM,QAA9B,CAApB;;AAEAC,OAAO,CAACC,UAAR,GAAqB,UAACC,YAAD,EAAiB;AAClCL,EAAAA,KAAK,GAD6B,CAElC;AACA;;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,MAAIC,OAAO,GAAGd,KAAK,CAACe,gBAAN,CAAuB;AACjCC,IAAAA,IAAI,EAAEd,SAAS,CAACc,IADiB;AAEjCC,IAAAA,IAAI,EAAEf,SAAS,CAACe,IAFiB;AAGjCC,IAAAA,QAAQ,EAAEhB,SAAS,CAACgB,QAHa;AAIjCC,IAAAA,IAAI,EAAEjB,SAAS,CAACkB,OAJiB;AAKjCC,IAAAA,QAAQ,EAAEnB,SAAS,CAACmB,QALa;AAMjCC,IAAAA,kBAAkB,EAAEpB,SAAS,CAACoB;AANG,GAAvB,CAAd;AAQAR,EAAAA,OAAO,CAACS,OAAR,CAAgB,UAASC,GAAT,EAAc;AAC1B,QAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTZ,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,YAA/C;AACAG,IAAAA,OAAO,CAACW,KAAR,CAAcd,YAAd,EAA4B,UAAUa,GAAV,EAAeE,SAAf,EAA0B;AACtDd,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCa,SAAvC;AACIvB,MAAAA,mBAAmB,CAACwB,IAApB,CAAyBD,SAAzB;;AACA,UAAIF,GAAJ,EAAS;AACL;AACA;AACH;AACJ,KAPD;AAQAV,IAAAA,OAAO,CAACc,GAAR;AACH,GAZD;AAaH,CA3BD;;AA4BAnB,OAAO,CAACoB,yBAAR,GAAoC,UAACC,aAAD,EAAgBC,MAAhB,EAA0B;AAAE;AAC5DnB,EAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ,EAAwDkB,MAAxD;AACA,MAAIC,aAAa,GAAG,wDAApB;AAEA,MAAIF,aAAa,KAAK,WAAtB,EAAmCzB,gBAAgB,2BAAoBH,SAAS,CAACM,QAA9B,wBAAhB;;AAEnC,MAAIsB,aAAa,KAAK,WAAtB,EAAmC;AAC/B,QAAIG,uBAAuB,eAASF,MAAM,CAACG,IAAP,CAAY,KAAZ,CAAT,QAA3B;AACA7B,IAAAA,gBAAgB,yBAAmBH,SAAS,CAACM,QAA7B,qBAAiDwB,aAAjD,qBAA2EC,uBAA3E,CAAhB;AACH;;AAGD,MAAIH,aAAa,KAAK,UAAtB,EAAkC;AAC9BzB,IAAAA,gBAAgB,2BAAoBH,SAAS,CAACM,QAA9B,+BAA0DuB,MAA1D,0BAAhB;AACH,GAdyD,CAgB1D;;;AAEA3B,EAAAA,gBAAgB,GAAGC,gBAAnB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,oDAAZ,EAAkET,gBAAlE;AACA,SAAOA,gBAAP;AACH,CArBD,C,CAsBI;;;AAEJK,OAAO,CAAC0B,aAAR,GAAwB,YAAM;AAC1BhC,EAAAA,mBAAmB,GAAG,EAAtB;AACH,CAFD",
      "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions",
      "sourcesContent": [
        "//SQL Config\r\nvar mysql = require('mysql');\r\nconst SQLConfig = require('./SQLConfig');\r\nlet incommingSQLDataArr = [];\r\nlet currentStatement = '';\r\nlet choosenStatement = '';\r\nlet count = 0;\r\n\r\nlet defaultStatement = `SELECT * FROM ${SQLConfig.SQLTable}`;\r\n\r\nexports.runSQLConn = (SQLStatement) =>{      \r\n    count++;\r\n    // Creates a connection between the server and my client and listen for SQL changes¨\r\n    //let SQLConn = mysql.createConnection([{multipleStatements: true}, 'mysql://djcp7bmvky3s0mnm:osp74zwrq5ut4gun@m60mxazb4g6sb4nn.chr7pe7iynqr.eu-west-1.rds.amazonaws.com:3306/q3uqurm7z68qb3h2']);\r\n\r\n    console.log(\"Ansluten till DB :)\");\r\n    let SQLConn = mysql.createConnection({\r\n        host: SQLConfig.host,\r\n        user: SQLConfig.user,\r\n        password: SQLConfig.password,\r\n        port: SQLConfig.sqlPort,\r\n        database: SQLConfig.database,\r\n        multipleStatements: SQLConfig.multipleStatements,\r\n    });\r\n    SQLConn.connect(function(err) { \r\n        if (err) throw err;        \r\n        console.log(\"runSQLConn -> SQLStatement - 29\", SQLStatement)\r\n        SQLConn.query(SQLStatement, function (err, sqlResult) {\r\n        console.log(\"runSQLConn -> sqlResult\", sqlResult)\r\n            incommingSQLDataArr.push(sqlResult);\r\n            if (err) {\r\n                //SQLConn.release();\r\n                return;\r\n            }\r\n        }); \r\n        SQLConn.end();\r\n    });\r\n}\r\nexports.buildCorrectSQLStatements = (statementType, SQLObj) =>{ // Find correct SQLStatement\r\n    console.log(\"buildCorrectSQLStatements -> SQLObj - 42\", SQLObj)\r\n    let statementCols = 'date, activity, state, concerned, type, place, content';    \r\n    \r\n    if (statementType === 'first run') choosenStatement = `SELECT * FROM ${SQLConfig.SQLTable} ORDER BY date DESC`;\r\n    \r\n    if (statementType === 'addRecord') {\r\n        let statementInsertIntoData = `('${ SQLObj.join(\"','\")}');`;\r\n        choosenStatement = `INSERT INTO ${ SQLConfig.SQLTable} (sent, ${ statementCols }) VALUES${ statementInsertIntoData}`;  \r\n    }\r\n    \r\n    \r\n    if (statementType === 'userSpec') {\r\n        choosenStatement = `SELECT * FROM ${SQLConfig.SQLTable} WHERE userName=\"${SQLObj}\" ORDER BY date DESC`;\r\n    }\r\n    \r\n    //if (statementType === 'filter') choosenStatement = `SELECT * FROM data ${SQLObj.currentStatement.operator} ${ SQLObj.currentStatement.filterIn } in ('${ SQLObj.currentStatement.SQLFilterStr}')`;\r\n    \r\n    currentStatement = choosenStatement;   \r\n    console.log(\"buildCorrectSQLStatements -> currentStatement - 60\", currentStatement)\r\n    return currentStatement;\r\n}\r\n    //Function to choose correct statement according the inomming data\r\n    \r\nexports.emptyUserData = () => {\r\n    incommingSQLDataArr = [];\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1585215793592
  },
  "{\"sourceRoot\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\\\\Functions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"filename\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\\\\Functions\\\\WebTokenFunctions.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "filename": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions\\WebTokenFunctions.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions\\WebTokenFunctions.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions\\WebTokenFunctions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions",
        "sourceFileName": "WebTokenFunctions.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiJEOlxcV2ViXFxIQkdXb3Jrc1xcU2NoZWR1a2VBcHBcXFNlcnZlckhlcm9rdVxcRnVuY3Rpb25zIiwic291cmNlc0NvbnRlbnQiOltdfQ==",
    "map": {
      "version": 3,
      "sources": [],
      "names": [],
      "mappings": "",
      "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions",
      "sourcesContent": []
    },
    "sourceType": "script",
    "mtime": 1584039399925
  },
  "{\"sourceRoot\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\\\\Functions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"filename\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\\\\Functions\\\\UserFunctions.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "filename": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions\\UserFunctions.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions\\UserFunctions.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions\\UserFunctions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions",
        "sourceFileName": "UserFunctions.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _SQLFunctions = require(\"./SQLFunctions\");\n\n// ==================================== User functions handling ====================================\nvar regedUserList = require('./RegedUser.json');\n\nvar fs = require('fs'); // Create a user account\n\n\nexports.userReg = function (regedUser) {\n  console.log(\"userReg -> regedUser\", regedUser);\n  var regedUserObj = {\n    userId: userId(),\n    fullName: regedUser.fullName,\n    userName: regedUser.userName,\n    userPassWord: regedUser.userPassWord\n  };\n  regedUserList.regedUser.push(regedUserObj);\n  console.log(\"userReg -> regedUserList\", regedUserList);\n  fs.writeFile('./Functions/RegedUser.json', JSON.stringify(regedUserList, null, 1), function (err) {\n    if (err) {\n      return console.log(err);\n    }\n\n    console.log(\"The file was saved!\");\n  });\n}; //Create id for the created user\n\n\nvar countRegedUser = 0;\n\nvar userId = function userId() {\n  //Note - When calling this function I need set the id value = -1 able starting the user id from nr 1 -->\n  for (var index = 0; index < regedUserList.regedUser.length; index++) {\n    countRegedUser = regedUserList.regedUser[index].userId;\n  } // Get the last id in my arr of users and add by one\n\n\n  countRegedUser++;\n  return countRegedUser;\n}; // Validate the user who whants logging in\n\n\nexports.validateUser = function (incommingUser) {\n  var getFullName = '';\n  var userReturnData = {\n    userMatch: false\n  };\n  var userList = regedUserList['regedUser']; // Check the userList for a userName vs password match\n\n  for (var index = 0; index < userList.length; index++) {\n    var getUsername = userList[index].userName;\n    var getPassword = userList[index].userPassWord; // Check if there are any match with a reged user\n\n    if (incommingUser.userName === getUsername && incommingUser.userPassWord === getPassword) {\n      userReturnData = {\n        userId: userId() - 1,\n        userMatch: true,\n        loginName: userList[index].fullName\n      };\n    }\n  }\n\n  return userReturnData;\n};\n\nexports.verifyUser = function (getInlogedUser) {\n  console.log(\"verifyUser -> getInlogedUser - 61\", getInlogedUser);\n  var getCorrectUserData = [];\n  console.log(\"verifyUser -> incommingSQLDataArr - 63\", _SQLFunctions.incommingSQLDataArr);\n\n  _SQLFunctions.incommingSQLDataArr.map(function (obj) {\n    for (var key in obj) {\n      if (obj[key].userName === getInlogedUser) {\n        getCorrectUserData.push(obj[key]);\n      }\n    }\n\n    return getCorrectUserData;\n  });\n\n  return getCorrectUserData;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXJGdW5jdGlvbnMuanMiXSwibmFtZXMiOlsicmVnZWRVc2VyTGlzdCIsInJlcXVpcmUiLCJmcyIsImV4cG9ydHMiLCJ1c2VyUmVnIiwicmVnZWRVc2VyIiwiY29uc29sZSIsImxvZyIsInJlZ2VkVXNlck9iaiIsInVzZXJJZCIsImZ1bGxOYW1lIiwidXNlck5hbWUiLCJ1c2VyUGFzc1dvcmQiLCJwdXNoIiwid3JpdGVGaWxlIiwiSlNPTiIsInN0cmluZ2lmeSIsImVyciIsImNvdW50UmVnZWRVc2VyIiwiaW5kZXgiLCJsZW5ndGgiLCJ2YWxpZGF0ZVVzZXIiLCJpbmNvbW1pbmdVc2VyIiwiZ2V0RnVsbE5hbWUiLCJ1c2VyUmV0dXJuRGF0YSIsInVzZXJNYXRjaCIsInVzZXJMaXN0IiwiZ2V0VXNlcm5hbWUiLCJnZXRQYXNzd29yZCIsImxvZ2luTmFtZSIsInZlcmlmeVVzZXIiLCJnZXRJbmxvZ2VkVXNlciIsImdldENvcnJlY3RVc2VyRGF0YSIsImluY29tbWluZ1NRTERhdGFBcnIiLCJtYXAiLCJvYmoiLCJrZXkiXSwibWFwcGluZ3MiOiI7O0FBQ0E7O0FBREE7QUFFQSxJQUFNQSxhQUFhLEdBQUdDLE9BQU8sQ0FBQyxrQkFBRCxDQUE3Qjs7QUFDQSxJQUFNQyxFQUFFLEdBQUdELE9BQU8sQ0FBQyxJQUFELENBQWxCLEMsQ0FFQTs7O0FBQ0FFLE9BQU8sQ0FBQ0MsT0FBUixHQUFrQixVQUFDQyxTQUFELEVBQWM7QUFDNUJDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHNCQUFaLEVBQW9DRixTQUFwQztBQUVBLE1BQU1HLFlBQVksR0FBRztBQUNqQkMsSUFBQUEsTUFBTSxFQUFFQSxNQUFNLEVBREc7QUFFakJDLElBQUFBLFFBQVEsRUFBRUwsU0FBUyxDQUFDSyxRQUZIO0FBR2pCQyxJQUFBQSxRQUFRLEVBQUVOLFNBQVMsQ0FBQ00sUUFISDtBQUlqQkMsSUFBQUEsWUFBWSxFQUFFUCxTQUFTLENBQUNPO0FBSlAsR0FBckI7QUFPQVosRUFBQUEsYUFBYSxDQUFDSyxTQUFkLENBQXdCUSxJQUF4QixDQUE2QkwsWUFBN0I7QUFDQUYsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMEJBQVosRUFBd0NQLGFBQXhDO0FBRUFFLEVBQUFBLEVBQUUsQ0FBQ1ksU0FBSCxDQUFhLDRCQUFiLEVBQTJDQyxJQUFJLENBQUNDLFNBQUwsQ0FBZWhCLGFBQWYsRUFBOEIsSUFBOUIsRUFBb0MsQ0FBcEMsQ0FBM0MsRUFBbUYsVUFBU2lCLEdBQVQsRUFBYztBQUM3RixRQUFHQSxHQUFILEVBQVE7QUFDSixhQUFPWCxPQUFPLENBQUNDLEdBQVIsQ0FBWVUsR0FBWixDQUFQO0FBQ0g7O0FBQ0RYLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHFCQUFaO0FBQ0gsR0FMRDtBQU1ILENBbkJELEMsQ0FvQkE7OztBQUNBLElBQUlXLGNBQWMsR0FBRyxDQUFyQjs7QUFDQSxJQUFNVCxNQUFNLEdBQUksU0FBVkEsTUFBVSxHQUFNO0FBQ2xCO0FBQ0EsT0FBSyxJQUFJVSxLQUFLLEdBQUcsQ0FBakIsRUFBb0JBLEtBQUssR0FBR25CLGFBQWEsQ0FBQ0ssU0FBZCxDQUF3QmUsTUFBcEQsRUFBNERELEtBQUssRUFBakUsRUFBcUU7QUFDakVELElBQUFBLGNBQWMsR0FBR2xCLGFBQWEsQ0FBQ0ssU0FBZCxDQUF3QmMsS0FBeEIsRUFBK0JWLE1BQWhEO0FBQ0gsR0FKaUIsQ0FLbEI7OztBQUNBUyxFQUFBQSxjQUFjO0FBQ2QsU0FBT0EsY0FBUDtBQUNILENBUkQsQyxDQVNBOzs7QUFDQWYsT0FBTyxDQUFDa0IsWUFBUixHQUF1QixVQUFDQyxhQUFELEVBQW1CO0FBQ2xDLE1BQUlDLFdBQVcsR0FBRyxFQUFsQjtBQUNBLE1BQUlDLGNBQWMsR0FBRztBQUFDQyxJQUFBQSxTQUFTLEVBQUU7QUFBWixHQUFyQjtBQUVKLE1BQUlDLFFBQVEsR0FBRzFCLGFBQWEsQ0FBQyxXQUFELENBQTVCLENBSnNDLENBTXRDOztBQUNBLE9BQUssSUFBSW1CLEtBQUssR0FBRyxDQUFqQixFQUFvQkEsS0FBSyxHQUFHTyxRQUFRLENBQUNOLE1BQXJDLEVBQTZDRCxLQUFLLEVBQWxELEVBQXNEO0FBQ2xELFFBQU1RLFdBQVcsR0FBR0QsUUFBUSxDQUFDUCxLQUFELENBQVIsQ0FBZ0JSLFFBQXBDO0FBQ0EsUUFBTWlCLFdBQVcsR0FBR0YsUUFBUSxDQUFDUCxLQUFELENBQVIsQ0FBZ0JQLFlBQXBDLENBRmtELENBR2xEOztBQUNBLFFBQUlVLGFBQWEsQ0FBQ1gsUUFBZCxLQUEyQmdCLFdBQTNCLElBQTBDTCxhQUFhLENBQUNWLFlBQWQsS0FBK0JnQixXQUE3RSxFQUEwRjtBQUN0RkosTUFBQUEsY0FBYyxHQUFHO0FBQ2JmLFFBQUFBLE1BQU0sRUFBRUEsTUFBTSxLQUFHLENBREo7QUFFYmdCLFFBQUFBLFNBQVMsRUFBRSxJQUZFO0FBR2JJLFFBQUFBLFNBQVMsRUFBRUgsUUFBUSxDQUFDUCxLQUFELENBQVIsQ0FBZ0JUO0FBSGQsT0FBakI7QUFLSDtBQUNKOztBQUNELFNBQU9jLGNBQVA7QUFDSCxDQXBCRDs7QUFxQkFyQixPQUFPLENBQUMyQixVQUFSLEdBQXFCLFVBQUNDLGNBQUQsRUFBb0I7QUFDckN6QixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxtQ0FBWixFQUFpRHdCLGNBQWpEO0FBQ0EsTUFBSUMsa0JBQWtCLEdBQUcsRUFBekI7QUFDQTFCLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHdDQUFaLEVBQXNEMEIsaUNBQXREOztBQUNBQSxvQ0FBb0JDLEdBQXBCLENBQXdCLFVBQUNDLEdBQUQsRUFBUztBQUM3QixTQUFLLElBQU1DLEdBQVgsSUFBa0JELEdBQWxCLEVBQXVCO0FBQ25CLFVBQUlBLEdBQUcsQ0FBQ0MsR0FBRCxDQUFILENBQVN6QixRQUFULEtBQXNCb0IsY0FBMUIsRUFBMEM7QUFDdENDLFFBQUFBLGtCQUFrQixDQUFDbkIsSUFBbkIsQ0FBd0JzQixHQUFHLENBQUNDLEdBQUQsQ0FBM0I7QUFDSDtBQUNKOztBQUNELFdBQU9KLGtCQUFQO0FBQ0gsR0FQRDs7QUFRQSxTQUFPQSxrQkFBUDtBQUNILENBYkQiLCJzb3VyY2VSb290IjoiRDpcXFdlYlxcSEJHV29ya3NcXFNjaGVkdWtlQXBwXFxTZXJ2ZXJIZXJva3VcXEZ1bmN0aW9ucyIsInNvdXJjZXNDb250ZW50IjpbIi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBVc2VyIGZ1bmN0aW9ucyBoYW5kbGluZyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuaW1wb3J0IHtpbmNvbW1pbmdTUUxEYXRhQXJyfSBmcm9tICcuL1NRTEZ1bmN0aW9ucyc7XHJcbmNvbnN0IHJlZ2VkVXNlckxpc3QgPSByZXF1aXJlKCcuL1JlZ2VkVXNlci5qc29uJyk7XHJcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcclxuXHJcbi8vIENyZWF0ZSBhIHVzZXIgYWNjb3VudFxyXG5leHBvcnRzLnVzZXJSZWcgPSAocmVnZWRVc2VyKSA9PntcclxuICAgIGNvbnNvbGUubG9nKFwidXNlclJlZyAtPiByZWdlZFVzZXJcIiwgcmVnZWRVc2VyKVxyXG5cclxuICAgIGNvbnN0IHJlZ2VkVXNlck9iaiA9IHtcclxuICAgICAgICB1c2VySWQ6IHVzZXJJZCgpLFxyXG4gICAgICAgIGZ1bGxOYW1lOiByZWdlZFVzZXIuZnVsbE5hbWUsIFxyXG4gICAgICAgIHVzZXJOYW1lOiByZWdlZFVzZXIudXNlck5hbWUsXHJcbiAgICAgICAgdXNlclBhc3NXb3JkOiByZWdlZFVzZXIudXNlclBhc3NXb3JkXHJcbiAgICB9XHJcblxyXG4gICAgcmVnZWRVc2VyTGlzdC5yZWdlZFVzZXIucHVzaChyZWdlZFVzZXJPYmopO1xyXG4gICAgY29uc29sZS5sb2coXCJ1c2VyUmVnIC0+IHJlZ2VkVXNlckxpc3RcIiwgcmVnZWRVc2VyTGlzdClcclxuXHJcbiAgICBmcy53cml0ZUZpbGUoJy4vRnVuY3Rpb25zL1JlZ2VkVXNlci5qc29uJywgSlNPTi5zdHJpbmdpZnkocmVnZWRVc2VyTGlzdCwgbnVsbCwgMSksIGZ1bmN0aW9uKGVycikge1xyXG4gICAgICAgIGlmKGVycikge1xyXG4gICAgICAgICAgICByZXR1cm4gY29uc29sZS5sb2coZXJyKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJUaGUgZmlsZSB3YXMgc2F2ZWQhXCIpO1xyXG4gICAgfSk7XHJcbn1cclxuLy9DcmVhdGUgaWQgZm9yIHRoZSBjcmVhdGVkIHVzZXJcclxubGV0IGNvdW50UmVnZWRVc2VyID0gMDtcclxuY29uc3QgdXNlcklkICA9ICgpID0+IHsgIFxyXG4gICAgLy9Ob3RlIC0gV2hlbiBjYWxsaW5nIHRoaXMgZnVuY3Rpb24gSSBuZWVkIHNldCB0aGUgaWQgdmFsdWUgPSAtMSBhYmxlIHN0YXJ0aW5nIHRoZSB1c2VyIGlkIGZyb20gbnIgMSAtLT5cclxuICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCByZWdlZFVzZXJMaXN0LnJlZ2VkVXNlci5sZW5ndGg7IGluZGV4KyspIHsgXHJcbiAgICAgICAgY291bnRSZWdlZFVzZXIgPSByZWdlZFVzZXJMaXN0LnJlZ2VkVXNlcltpbmRleF0udXNlcklkO1xyXG4gICAgfVxyXG4gICAgLy8gR2V0IHRoZSBsYXN0IGlkIGluIG15IGFyciBvZiB1c2VycyBhbmQgYWRkIGJ5IG9uZVxyXG4gICAgY291bnRSZWdlZFVzZXIrKzsgICAgXHJcbiAgICByZXR1cm4gY291bnRSZWdlZFVzZXI7XHJcbn1cclxuLy8gVmFsaWRhdGUgdGhlIHVzZXIgd2hvIHdoYW50cyBsb2dnaW5nIGluXHJcbmV4cG9ydHMudmFsaWRhdGVVc2VyID0gKGluY29tbWluZ1VzZXIpID0+IHtcclxuICAgICAgICBsZXQgZ2V0RnVsbE5hbWUgPSAnJztcclxuICAgICAgICBsZXQgdXNlclJldHVybkRhdGEgPSB7dXNlck1hdGNoOiBmYWxzZX07XHJcbiAgICAgICAgXHJcbiAgICBsZXQgdXNlckxpc3QgPSByZWdlZFVzZXJMaXN0WydyZWdlZFVzZXInXTtcclxuICAgIFxyXG4gICAgLy8gQ2hlY2sgdGhlIHVzZXJMaXN0IGZvciBhIHVzZXJOYW1lIHZzIHBhc3N3b3JkIG1hdGNoXHJcbiAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgdXNlckxpc3QubGVuZ3RoOyBpbmRleCsrKSB7XHJcbiAgICAgICAgY29uc3QgZ2V0VXNlcm5hbWUgPSB1c2VyTGlzdFtpbmRleF0udXNlck5hbWU7XHJcbiAgICAgICAgY29uc3QgZ2V0UGFzc3dvcmQgPSB1c2VyTGlzdFtpbmRleF0udXNlclBhc3NXb3JkO1xyXG4gICAgICAgIC8vIENoZWNrIGlmIHRoZXJlIGFyZSBhbnkgbWF0Y2ggd2l0aCBhIHJlZ2VkIHVzZXJcclxuICAgICAgICBpZiAoaW5jb21taW5nVXNlci51c2VyTmFtZSA9PT0gZ2V0VXNlcm5hbWUgJiYgaW5jb21taW5nVXNlci51c2VyUGFzc1dvcmQgPT09IGdldFBhc3N3b3JkKSB7XHJcbiAgICAgICAgICAgIHVzZXJSZXR1cm5EYXRhID0ge1xyXG4gICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQoKS0xLFxyXG4gICAgICAgICAgICAgICAgdXNlck1hdGNoOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgbG9naW5OYW1lOiB1c2VyTGlzdFtpbmRleF0uZnVsbE5hbWVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiB1c2VyUmV0dXJuRGF0YTtcclxufSBcclxuZXhwb3J0cy52ZXJpZnlVc2VyID0gKGdldElubG9nZWRVc2VyKSA9PiB7ICBcclxuICAgIGNvbnNvbGUubG9nKFwidmVyaWZ5VXNlciAtPiBnZXRJbmxvZ2VkVXNlciAtIDYxXCIsIGdldElubG9nZWRVc2VyKVxyXG4gICAgbGV0IGdldENvcnJlY3RVc2VyRGF0YSA9IFtdOyAgXHJcbiAgICBjb25zb2xlLmxvZyhcInZlcmlmeVVzZXIgLT4gaW5jb21taW5nU1FMRGF0YUFyciAtIDYzXCIsIGluY29tbWluZ1NRTERhdGFBcnIpXHJcbiAgICBpbmNvbW1pbmdTUUxEYXRhQXJyLm1hcCgob2JqKSA9PiB7XHJcbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gb2JqKSB7XHJcbiAgICAgICAgICAgIGlmIChvYmpba2V5XS51c2VyTmFtZSA9PT0gZ2V0SW5sb2dlZFVzZXIpIHtcclxuICAgICAgICAgICAgICAgIGdldENvcnJlY3RVc2VyRGF0YS5wdXNoKG9ialtrZXldKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZ2V0Q29ycmVjdFVzZXJEYXRhO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gZ2V0Q29ycmVjdFVzZXJEYXRhO1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "UserFunctions.js"
      ],
      "names": [
        "regedUserList",
        "require",
        "fs",
        "exports",
        "userReg",
        "regedUser",
        "console",
        "log",
        "regedUserObj",
        "userId",
        "fullName",
        "userName",
        "userPassWord",
        "push",
        "writeFile",
        "JSON",
        "stringify",
        "err",
        "countRegedUser",
        "index",
        "length",
        "validateUser",
        "incommingUser",
        "getFullName",
        "userReturnData",
        "userMatch",
        "userList",
        "getUsername",
        "getPassword",
        "loginName",
        "verifyUser",
        "getInlogedUser",
        "getCorrectUserData",
        "incommingSQLDataArr",
        "map",
        "obj",
        "key"
      ],
      "mappings": ";;AACA;;AADA;AAEA,IAAMA,aAAa,GAAGC,OAAO,CAAC,kBAAD,CAA7B;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB,C,CAEA;;;AACAE,OAAO,CAACC,OAAR,GAAkB,UAACC,SAAD,EAAc;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,SAApC;AAEA,MAAMG,YAAY,GAAG;AACjBC,IAAAA,MAAM,EAAEA,MAAM,EADG;AAEjBC,IAAAA,QAAQ,EAAEL,SAAS,CAACK,QAFH;AAGjBC,IAAAA,QAAQ,EAAEN,SAAS,CAACM,QAHH;AAIjBC,IAAAA,YAAY,EAAEP,SAAS,CAACO;AAJP,GAArB;AAOAZ,EAAAA,aAAa,CAACK,SAAd,CAAwBQ,IAAxB,CAA6BL,YAA7B;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCP,aAAxC;AAEAE,EAAAA,EAAE,CAACY,SAAH,CAAa,4BAAb,EAA2CC,IAAI,CAACC,SAAL,CAAehB,aAAf,EAA8B,IAA9B,EAAoC,CAApC,CAA3C,EAAmF,UAASiB,GAAT,EAAc;AAC7F,QAAGA,GAAH,EAAQ;AACJ,aAAOX,OAAO,CAACC,GAAR,CAAYU,GAAZ,CAAP;AACH;;AACDX,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH,GALD;AAMH,CAnBD,C,CAoBA;;;AACA,IAAIW,cAAc,GAAG,CAArB;;AACA,IAAMT,MAAM,GAAI,SAAVA,MAAU,GAAM;AAClB;AACA,OAAK,IAAIU,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGnB,aAAa,CAACK,SAAd,CAAwBe,MAApD,EAA4DD,KAAK,EAAjE,EAAqE;AACjED,IAAAA,cAAc,GAAGlB,aAAa,CAACK,SAAd,CAAwBc,KAAxB,EAA+BV,MAAhD;AACH,GAJiB,CAKlB;;;AACAS,EAAAA,cAAc;AACd,SAAOA,cAAP;AACH,CARD,C,CASA;;;AACAf,OAAO,CAACkB,YAAR,GAAuB,UAACC,aAAD,EAAmB;AAClC,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,cAAc,GAAG;AAACC,IAAAA,SAAS,EAAE;AAAZ,GAArB;AAEJ,MAAIC,QAAQ,GAAG1B,aAAa,CAAC,WAAD,CAA5B,CAJsC,CAMtC;;AACA,OAAK,IAAImB,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGO,QAAQ,CAACN,MAArC,EAA6CD,KAAK,EAAlD,EAAsD;AAClD,QAAMQ,WAAW,GAAGD,QAAQ,CAACP,KAAD,CAAR,CAAgBR,QAApC;AACA,QAAMiB,WAAW,GAAGF,QAAQ,CAACP,KAAD,CAAR,CAAgBP,YAApC,CAFkD,CAGlD;;AACA,QAAIU,aAAa,CAACX,QAAd,KAA2BgB,WAA3B,IAA0CL,aAAa,CAACV,YAAd,KAA+BgB,WAA7E,EAA0F;AACtFJ,MAAAA,cAAc,GAAG;AACbf,QAAAA,MAAM,EAAEA,MAAM,KAAG,CADJ;AAEbgB,QAAAA,SAAS,EAAE,IAFE;AAGbI,QAAAA,SAAS,EAAEH,QAAQ,CAACP,KAAD,CAAR,CAAgBT;AAHd,OAAjB;AAKH;AACJ;;AACD,SAAOc,cAAP;AACH,CApBD;;AAqBArB,OAAO,CAAC2B,UAAR,GAAqB,UAACC,cAAD,EAAoB;AACrCzB,EAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDwB,cAAjD;AACA,MAAIC,kBAAkB,GAAG,EAAzB;AACA1B,EAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ,EAAsD0B,iCAAtD;;AACAA,oCAAoBC,GAApB,CAAwB,UAACC,GAAD,EAAS;AAC7B,SAAK,IAAMC,GAAX,IAAkBD,GAAlB,EAAuB;AACnB,UAAIA,GAAG,CAACC,GAAD,CAAH,CAASzB,QAAT,KAAsBoB,cAA1B,EAA0C;AACtCC,QAAAA,kBAAkB,CAACnB,IAAnB,CAAwBsB,GAAG,CAACC,GAAD,CAA3B;AACH;AACJ;;AACD,WAAOJ,kBAAP;AACH,GAPD;;AAQA,SAAOA,kBAAP;AACH,CAbD",
      "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions",
      "sourcesContent": [
        "// ==================================== User functions handling ====================================\r\nimport {incommingSQLDataArr} from './SQLFunctions';\r\nconst regedUserList = require('./RegedUser.json');\r\nconst fs = require('fs');\r\n\r\n// Create a user account\r\nexports.userReg = (regedUser) =>{\r\n    console.log(\"userReg -> regedUser\", regedUser)\r\n\r\n    const regedUserObj = {\r\n        userId: userId(),\r\n        fullName: regedUser.fullName, \r\n        userName: regedUser.userName,\r\n        userPassWord: regedUser.userPassWord\r\n    }\r\n\r\n    regedUserList.regedUser.push(regedUserObj);\r\n    console.log(\"userReg -> regedUserList\", regedUserList)\r\n\r\n    fs.writeFile('./Functions/RegedUser.json', JSON.stringify(regedUserList, null, 1), function(err) {\r\n        if(err) {\r\n            return console.log(err);\r\n        }\r\n        console.log(\"The file was saved!\");\r\n    });\r\n}\r\n//Create id for the created user\r\nlet countRegedUser = 0;\r\nconst userId  = () => {  \r\n    //Note - When calling this function I need set the id value = -1 able starting the user id from nr 1 -->\r\n    for (let index = 0; index < regedUserList.regedUser.length; index++) { \r\n        countRegedUser = regedUserList.regedUser[index].userId;\r\n    }\r\n    // Get the last id in my arr of users and add by one\r\n    countRegedUser++;    \r\n    return countRegedUser;\r\n}\r\n// Validate the user who whants logging in\r\nexports.validateUser = (incommingUser) => {\r\n        let getFullName = '';\r\n        let userReturnData = {userMatch: false};\r\n        \r\n    let userList = regedUserList['regedUser'];\r\n    \r\n    // Check the userList for a userName vs password match\r\n    for (let index = 0; index < userList.length; index++) {\r\n        const getUsername = userList[index].userName;\r\n        const getPassword = userList[index].userPassWord;\r\n        // Check if there are any match with a reged user\r\n        if (incommingUser.userName === getUsername && incommingUser.userPassWord === getPassword) {\r\n            userReturnData = {\r\n                userId: userId()-1,\r\n                userMatch: true,\r\n                loginName: userList[index].fullName\r\n            }\r\n        }\r\n    }\r\n    return userReturnData;\r\n} \r\nexports.verifyUser = (getInlogedUser) => {  \r\n    console.log(\"verifyUser -> getInlogedUser - 61\", getInlogedUser)\r\n    let getCorrectUserData = [];  \r\n    console.log(\"verifyUser -> incommingSQLDataArr - 63\", incommingSQLDataArr)\r\n    incommingSQLDataArr.map((obj) => {\r\n        for (const key in obj) {\r\n            if (obj[key].userName === getInlogedUser) {\r\n                getCorrectUserData.push(obj[key]);\r\n            }\r\n        }\r\n        return getCorrectUserData;\r\n    });\r\n    return getCorrectUserData;\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1585215433300
  },
  "{\"sourceRoot\":\"C:\\\\Web\\\\HBGWorks\\\\ScheduleApp\\\\ServerHeroku\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Web\\\\HBGWorks\\\\ScheduleApp\\\\ServerHeroku\",\"filename\":\"C:\\\\Web\\\\HBGWorks\\\\ScheduleApp\\\\ServerHeroku\\\\ServerGetSQLData.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Web\\\\HBGWorks\\\\ScheduleApp\\\\ServerHeroku\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku",
      "filename": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\ServerGetSQLData.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\ServerGetSQLData.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\ServerGetSQLData.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku",
        "sourceFileName": "ServerGetSQLData.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _SQLFunctions = require(\"./Functions/SQLFunctions\");\n\nvar _UserFunctions = require(\"./Functions/UserFunctions\");\n\n// Import functions\nvar SQLConfig = require('./Functions/SQLConfig'); // Basic Server module\n\n\nvar express = require('express');\n\nvar jwt = require('jsonwebtoken');\n\nvar cors = require('cors');\n\nvar app = express();\napp.use(express.json());\napp.use(cors());\nvar addRecord = false;\nvar inNewRecord = false;\nvar countRegedUser = 0; // The server information\n\nvar port = process.env.PORT || SQLConfig.serverPort;\nvar serverIO = app.listen(port, function () {\n  return console.log(\"getSQLData is listening on port \".concat(port, \"!\"));\n}); // All the accessable users for the app\n\nvar regedUserList = require('./Functions/RegedUser.json'); // Run function for the mehods ================================================================================================\n\n\nvar emtyDataArrays = function emtyDataArrays(emtyingArr) {\n  //Emtying the array at the end\n  emtyingArr = [];\n}; // Validate the user who whants logging in\n\n\nvar createdToken = []; // Middleware for verfy token\n\nvar verifyToken = function verifyToken(req, res, next) {\n  var bearerHeader = req.headers['authorization'].split(' ')[1]; // check there is a token\n\n  if (bearerHeader === createdToken[0]) {\n    /*         let getInlogedUser = req.params.user;\r\n            console.log(\"verifyToken -> getInlogedUser\", getInlogedUser)\r\n            runSQLConn(buildCorrectSQLStatements('userSpec', getInlogedUser));\r\n            //jwt.verify(bearerHeader, 'inlogSecretKey');       \r\n            setTimeout(() => {   \r\n                res.status(200).send(verifyUser(getInlogedUser));\r\n            }, 3000); */\n    next();\n  } else res.status(403).send('Authorization failed!');\n}; // Run method when requested from client ======================================================================================\n// Run Logout  \n\n\napp.get('/SQLData', function (req, res) {\n  (0, _SQLFunctions.runSQLConn)((0, _SQLFunctions.buildCorrectSQLStatements)('first run', ''));\n  setTimeout(function () {\n    res.status(200).send(_SQLFunctions.incommingSQLDataArr);\n  }, 1000);\n  console.log('=========================userSpec==========================================');\n}); // User loging in =============================================================================================================\n// Request a UserValidation and store the unser as a token back --> send the token as a response\n\napp.post('/SQLData/Login', function (req, res) {\n  /*  The userdata is incomming and send into he function to validate the Logging in user:\r\n      if = true, the code = 200 is send back together with a tokem else the code = 404 is send with no data */\n  var incommingUserData = req.body.bodyData;\n  var returninUserData = (0, _UserFunctions.validateUser)(incommingUserData);\n\n  if (returninUserData.userMatch === true) {\n    jwt.sign(returninUserData, 'inlogSecretKey', function (error, token) {\n      if (token) {\n        createdToken.push(token);\n        res.statusMessage = \"You are authenticated'\";\n        res.status(200).send(token);\n      }\n\n      if (error) res.status(500);\n    });\n  }\n\n  if (returninUserData.userMatch === false) {\n    res.statusMessage = \"User does not find!\";\n    res.status(203).send(null); // User is unmatch\n  }\n\n  returninUserData = {};\n}); // Requested userData is send back if the token is the same as created\n\napp.get('/SQLData/:user', verifyToken, function (req, res) {\n  inNewRecord = true;\n  var getInlogedUser = req.params.user;\n  console.log(\"verifyToken -> getInlogedUser\", getInlogedUser);\n  (0, _SQLFunctions.runSQLConn)((0, _SQLFunctions.buildCorrectSQLStatements)('userSpec', getInlogedUser)); //jwt.verify(bearerHeader, 'inlogSecretKey');       \n\n  setTimeout(function () {\n    res.status(200).send((0, _UserFunctions.verifyUser)(getInlogedUser));\n  }, 3000);\n}); // AddSQLData & RegUsers ============================================================\n\napp.post('/SQLData/AddRecord', function (req, res) {\n  addRecord = true;\n  var currentInData = req.body.bodyData;\n  (0, _SQLFunctions.runSQLConn)((0, _SQLFunctions.buildCorrectSQLStatements)('addRecord', currentInData)); //incommingSQLDataArr.push(currentStatement);\n\n  console.log('===================================================================');\n  addRecord = false;\n  emtyDataArrays();\n}); // UserReg =========================================================================\n\napp.post('/SQLData/UserReg', function (req, res) {\n  addRecord = true;\n  console.log('192');\n  console.log(req.body.bodyData);\n  userReg(req.body.bodyData);\n  console.log('===================================================================');\n  addRecord = false;\n  emtyDataArrays();\n}); // =================================================================================\n// Run filtering\n\napp.post('/SQLData/filter', function (req, res) {}); // ============================================================================================================================\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "ServerGetSQLData.js"
      ],
      "names": [
        "SQLConfig",
        "require",
        "express",
        "jwt",
        "cors",
        "app",
        "use",
        "json",
        "addRecord",
        "inNewRecord",
        "countRegedUser",
        "port",
        "process",
        "env",
        "PORT",
        "serverPort",
        "serverIO",
        "listen",
        "console",
        "log",
        "regedUserList",
        "emtyDataArrays",
        "emtyingArr",
        "createdToken",
        "verifyToken",
        "req",
        "res",
        "next",
        "bearerHeader",
        "headers",
        "split",
        "status",
        "send",
        "get",
        "setTimeout",
        "incommingSQLDataArr",
        "post",
        "incommingUserData",
        "body",
        "bodyData",
        "returninUserData",
        "userMatch",
        "sign",
        "error",
        "token",
        "push",
        "statusMessage",
        "getInlogedUser",
        "params",
        "user",
        "currentInData",
        "userReg"
      ],
      "mappings": ";;AACA;;AACA;;AAFA;AAIA,IAAMA,SAAS,GAAGC,OAAO,CAAC,uBAAD,CAAzB,C,CAEA;;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,cAAD,CAAjB;;AAEA,IAAIG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAMI,GAAG,GAAGH,OAAO,EAAnB;AACAG,GAAG,CAACC,GAAJ,CAAQJ,OAAO,CAACK,IAAR,EAAR;AACAF,GAAG,CAACC,GAAJ,CAAQF,IAAI,EAAZ;AAEA,IAAII,SAAS,GAAG,KAAhB;AACA,IAAIC,WAAW,GAAG,KAAlB;AACA,IAAIC,cAAc,GAAG,CAArB,C,CAEA;;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoBd,SAAS,CAACe,UAA3C;AACA,IAAIC,QAAQ,GAAGX,GAAG,CAACY,MAAJ,CAAWN,IAAX,EAAiB;AAAA,SAAMO,OAAO,CAACC,GAAR,2CAA+CR,IAA/C,OAAN;AAAA,CAAjB,CAAf,C,CAEA;;AACA,IAAIS,aAAa,GAAGnB,OAAO,CAAC,4BAAD,CAA3B,C,CAEA;;;AAEI,IAAIoB,cAAc,GAAG,SAAjBA,cAAiB,CAACC,UAAD,EAAgB;AACjC;AACAA,EAAAA,UAAU,GAAG,EAAb;AACH,CAHD,C,CAIA;;;AACJ,IAAMC,YAAY,GAAG,EAArB,C,CAEA;;AACA,IAAIC,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAmB;AACjC,MAAMC,YAAY,GAAGH,GAAG,CAACI,OAAJ,CAAY,eAAZ,EAA6BC,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CAArB,CADiC,CAEjC;;AACA,MAAIF,YAAY,KAAKL,YAAY,CAAC,CAAD,CAAjC,EAAsC;AAC1C;;;;;;;AAQQI,IAAAA,IAAI;AACP,GAVD,MAWKD,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,uBAArB;AACR,CAfD,C,CAiBA;AACA;;;AACA3B,GAAG,CAAC4B,GAAJ,CAAQ,UAAR,EAAoB,UAACR,GAAD,EAAMC,GAAN,EAAc;AAC9B,gCAAW,6CAA0B,WAA1B,EAAuC,EAAvC,CAAX;AACAQ,EAAAA,UAAU,CAAC,YAAO;AACdR,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBG,iCAArB;AACH,GAFS,EAEP,IAFO,CAAV;AAGIjB,EAAAA,OAAO,CAACC,GAAR,CAAY,6EAAZ;AACP,CAND,E,CAQA;AACA;;AACAd,GAAG,CAAC+B,IAAJ,CAAS,gBAAT,EAA2B,UAACX,GAAD,EAAMC,GAAN,EAAc;AACrC;;AAEA,MAAIW,iBAAiB,GAAGZ,GAAG,CAACa,IAAJ,CAASC,QAAjC;AACA,MAAIC,gBAAgB,GAAG,iCAAaH,iBAAb,CAAvB;;AAEA,MAAIG,gBAAgB,CAACC,SAAjB,KAA+B,IAAnC,EAAyC;AACrCtC,IAAAA,GAAG,CAACuC,IAAJ,CAASF,gBAAT,EAA2B,gBAA3B,EAA6C,UAACG,KAAD,EAAQC,KAAR,EAAkB;AAC3D,UAAGA,KAAH,EAAS;AACLrB,QAAAA,YAAY,CAACsB,IAAb,CAAkBD,KAAlB;AACAlB,QAAAA,GAAG,CAACoB,aAAJ,GAAoB,wBAApB;AACApB,QAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBY,KAArB;AACH;;AACD,UAAID,KAAJ,EAAWjB,GAAG,CAACK,MAAJ,CAAW,GAAX;AACd,KAPD;AAQF;;AAEF,MAAIS,gBAAgB,CAACC,SAAjB,KAA+B,KAAnC,EAA0C;AACtCf,IAAAA,GAAG,CAACoB,aAAJ,GAAoB,qBAApB;AACApB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,IAArB,EAFsC,CAEV;AAC/B;;AACDQ,EAAAA,gBAAgB,GAAG,EAAnB;AACH,CAtBD,E,CAuBA;;AACAnC,GAAG,CAAC4B,GAAJ,CAAQ,gBAAR,EAA0BT,WAA1B,EAAuC,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjDjB,EAAAA,WAAW,GAAG,IAAd;AACA,MAAIsC,cAAc,GAAGtB,GAAG,CAACuB,MAAJ,CAAWC,IAAhC;AACA/B,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6C4B,cAA7C;AACA,gCAAW,6CAA0B,UAA1B,EAAsCA,cAAtC,CAAX,EAJiD,CAKjD;;AACAb,EAAAA,UAAU,CAAC,YAAM;AACbR,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,+BAAWe,cAAX,CAArB;AACH,GAFS,EAEP,IAFO,CAAV;AAGH,CATD,E,CAYA;;AACA1C,GAAG,CAAC+B,IAAJ,CAAS,oBAAT,EAA+B,UAACX,GAAD,EAAMC,GAAN,EAAc;AACzClB,EAAAA,SAAS,GAAG,IAAZ;AACA,MAAI0C,aAAa,GAAGzB,GAAG,CAACa,IAAJ,CAASC,QAA7B;AAEA,gCAAW,6CAA0B,WAA1B,EAAuCW,aAAvC,CAAX,EAJyC,CAKzC;;AACAhC,EAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACAX,EAAAA,SAAS,GAAG,KAAZ;AACAa,EAAAA,cAAc;AACjB,CATD,E,CAUA;;AACAhB,GAAG,CAAC+B,IAAJ,CAAS,kBAAT,EAA6B,UAACX,GAAD,EAAMC,GAAN,EAAc;AACvClB,EAAAA,SAAS,GAAG,IAAZ;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACa,IAAJ,CAASC,QAArB;AAEAY,EAAAA,OAAO,CAAC1B,GAAG,CAACa,IAAJ,CAASC,QAAV,CAAP;AAGArB,EAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACAX,EAAAA,SAAS,GAAG,KAAZ;AACAa,EAAAA,cAAc;AACjB,CAXD,E,CAYA;AAEA;;AACAhB,GAAG,CAAC+B,IAAJ,CAAS,iBAAT,EAA4B,UAACX,GAAD,EAAMC,GAAN,EAAc,CAGzC,CAHD,E,CAKA",
      "sourceRoot": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku",
      "sourcesContent": [
        "// Import functions\r\nimport {runSQLConn, buildCorrectSQLStatements, incommingSQLDataArr} from './Functions/SQLFunctions'; \r\nimport {userId, validateUser, verifyUser} from './Functions/UserFunctions';\r\n\r\nconst SQLConfig = require('./Functions/SQLConfig');\r\n\r\n// Basic Server module\r\nconst express = require('express');\r\nlet jwt = require('jsonwebtoken');\r\n\r\nlet cors = require('cors');\r\nconst app = express();\r\napp.use(express.json());\r\napp.use(cors());\r\n\r\nlet addRecord = false;\r\nlet inNewRecord = false; \r\nlet countRegedUser = 0;\r\n \r\n// The server information\r\nconst port = process.env.PORT || SQLConfig.serverPort;\r\nlet serverIO = app.listen(port, () => console.log(`getSQLData is listening on port ${port}!`));\r\n\r\n// All the accessable users for the app\r\nlet regedUserList = require('./Functions/RegedUser.json');\r\n\r\n// Run function for the mehods ================================================================================================\r\n    \r\n    let emtyDataArrays = (emtyingArr) => {\r\n        //Emtying the array at the end\r\n        emtyingArr = [];\r\n    }\r\n    // Validate the user who whants logging in\r\nconst createdToken = [];\r\n\r\n// Middleware for verfy token\r\nlet verifyToken = (req, res, next) =>{\r\n    const bearerHeader = req.headers['authorization'].split(' ')[1];\r\n    // check there is a token\r\n    if (bearerHeader === createdToken[0]) {       \r\n/*         let getInlogedUser = req.params.user;\r\n        console.log(\"verifyToken -> getInlogedUser\", getInlogedUser)\r\n        runSQLConn(buildCorrectSQLStatements('userSpec', getInlogedUser));\r\n        //jwt.verify(bearerHeader, 'inlogSecretKey');       \r\n        setTimeout(() => {   \r\n            res.status(200).send(verifyUser(getInlogedUser));\r\n        }, 3000); */\r\n\r\n        next();\r\n    }\r\n    else res.status(403).send('Authorization failed!');\r\n} \r\n\r\n// Run method when requested from client ======================================================================================\r\n// Run Logout  \r\napp.get('/SQLData', (req, res) => {\r\n    runSQLConn(buildCorrectSQLStatements('first run', '')); \r\n    setTimeout(()  => {\r\n        res.status(200).send(incommingSQLDataArr);\r\n    }, 1000);  \r\n        console.log('=========================userSpec==========================================');\r\n});\r\n\r\n// User loging in =============================================================================================================\r\n// Request a UserValidation and store the unser as a token back --> send the token as a response\r\napp.post('/SQLData/Login', (req, res) => {\r\n    /*  The userdata is incomming and send into he function to validate the Logging in user:\r\n        if = true, the code = 200 is send back together with a tokem else the code = 404 is send with no data */\r\n    let incommingUserData = req.body.bodyData;\r\n    let returninUserData = validateUser(incommingUserData);\r\n     \r\n    if (returninUserData.userMatch === true) {        \r\n        jwt.sign(returninUserData, 'inlogSecretKey', (error, token) => {\r\n            if(token){\r\n                createdToken.push(token);\r\n                res.statusMessage = \"You are authenticated'\";\r\n                res.status(200).send(token);\r\n            }\r\n            if (error) res.status(500);             \r\n        });        \r\n     }    \r\n\r\n    if (returninUserData.userMatch === false) {\r\n        res.statusMessage = \"User does not find!\";\r\n        res.status(203).send(null); // User is unmatch\r\n    }\r\n    returninUserData = {};\r\n});\r\n// Requested userData is send back if the token is the same as created\r\napp.get('/SQLData/:user', verifyToken, (req, res) => {\r\n    inNewRecord = true;\r\n    let getInlogedUser = req.params.user;\r\n    console.log(\"verifyToken -> getInlogedUser\", getInlogedUser)\r\n    runSQLConn(buildCorrectSQLStatements('userSpec', getInlogedUser));\r\n    //jwt.verify(bearerHeader, 'inlogSecretKey');       \r\n    setTimeout(() => {   \r\n        res.status(200).send(verifyUser(getInlogedUser));\r\n    }, 3000);\r\n});\r\n\r\n\r\n// AddSQLData & RegUsers ============================================================\r\napp.post('/SQLData/AddRecord', (req, res) => {\r\n    addRecord = true;\r\n    let currentInData = req.body.bodyData;\r\n\r\n    runSQLConn(buildCorrectSQLStatements('addRecord', currentInData));\r\n    //incommingSQLDataArr.push(currentStatement);\r\n    console.log('===================================================================');\r\n    addRecord = false;\r\n    emtyDataArrays();\r\n});\r\n// UserReg =========================================================================\r\napp.post('/SQLData/UserReg', (req, res) => {\r\n    addRecord = true;\r\n    console.log('192');\r\n    console.log(req.body.bodyData);\r\n    \r\n    userReg(req.body.bodyData);\r\n\r\n\r\n    console.log('===================================================================');\r\n    addRecord = false;\r\n    emtyDataArrays();\r\n});\r\n// =================================================================================\r\n\r\n// Run filtering\r\napp.post('/SQLData/filter', (req, res) => {\r\n    \r\n\r\n});\r\n\r\n// ============================================================================================================================"
      ]
    },
    "sourceType": "script",
    "mtime": 1584360989573
  },
  "{\"sourceRoot\":\"C:\\\\Web\\\\HBGWorks\\\\ScheduleApp\\\\ServerHeroku\\\\Functions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Web\\\\HBGWorks\\\\ScheduleApp\\\\ServerHeroku\",\"filename\":\"C:\\\\Web\\\\HBGWorks\\\\ScheduleApp\\\\ServerHeroku\\\\Functions\\\\SQLFunctions.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Web\\\\HBGWorks\\\\ScheduleApp\\\\ServerHeroku\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\Functions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku",
      "filename": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\Functions\\SQLFunctions.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\Functions\\SQLFunctions.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\Functions\\SQLFunctions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\Functions",
        "sourceFileName": "SQLFunctions.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildCorrectSQLStatements = exports.runSQLConn = exports.test = exports.incommingSQLDataArr = void 0;\n\n//SQL Config\nvar mysql = require('mysql');\n\nvar SQLConfig = require('./SQLConfig');\n\nvar incommingSQLDataArr = [];\nexports.incommingSQLDataArr = incommingSQLDataArr;\nvar currentStatement = '';\nvar choosenStatement = '';\nvar count = 0;\nvar defaultStatement = \"SELECT * FROM \".concat(SQLConfig.SQLTable);\nvar test = 2;\nexports.test = test;\n\nvar runSQLConn = function runSQLConn(SQLStatement) {\n  count++; // Creates a connection between the server and my client and listen for SQL changes¨\n  //let SQLConn = mysql.createConnection([{multipleStatements: true}, 'mysql://djcp7bmvky3s0mnm:osp74zwrq5ut4gun@m60mxazb4g6sb4nn.chr7pe7iynqr.eu-west-1.rds.amazonaws.com:3306/q3uqurm7z68qb3h2']);\n\n  console.log(\"Ansluten till DB :)\");\n  var SQLConn = mysql.createConnection({\n    host: SQLConfig.host,\n    user: SQLConfig.user,\n    password: SQLConfig.password,\n    port: SQLConfig.sqlPort,\n    database: SQLConfig.database,\n    multipleStatements: SQLConfig.multipleStatements\n  });\n  SQLConn.connect(function (err) {\n    if (err) throw err;\n    console.log(\"runSQLConn -> SQLStatement\", SQLStatement);\n    SQLConn.query(SQLStatement, function (err, sqlResult) {\n      console.log(\"runSQLConn -> sqlResult\", sqlResult);\n      incommingSQLDataArr.push(sqlResult); //console.log(\"incommingSQLDataArr - 43\", incommingSQLDataArr)\n\n      if (err) {\n        //SQLConn.release();\n        return;\n      }\n    });\n    SQLConn.end();\n  });\n};\n\nexports.runSQLConn = runSQLConn;\n\nvar buildCorrectSQLStatements = function buildCorrectSQLStatements(statementType, SQLObj) {\n  // Find correct SQLStatement\n  var statementCols = 'date, activity, state, concerned, type, place, content';\n  if (statementType === 'first run') choosenStatement = \"SELECT * FROM \".concat(SQLConfig.SQLTable, \" ORDER BY date DESC\");\n\n  if (statementType === 'addRecord') {\n    var statementInsertIntoData = \"('\".concat(SQLObj.join(\"','\"), \"');\");\n    choosenStatement = \"INSERT INTO \".concat(SQLConfig.SQLTable, \" (sent, \").concat(statementCols, \") VALUES\").concat(statementInsertIntoData);\n  }\n\n  if (statementType === 'userSpec') {\n    choosenStatement = \"SELECT * FROM \".concat(SQLConfig.SQLTable, \" WHERE userName=\").concat(SQLObj, \" ORDER BY date DESC\");\n  } //if (statementType === 'filter') choosenStatement = `SELECT * FROM data ${SQLObj.currentStatement.operator} ${ SQLObj.currentStatement.filterIn } in ('${ SQLObj.currentStatement.SQLFilterStr}')`;\n\n\n  currentStatement = choosenStatement;\n  return currentStatement;\n}; //Function to choose correct statement according the inomming data\n\n\nexports.buildCorrectSQLStatements = buildCorrectSQLStatements;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNRTEZ1bmN0aW9ucy5qcyJdLCJuYW1lcyI6WyJteXNxbCIsInJlcXVpcmUiLCJTUUxDb25maWciLCJpbmNvbW1pbmdTUUxEYXRhQXJyIiwiY3VycmVudFN0YXRlbWVudCIsImNob29zZW5TdGF0ZW1lbnQiLCJjb3VudCIsImRlZmF1bHRTdGF0ZW1lbnQiLCJTUUxUYWJsZSIsInRlc3QiLCJydW5TUUxDb25uIiwiU1FMU3RhdGVtZW50IiwiY29uc29sZSIsImxvZyIsIlNRTENvbm4iLCJjcmVhdGVDb25uZWN0aW9uIiwiaG9zdCIsInVzZXIiLCJwYXNzd29yZCIsInBvcnQiLCJzcWxQb3J0IiwiZGF0YWJhc2UiLCJtdWx0aXBsZVN0YXRlbWVudHMiLCJjb25uZWN0IiwiZXJyIiwicXVlcnkiLCJzcWxSZXN1bHQiLCJwdXNoIiwiZW5kIiwiYnVpbGRDb3JyZWN0U1FMU3RhdGVtZW50cyIsInN0YXRlbWVudFR5cGUiLCJTUUxPYmoiLCJzdGF0ZW1lbnRDb2xzIiwic3RhdGVtZW50SW5zZXJ0SW50b0RhdGEiLCJqb2luIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQSxJQUFJQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQW5COztBQUNBLElBQU1DLFNBQVMsR0FBR0QsT0FBTyxDQUFDLGFBQUQsQ0FBekI7O0FBQ08sSUFBSUUsbUJBQW1CLEdBQUcsRUFBMUI7O0FBQ1AsSUFBSUMsZ0JBQWdCLEdBQUcsRUFBdkI7QUFDQSxJQUFJQyxnQkFBZ0IsR0FBRyxFQUF2QjtBQUNBLElBQUlDLEtBQUssR0FBRyxDQUFaO0FBRUEsSUFBSUMsZ0JBQWdCLDJCQUFvQkwsU0FBUyxDQUFDTSxRQUE5QixDQUFwQjtBQUVPLElBQUlDLElBQUksR0FBRyxDQUFYOzs7QUFFQSxJQUFJQyxVQUFVLEdBQUcsU0FBYkEsVUFBYSxDQUFDQyxZQUFELEVBQWlCO0FBQ3JDTCxFQUFBQSxLQUFLLEdBRGdDLENBRXJDO0FBQ0E7O0FBRUFNLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHFCQUFaO0FBQ0EsTUFBSUMsT0FBTyxHQUFHZCxLQUFLLENBQUNlLGdCQUFOLENBQXVCO0FBQ2pDQyxJQUFBQSxJQUFJLEVBQUVkLFNBQVMsQ0FBQ2MsSUFEaUI7QUFFakNDLElBQUFBLElBQUksRUFBRWYsU0FBUyxDQUFDZSxJQUZpQjtBQUdqQ0MsSUFBQUEsUUFBUSxFQUFFaEIsU0FBUyxDQUFDZ0IsUUFIYTtBQUlqQ0MsSUFBQUEsSUFBSSxFQUFFakIsU0FBUyxDQUFDa0IsT0FKaUI7QUFLakNDLElBQUFBLFFBQVEsRUFBRW5CLFNBQVMsQ0FBQ21CLFFBTGE7QUFNakNDLElBQUFBLGtCQUFrQixFQUFFcEIsU0FBUyxDQUFDb0I7QUFORyxHQUF2QixDQUFkO0FBUUFSLEVBQUFBLE9BQU8sQ0FBQ1MsT0FBUixDQUFnQixVQUFTQyxHQUFULEVBQWM7QUFDMUIsUUFBSUEsR0FBSixFQUFTLE1BQU1BLEdBQU47QUFDVFosSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksNEJBQVosRUFBMENGLFlBQTFDO0FBQ0FHLElBQUFBLE9BQU8sQ0FBQ1csS0FBUixDQUFjZCxZQUFkLEVBQTRCLFVBQVVhLEdBQVYsRUFBZUUsU0FBZixFQUEwQjtBQUN0RGQsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVkseUJBQVosRUFBdUNhLFNBQXZDO0FBQ0l2QixNQUFBQSxtQkFBbUIsQ0FBQ3dCLElBQXBCLENBQXlCRCxTQUF6QixFQUZrRCxDQUdsRDs7QUFDQSxVQUFJRixHQUFKLEVBQVM7QUFDTDtBQUNBO0FBQ0g7QUFDSixLQVJEO0FBU0FWLElBQUFBLE9BQU8sQ0FBQ2MsR0FBUjtBQUNILEdBYkQ7QUFjSCxDQTVCTTs7OztBQTZCQSxJQUFJQyx5QkFBeUIsR0FBRyxTQUE1QkEseUJBQTRCLENBQUNDLGFBQUQsRUFBZ0JDLE1BQWhCLEVBQTBCO0FBQUU7QUFDL0QsTUFBSUMsYUFBYSxHQUFHLHdEQUFwQjtBQUVBLE1BQUlGLGFBQWEsS0FBSyxXQUF0QixFQUFtQ3pCLGdCQUFnQiwyQkFBb0JILFNBQVMsQ0FBQ00sUUFBOUIsd0JBQWhCOztBQUVuQyxNQUFJc0IsYUFBYSxLQUFLLFdBQXRCLEVBQW1DO0FBQy9CLFFBQUlHLHVCQUF1QixlQUFTRixNQUFNLENBQUNHLElBQVAsQ0FBWSxLQUFaLENBQVQsUUFBM0I7QUFDQTdCLElBQUFBLGdCQUFnQix5QkFBbUJILFNBQVMsQ0FBQ00sUUFBN0IscUJBQWlEd0IsYUFBakQscUJBQTJFQyx1QkFBM0UsQ0FBaEI7QUFDSDs7QUFHRCxNQUFJSCxhQUFhLEtBQUssVUFBdEIsRUFBa0M7QUFDOUJ6QixJQUFBQSxnQkFBZ0IsMkJBQW9CSCxTQUFTLENBQUNNLFFBQTlCLDZCQUEwRHVCLE1BQTFELHdCQUFoQjtBQUNILEdBYjRELENBZTdEOzs7QUFFQTNCLEVBQUFBLGdCQUFnQixHQUFHQyxnQkFBbkI7QUFDQSxTQUFPRCxnQkFBUDtBQUNILENBbkJNLEMsQ0FvQkgiLCJzb3VyY2VSb290IjoiQzpcXFdlYlxcSEJHV29ya3NcXFNjaGVkdWxlQXBwXFxTZXJ2ZXJIZXJva3VcXEZ1bmN0aW9ucyIsInNvdXJjZXNDb250ZW50IjpbIi8vU1FMIENvbmZpZ1xyXG52YXIgbXlzcWwgPSByZXF1aXJlKCdteXNxbCcpO1xyXG5jb25zdCBTUUxDb25maWcgPSByZXF1aXJlKCcuL1NRTENvbmZpZycpO1xyXG5leHBvcnQgbGV0IGluY29tbWluZ1NRTERhdGFBcnIgPSBbXTtcclxubGV0IGN1cnJlbnRTdGF0ZW1lbnQgPSAnJztcclxubGV0IGNob29zZW5TdGF0ZW1lbnQgPSAnJztcclxubGV0IGNvdW50ID0gMDtcclxuXHJcbmxldCBkZWZhdWx0U3RhdGVtZW50ID0gYFNFTEVDVCAqIEZST00gJHtTUUxDb25maWcuU1FMVGFibGV9YDtcclxuXHJcbmV4cG9ydCBsZXQgdGVzdCA9IDI7XHJcblxyXG5leHBvcnQgbGV0IHJ1blNRTENvbm4gPSAoU1FMU3RhdGVtZW50KSA9PnsgICAgICBcclxuICAgIGNvdW50Kys7XHJcbiAgICAvLyBDcmVhdGVzIGEgY29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBzZXJ2ZXIgYW5kIG15IGNsaWVudCBhbmQgbGlzdGVuIGZvciBTUUwgY2hhbmdlc8KoXHJcbiAgICAvL2xldCBTUUxDb25uID0gbXlzcWwuY3JlYXRlQ29ubmVjdGlvbihbe211bHRpcGxlU3RhdGVtZW50czogdHJ1ZX0sICdteXNxbDovL2RqY3A3Ym12a3kzczBtbm06b3NwNzR6d3JxNXV0NGd1bkBtNjBteGF6YjRnNnNiNG5uLmNocjdwZTdpeW5xci5ldS13ZXN0LTEucmRzLmFtYXpvbmF3cy5jb206MzMwNi9xM3VxdXJtN3o2OHFiM2gyJ10pO1xyXG5cclxuICAgIGNvbnNvbGUubG9nKFwiQW5zbHV0ZW4gdGlsbCBEQiA6KVwiKTtcclxuICAgIGxldCBTUUxDb25uID0gbXlzcWwuY3JlYXRlQ29ubmVjdGlvbih7XHJcbiAgICAgICAgaG9zdDogU1FMQ29uZmlnLmhvc3QsXHJcbiAgICAgICAgdXNlcjogU1FMQ29uZmlnLnVzZXIsXHJcbiAgICAgICAgcGFzc3dvcmQ6IFNRTENvbmZpZy5wYXNzd29yZCxcclxuICAgICAgICBwb3J0OiBTUUxDb25maWcuc3FsUG9ydCxcclxuICAgICAgICBkYXRhYmFzZTogU1FMQ29uZmlnLmRhdGFiYXNlLFxyXG4gICAgICAgIG11bHRpcGxlU3RhdGVtZW50czogU1FMQ29uZmlnLm11bHRpcGxlU3RhdGVtZW50cyxcclxuICAgIH0pO1xyXG4gICAgU1FMQ29ubi5jb25uZWN0KGZ1bmN0aW9uKGVycikgeyBcclxuICAgICAgICBpZiAoZXJyKSB0aHJvdyBlcnI7ICAgICAgICBcclxuICAgICAgICBjb25zb2xlLmxvZyhcInJ1blNRTENvbm4gLT4gU1FMU3RhdGVtZW50XCIsIFNRTFN0YXRlbWVudClcclxuICAgICAgICBTUUxDb25uLnF1ZXJ5KFNRTFN0YXRlbWVudCwgZnVuY3Rpb24gKGVyciwgc3FsUmVzdWx0KSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJydW5TUUxDb25uIC0+IHNxbFJlc3VsdFwiLCBzcWxSZXN1bHQpO1xyXG4gICAgICAgICAgICBpbmNvbW1pbmdTUUxEYXRhQXJyLnB1c2goc3FsUmVzdWx0KTtcclxuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcImluY29tbWluZ1NRTERhdGFBcnIgLSA0M1wiLCBpbmNvbW1pbmdTUUxEYXRhQXJyKVxyXG4gICAgICAgICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICAgICAgICAvL1NRTENvbm4ucmVsZWFzZSgpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7IFxyXG4gICAgICAgIFNRTENvbm4uZW5kKCk7XHJcbiAgICB9KTtcclxufVxyXG5leHBvcnQgbGV0IGJ1aWxkQ29ycmVjdFNRTFN0YXRlbWVudHMgPSAoc3RhdGVtZW50VHlwZSwgU1FMT2JqKSA9PnsgLy8gRmluZCBjb3JyZWN0IFNRTFN0YXRlbWVudFxyXG4gICAgbGV0IHN0YXRlbWVudENvbHMgPSAnZGF0ZSwgYWN0aXZpdHksIHN0YXRlLCBjb25jZXJuZWQsIHR5cGUsIHBsYWNlLCBjb250ZW50JzsgICAgXHJcbiAgICBcclxuICAgIGlmIChzdGF0ZW1lbnRUeXBlID09PSAnZmlyc3QgcnVuJykgY2hvb3NlblN0YXRlbWVudCA9IGBTRUxFQ1QgKiBGUk9NICR7U1FMQ29uZmlnLlNRTFRhYmxlfSBPUkRFUiBCWSBkYXRlIERFU0NgO1xyXG4gICAgXHJcbiAgICBpZiAoc3RhdGVtZW50VHlwZSA9PT0gJ2FkZFJlY29yZCcpIHtcclxuICAgICAgICBsZXQgc3RhdGVtZW50SW5zZXJ0SW50b0RhdGEgPSBgKCckeyBTUUxPYmouam9pbihcIicsJ1wiKX0nKTtgO1xyXG4gICAgICAgIGNob29zZW5TdGF0ZW1lbnQgPSBgSU5TRVJUIElOVE8gJHsgU1FMQ29uZmlnLlNRTFRhYmxlfSAoc2VudCwgJHsgc3RhdGVtZW50Q29scyB9KSBWQUxVRVMkeyBzdGF0ZW1lbnRJbnNlcnRJbnRvRGF0YX1gOyAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgaWYgKHN0YXRlbWVudFR5cGUgPT09ICd1c2VyU3BlYycpIHtcclxuICAgICAgICBjaG9vc2VuU3RhdGVtZW50ID0gYFNFTEVDVCAqIEZST00gJHtTUUxDb25maWcuU1FMVGFibGV9IFdIRVJFIHVzZXJOYW1lPSR7IFNRTE9iaiB9IE9SREVSIEJZIGRhdGUgREVTQ2A7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vaWYgKHN0YXRlbWVudFR5cGUgPT09ICdmaWx0ZXInKSBjaG9vc2VuU3RhdGVtZW50ID0gYFNFTEVDVCAqIEZST00gZGF0YSAke1NRTE9iai5jdXJyZW50U3RhdGVtZW50Lm9wZXJhdG9yfSAkeyBTUUxPYmouY3VycmVudFN0YXRlbWVudC5maWx0ZXJJbiB9IGluICgnJHsgU1FMT2JqLmN1cnJlbnRTdGF0ZW1lbnQuU1FMRmlsdGVyU3RyfScpYDtcclxuICAgIFxyXG4gICAgY3VycmVudFN0YXRlbWVudCA9IGNob29zZW5TdGF0ZW1lbnQ7ICAgXHJcbiAgICByZXR1cm4gY3VycmVudFN0YXRlbWVudDtcclxufVxyXG4gICAgLy9GdW5jdGlvbiB0byBjaG9vc2UgY29ycmVjdCBzdGF0ZW1lbnQgYWNjb3JkaW5nIHRoZSBpbm9tbWluZyBkYXRhIl19",
    "map": {
      "version": 3,
      "sources": [
        "SQLFunctions.js"
      ],
      "names": [
        "mysql",
        "require",
        "SQLConfig",
        "incommingSQLDataArr",
        "currentStatement",
        "choosenStatement",
        "count",
        "defaultStatement",
        "SQLTable",
        "test",
        "runSQLConn",
        "SQLStatement",
        "console",
        "log",
        "SQLConn",
        "createConnection",
        "host",
        "user",
        "password",
        "port",
        "sqlPort",
        "database",
        "multipleStatements",
        "connect",
        "err",
        "query",
        "sqlResult",
        "push",
        "end",
        "buildCorrectSQLStatements",
        "statementType",
        "SQLObj",
        "statementCols",
        "statementInsertIntoData",
        "join"
      ],
      "mappings": ";;;;;;;AAAA;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAzB;;AACO,IAAIE,mBAAmB,GAAG,EAA1B;;AACP,IAAIC,gBAAgB,GAAG,EAAvB;AACA,IAAIC,gBAAgB,GAAG,EAAvB;AACA,IAAIC,KAAK,GAAG,CAAZ;AAEA,IAAIC,gBAAgB,2BAAoBL,SAAS,CAACM,QAA9B,CAApB;AAEO,IAAIC,IAAI,GAAG,CAAX;;;AAEA,IAAIC,UAAU,GAAG,SAAbA,UAAa,CAACC,YAAD,EAAiB;AACrCL,EAAAA,KAAK,GADgC,CAErC;AACA;;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,MAAIC,OAAO,GAAGd,KAAK,CAACe,gBAAN,CAAuB;AACjCC,IAAAA,IAAI,EAAEd,SAAS,CAACc,IADiB;AAEjCC,IAAAA,IAAI,EAAEf,SAAS,CAACe,IAFiB;AAGjCC,IAAAA,QAAQ,EAAEhB,SAAS,CAACgB,QAHa;AAIjCC,IAAAA,IAAI,EAAEjB,SAAS,CAACkB,OAJiB;AAKjCC,IAAAA,QAAQ,EAAEnB,SAAS,CAACmB,QALa;AAMjCC,IAAAA,kBAAkB,EAAEpB,SAAS,CAACoB;AANG,GAAvB,CAAd;AAQAR,EAAAA,OAAO,CAACS,OAAR,CAAgB,UAASC,GAAT,EAAc;AAC1B,QAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTZ,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,YAA1C;AACAG,IAAAA,OAAO,CAACW,KAAR,CAAcd,YAAd,EAA4B,UAAUa,GAAV,EAAeE,SAAf,EAA0B;AACtDd,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCa,SAAvC;AACIvB,MAAAA,mBAAmB,CAACwB,IAApB,CAAyBD,SAAzB,EAFkD,CAGlD;;AACA,UAAIF,GAAJ,EAAS;AACL;AACA;AACH;AACJ,KARD;AASAV,IAAAA,OAAO,CAACc,GAAR;AACH,GAbD;AAcH,CA5BM;;;;AA6BA,IAAIC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,aAAD,EAAgBC,MAAhB,EAA0B;AAAE;AAC/D,MAAIC,aAAa,GAAG,wDAApB;AAEA,MAAIF,aAAa,KAAK,WAAtB,EAAmCzB,gBAAgB,2BAAoBH,SAAS,CAACM,QAA9B,wBAAhB;;AAEnC,MAAIsB,aAAa,KAAK,WAAtB,EAAmC;AAC/B,QAAIG,uBAAuB,eAASF,MAAM,CAACG,IAAP,CAAY,KAAZ,CAAT,QAA3B;AACA7B,IAAAA,gBAAgB,yBAAmBH,SAAS,CAACM,QAA7B,qBAAiDwB,aAAjD,qBAA2EC,uBAA3E,CAAhB;AACH;;AAGD,MAAIH,aAAa,KAAK,UAAtB,EAAkC;AAC9BzB,IAAAA,gBAAgB,2BAAoBH,SAAS,CAACM,QAA9B,6BAA0DuB,MAA1D,wBAAhB;AACH,GAb4D,CAe7D;;;AAEA3B,EAAAA,gBAAgB,GAAGC,gBAAnB;AACA,SAAOD,gBAAP;AACH,CAnBM,C,CAoBH",
      "sourceRoot": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\Functions",
      "sourcesContent": [
        "//SQL Config\r\nvar mysql = require('mysql');\r\nconst SQLConfig = require('./SQLConfig');\r\nexport let incommingSQLDataArr = [];\r\nlet currentStatement = '';\r\nlet choosenStatement = '';\r\nlet count = 0;\r\n\r\nlet defaultStatement = `SELECT * FROM ${SQLConfig.SQLTable}`;\r\n\r\nexport let test = 2;\r\n\r\nexport let runSQLConn = (SQLStatement) =>{      \r\n    count++;\r\n    // Creates a connection between the server and my client and listen for SQL changes¨\r\n    //let SQLConn = mysql.createConnection([{multipleStatements: true}, 'mysql://djcp7bmvky3s0mnm:osp74zwrq5ut4gun@m60mxazb4g6sb4nn.chr7pe7iynqr.eu-west-1.rds.amazonaws.com:3306/q3uqurm7z68qb3h2']);\r\n\r\n    console.log(\"Ansluten till DB :)\");\r\n    let SQLConn = mysql.createConnection({\r\n        host: SQLConfig.host,\r\n        user: SQLConfig.user,\r\n        password: SQLConfig.password,\r\n        port: SQLConfig.sqlPort,\r\n        database: SQLConfig.database,\r\n        multipleStatements: SQLConfig.multipleStatements,\r\n    });\r\n    SQLConn.connect(function(err) { \r\n        if (err) throw err;        \r\n        console.log(\"runSQLConn -> SQLStatement\", SQLStatement)\r\n        SQLConn.query(SQLStatement, function (err, sqlResult) {\r\n        console.log(\"runSQLConn -> sqlResult\", sqlResult);\r\n            incommingSQLDataArr.push(sqlResult);\r\n            //console.log(\"incommingSQLDataArr - 43\", incommingSQLDataArr)\r\n            if (err) {\r\n                //SQLConn.release();\r\n                return;\r\n            }\r\n        }); \r\n        SQLConn.end();\r\n    });\r\n}\r\nexport let buildCorrectSQLStatements = (statementType, SQLObj) =>{ // Find correct SQLStatement\r\n    let statementCols = 'date, activity, state, concerned, type, place, content';    \r\n    \r\n    if (statementType === 'first run') choosenStatement = `SELECT * FROM ${SQLConfig.SQLTable} ORDER BY date DESC`;\r\n    \r\n    if (statementType === 'addRecord') {\r\n        let statementInsertIntoData = `('${ SQLObj.join(\"','\")}');`;\r\n        choosenStatement = `INSERT INTO ${ SQLConfig.SQLTable} (sent, ${ statementCols }) VALUES${ statementInsertIntoData}`;  \r\n    }\r\n    \r\n    \r\n    if (statementType === 'userSpec') {\r\n        choosenStatement = `SELECT * FROM ${SQLConfig.SQLTable} WHERE userName=${ SQLObj } ORDER BY date DESC`;\r\n    }\r\n    \r\n    //if (statementType === 'filter') choosenStatement = `SELECT * FROM data ${SQLObj.currentStatement.operator} ${ SQLObj.currentStatement.filterIn } in ('${ SQLObj.currentStatement.SQLFilterStr}')`;\r\n    \r\n    currentStatement = choosenStatement;   \r\n    return currentStatement;\r\n}\r\n    //Function to choose correct statement according the inomming data"
      ]
    },
    "sourceType": "script",
    "mtime": 1584360559026
  },
  "{\"sourceRoot\":\"C:\\\\Web\\\\HBGWorks\\\\ScheduleApp\\\\ServerHeroku\\\\Functions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Web\\\\HBGWorks\\\\ScheduleApp\\\\ServerHeroku\",\"filename\":\"C:\\\\Web\\\\HBGWorks\\\\ScheduleApp\\\\ServerHeroku\\\\Functions\\\\UserFunctions.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Web\\\\HBGWorks\\\\ScheduleApp\\\\ServerHeroku\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\Functions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku",
      "filename": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\Functions\\UserFunctions.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\Functions\\UserFunctions.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\Functions\\UserFunctions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\Functions",
        "sourceFileName": "UserFunctions.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.verifyUser = exports.validateUser = exports.userId = void 0;\n\nvar _SQLFunctions = require(\"./SQLFunctions\");\n\nvar regedUserList = require('./RegedUser.json'); //Create id\n\n\nvar countRegedUser = 0;\n\nvar userId = function userId() {\n  //Note - When calling this function I need set the id value = -1 able starting the user id from nr 1 -->\n  for (var index = 0; index < regedUserList.regedUser.length; index++) {\n    countRegedUser = regedUserList.regedUser[index].userId;\n  } // Get the last id in my arr of users and add by one\n\n\n  countRegedUser++;\n  return countRegedUser;\n}; // Validate the user who whants logging in\n\n\nexports.userId = userId;\n\nvar validateUser = function validateUser(incommingUser) {\n  var getFullName = '';\n  var userReturnData = {\n    userMatch: false\n  };\n  var userList = regedUserList['regedUser'];\n  console.log('130');\n  console.log(incommingUser); // Check the userList for a userName vs password match\n\n  for (var index = 0; index < userList.length; index++) {\n    var getUsername = userList[index].userName;\n    var getPassword = userList[index].userPassWord; // Check if there are any match with a reged user\n\n    if (incommingUser.userName === getUsername && incommingUser.userPassWord === getPassword) {\n      userReturnData = {\n        userId: userId() - 1,\n        userMatch: true,\n        loginName: userList[index].fullName\n      };\n    }\n  }\n\n  return userReturnData;\n};\n\nexports.validateUser = validateUser;\n\nvar verifyUser = function verifyUser(getInlogedUser) {\n  var getCorrectUserData = [];\n\n  _SQLFunctions.incommingSQLDataArr.map(function (obj) {\n    for (var key in obj) {\n      if (obj[key].userName === getInlogedUser) {\n        getCorrectUserData.push(obj[key]);\n      }\n    }\n\n    return getCorrectUserData;\n  });\n\n  return getCorrectUserData;\n};\n\nexports.verifyUser = verifyUser;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXJGdW5jdGlvbnMuanMiXSwibmFtZXMiOlsicmVnZWRVc2VyTGlzdCIsInJlcXVpcmUiLCJjb3VudFJlZ2VkVXNlciIsInVzZXJJZCIsImluZGV4IiwicmVnZWRVc2VyIiwibGVuZ3RoIiwidmFsaWRhdGVVc2VyIiwiaW5jb21taW5nVXNlciIsImdldEZ1bGxOYW1lIiwidXNlclJldHVybkRhdGEiLCJ1c2VyTWF0Y2giLCJ1c2VyTGlzdCIsImNvbnNvbGUiLCJsb2ciLCJnZXRVc2VybmFtZSIsInVzZXJOYW1lIiwiZ2V0UGFzc3dvcmQiLCJ1c2VyUGFzc1dvcmQiLCJsb2dpbk5hbWUiLCJmdWxsTmFtZSIsInZlcmlmeVVzZXIiLCJnZXRJbmxvZ2VkVXNlciIsImdldENvcnJlY3RVc2VyRGF0YSIsImluY29tbWluZ1NRTERhdGFBcnIiLCJtYXAiLCJvYmoiLCJrZXkiLCJwdXNoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0EsSUFBTUEsYUFBYSxHQUFHQyxPQUFPLENBQUMsa0JBQUQsQ0FBN0IsQyxDQUVBOzs7QUFDQSxJQUFJQyxjQUFjLEdBQUcsQ0FBckI7O0FBQ08sSUFBTUMsTUFBTSxHQUFJLFNBQVZBLE1BQVUsR0FBTTtBQUN6QjtBQUNBLE9BQUssSUFBSUMsS0FBSyxHQUFHLENBQWpCLEVBQW9CQSxLQUFLLEdBQUdKLGFBQWEsQ0FBQ0ssU0FBZCxDQUF3QkMsTUFBcEQsRUFBNERGLEtBQUssRUFBakUsRUFBcUU7QUFDakVGLElBQUFBLGNBQWMsR0FBR0YsYUFBYSxDQUFDSyxTQUFkLENBQXdCRCxLQUF4QixFQUErQkQsTUFBaEQ7QUFDSCxHQUp3QixDQUt6Qjs7O0FBQ0FELEVBQUFBLGNBQWM7QUFDZCxTQUFPQSxjQUFQO0FBQ0gsQ0FSTSxDLENBU1A7Ozs7O0FBQ08sSUFBTUssWUFBWSxHQUFHLFNBQWZBLFlBQWUsQ0FBQ0MsYUFBRCxFQUFtQjtBQUN2QyxNQUFJQyxXQUFXLEdBQUcsRUFBbEI7QUFDQSxNQUFJQyxjQUFjLEdBQUc7QUFBQ0MsSUFBQUEsU0FBUyxFQUFFO0FBQVosR0FBckI7QUFFSixNQUFJQyxRQUFRLEdBQUdaLGFBQWEsQ0FBQyxXQUFELENBQTVCO0FBQ0FhLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLEtBQVo7QUFDQUQsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlOLGFBQVosRUFOMkMsQ0FRM0M7O0FBQ0EsT0FBSyxJQUFJSixLQUFLLEdBQUcsQ0FBakIsRUFBb0JBLEtBQUssR0FBR1EsUUFBUSxDQUFDTixNQUFyQyxFQUE2Q0YsS0FBSyxFQUFsRCxFQUFzRDtBQUNsRCxRQUFNVyxXQUFXLEdBQUdILFFBQVEsQ0FBQ1IsS0FBRCxDQUFSLENBQWdCWSxRQUFwQztBQUNBLFFBQU1DLFdBQVcsR0FBR0wsUUFBUSxDQUFDUixLQUFELENBQVIsQ0FBZ0JjLFlBQXBDLENBRmtELENBR2xEOztBQUNBLFFBQUlWLGFBQWEsQ0FBQ1EsUUFBZCxLQUEyQkQsV0FBM0IsSUFBMENQLGFBQWEsQ0FBQ1UsWUFBZCxLQUErQkQsV0FBN0UsRUFBMEY7QUFDdEZQLE1BQUFBLGNBQWMsR0FBRztBQUNiUCxRQUFBQSxNQUFNLEVBQUVBLE1BQU0sS0FBRyxDQURKO0FBRWJRLFFBQUFBLFNBQVMsRUFBRSxJQUZFO0FBR2JRLFFBQUFBLFNBQVMsRUFBRVAsUUFBUSxDQUFDUixLQUFELENBQVIsQ0FBZ0JnQjtBQUhkLE9BQWpCO0FBS0g7QUFDSjs7QUFDRCxTQUFPVixjQUFQO0FBQ0gsQ0F0Qk07Ozs7QUF1QkEsSUFBTVcsVUFBVSxHQUFHLFNBQWJBLFVBQWEsQ0FBQ0MsY0FBRCxFQUFvQjtBQUMxQyxNQUFJQyxrQkFBa0IsR0FBRyxFQUF6Qjs7QUFDQUMsb0NBQW9CQyxHQUFwQixDQUF3QixVQUFDQyxHQUFELEVBQVM7QUFDN0IsU0FBSyxJQUFNQyxHQUFYLElBQWtCRCxHQUFsQixFQUF1QjtBQUNuQixVQUFJQSxHQUFHLENBQUNDLEdBQUQsQ0FBSCxDQUFTWCxRQUFULEtBQXNCTSxjQUExQixFQUEwQztBQUN0Q0MsUUFBQUEsa0JBQWtCLENBQUNLLElBQW5CLENBQXdCRixHQUFHLENBQUNDLEdBQUQsQ0FBM0I7QUFDSDtBQUNKOztBQUNELFdBQU9KLGtCQUFQO0FBQ0gsR0FQRDs7QUFRQSxTQUFPQSxrQkFBUDtBQUNILENBWE0iLCJzb3VyY2VSb290IjoiQzpcXFdlYlxcSEJHV29ya3NcXFNjaGVkdWxlQXBwXFxTZXJ2ZXJIZXJva3VcXEZ1bmN0aW9ucyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7aW5jb21taW5nU1FMRGF0YUFycn0gZnJvbSAnLi9TUUxGdW5jdGlvbnMnO1xyXG5jb25zdCByZWdlZFVzZXJMaXN0ID0gcmVxdWlyZSgnLi9SZWdlZFVzZXIuanNvbicpO1xyXG5cclxuLy9DcmVhdGUgaWRcclxubGV0IGNvdW50UmVnZWRVc2VyID0gMDtcclxuZXhwb3J0IGNvbnN0IHVzZXJJZCAgPSAoKSA9PiB7IFxyXG4gICAgLy9Ob3RlIC0gV2hlbiBjYWxsaW5nIHRoaXMgZnVuY3Rpb24gSSBuZWVkIHNldCB0aGUgaWQgdmFsdWUgPSAtMSBhYmxlIHN0YXJ0aW5nIHRoZSB1c2VyIGlkIGZyb20gbnIgMSAtLT5cclxuICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCByZWdlZFVzZXJMaXN0LnJlZ2VkVXNlci5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICBjb3VudFJlZ2VkVXNlciA9IHJlZ2VkVXNlckxpc3QucmVnZWRVc2VyW2luZGV4XS51c2VySWQ7XHJcbiAgICB9XHJcbiAgICAvLyBHZXQgdGhlIGxhc3QgaWQgaW4gbXkgYXJyIG9mIHVzZXJzIGFuZCBhZGQgYnkgb25lXHJcbiAgICBjb3VudFJlZ2VkVXNlcisrOyAgICBcclxuICAgIHJldHVybiBjb3VudFJlZ2VkVXNlcjtcclxufVxyXG4vLyBWYWxpZGF0ZSB0aGUgdXNlciB3aG8gd2hhbnRzIGxvZ2dpbmcgaW5cclxuZXhwb3J0IGNvbnN0IHZhbGlkYXRlVXNlciA9IChpbmNvbW1pbmdVc2VyKSA9PiB7XHJcbiAgICAgICAgbGV0IGdldEZ1bGxOYW1lID0gJyc7XHJcbiAgICAgICAgbGV0IHVzZXJSZXR1cm5EYXRhID0ge3VzZXJNYXRjaDogZmFsc2V9O1xyXG4gICAgICAgIFxyXG4gICAgbGV0IHVzZXJMaXN0ID0gcmVnZWRVc2VyTGlzdFsncmVnZWRVc2VyJ107XHJcbiAgICBjb25zb2xlLmxvZygnMTMwJyk7XHJcbiAgICBjb25zb2xlLmxvZyhpbmNvbW1pbmdVc2VyKTtcclxuICAgIFxyXG4gICAgLy8gQ2hlY2sgdGhlIHVzZXJMaXN0IGZvciBhIHVzZXJOYW1lIHZzIHBhc3N3b3JkIG1hdGNoXHJcbiAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgdXNlckxpc3QubGVuZ3RoOyBpbmRleCsrKSB7XHJcbiAgICAgICAgY29uc3QgZ2V0VXNlcm5hbWUgPSB1c2VyTGlzdFtpbmRleF0udXNlck5hbWU7XHJcbiAgICAgICAgY29uc3QgZ2V0UGFzc3dvcmQgPSB1c2VyTGlzdFtpbmRleF0udXNlclBhc3NXb3JkO1xyXG4gICAgICAgIC8vIENoZWNrIGlmIHRoZXJlIGFyZSBhbnkgbWF0Y2ggd2l0aCBhIHJlZ2VkIHVzZXJcclxuICAgICAgICBpZiAoaW5jb21taW5nVXNlci51c2VyTmFtZSA9PT0gZ2V0VXNlcm5hbWUgJiYgaW5jb21taW5nVXNlci51c2VyUGFzc1dvcmQgPT09IGdldFBhc3N3b3JkKSB7XHJcbiAgICAgICAgICAgIHVzZXJSZXR1cm5EYXRhID0ge1xyXG4gICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQoKS0xLFxyXG4gICAgICAgICAgICAgICAgdXNlck1hdGNoOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgbG9naW5OYW1lOiB1c2VyTGlzdFtpbmRleF0uZnVsbE5hbWVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiB1c2VyUmV0dXJuRGF0YTtcclxufSBcclxuZXhwb3J0IGNvbnN0IHZlcmlmeVVzZXIgPSAoZ2V0SW5sb2dlZFVzZXIpID0+IHsgIFxyXG4gICAgbGV0IGdldENvcnJlY3RVc2VyRGF0YSA9IFtdOyAgXHJcbiAgICBpbmNvbW1pbmdTUUxEYXRhQXJyLm1hcCgob2JqKSA9PiB7XHJcbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gb2JqKSB7XHJcbiAgICAgICAgICAgIGlmIChvYmpba2V5XS51c2VyTmFtZSA9PT0gZ2V0SW5sb2dlZFVzZXIpIHtcclxuICAgICAgICAgICAgICAgIGdldENvcnJlY3RVc2VyRGF0YS5wdXNoKG9ialtrZXldKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZ2V0Q29ycmVjdFVzZXJEYXRhO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gZ2V0Q29ycmVjdFVzZXJEYXRhO1xyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "UserFunctions.js"
      ],
      "names": [
        "regedUserList",
        "require",
        "countRegedUser",
        "userId",
        "index",
        "regedUser",
        "length",
        "validateUser",
        "incommingUser",
        "getFullName",
        "userReturnData",
        "userMatch",
        "userList",
        "console",
        "log",
        "getUsername",
        "userName",
        "getPassword",
        "userPassWord",
        "loginName",
        "fullName",
        "verifyUser",
        "getInlogedUser",
        "getCorrectUserData",
        "incommingSQLDataArr",
        "map",
        "obj",
        "key",
        "push"
      ],
      "mappings": ";;;;;;;AAAA;;AACA,IAAMA,aAAa,GAAGC,OAAO,CAAC,kBAAD,CAA7B,C,CAEA;;;AACA,IAAIC,cAAc,GAAG,CAArB;;AACO,IAAMC,MAAM,GAAI,SAAVA,MAAU,GAAM;AACzB;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGJ,aAAa,CAACK,SAAd,CAAwBC,MAApD,EAA4DF,KAAK,EAAjE,EAAqE;AACjEF,IAAAA,cAAc,GAAGF,aAAa,CAACK,SAAd,CAAwBD,KAAxB,EAA+BD,MAAhD;AACH,GAJwB,CAKzB;;;AACAD,EAAAA,cAAc;AACd,SAAOA,cAAP;AACH,CARM,C,CASP;;;;;AACO,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAACC,aAAD,EAAmB;AACvC,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,cAAc,GAAG;AAACC,IAAAA,SAAS,EAAE;AAAZ,GAArB;AAEJ,MAAIC,QAAQ,GAAGZ,aAAa,CAAC,WAAD,CAA5B;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYN,aAAZ,EAN2C,CAQ3C;;AACA,OAAK,IAAIJ,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGQ,QAAQ,CAACN,MAArC,EAA6CF,KAAK,EAAlD,EAAsD;AAClD,QAAMW,WAAW,GAAGH,QAAQ,CAACR,KAAD,CAAR,CAAgBY,QAApC;AACA,QAAMC,WAAW,GAAGL,QAAQ,CAACR,KAAD,CAAR,CAAgBc,YAApC,CAFkD,CAGlD;;AACA,QAAIV,aAAa,CAACQ,QAAd,KAA2BD,WAA3B,IAA0CP,aAAa,CAACU,YAAd,KAA+BD,WAA7E,EAA0F;AACtFP,MAAAA,cAAc,GAAG;AACbP,QAAAA,MAAM,EAAEA,MAAM,KAAG,CADJ;AAEbQ,QAAAA,SAAS,EAAE,IAFE;AAGbQ,QAAAA,SAAS,EAAEP,QAAQ,CAACR,KAAD,CAAR,CAAgBgB;AAHd,OAAjB;AAKH;AACJ;;AACD,SAAOV,cAAP;AACH,CAtBM;;;;AAuBA,IAAMW,UAAU,GAAG,SAAbA,UAAa,CAACC,cAAD,EAAoB;AAC1C,MAAIC,kBAAkB,GAAG,EAAzB;;AACAC,oCAAoBC,GAApB,CAAwB,UAACC,GAAD,EAAS;AAC7B,SAAK,IAAMC,GAAX,IAAkBD,GAAlB,EAAuB;AACnB,UAAIA,GAAG,CAACC,GAAD,CAAH,CAASX,QAAT,KAAsBM,cAA1B,EAA0C;AACtCC,QAAAA,kBAAkB,CAACK,IAAnB,CAAwBF,GAAG,CAACC,GAAD,CAA3B;AACH;AACJ;;AACD,WAAOJ,kBAAP;AACH,GAPD;;AAQA,SAAOA,kBAAP;AACH,CAXM",
      "sourceRoot": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\Functions",
      "sourcesContent": [
        "import {incommingSQLDataArr} from './SQLFunctions';\r\nconst regedUserList = require('./RegedUser.json');\r\n\r\n//Create id\r\nlet countRegedUser = 0;\r\nexport const userId  = () => { \r\n    //Note - When calling this function I need set the id value = -1 able starting the user id from nr 1 -->\r\n    for (let index = 0; index < regedUserList.regedUser.length; index++) {\r\n        countRegedUser = regedUserList.regedUser[index].userId;\r\n    }\r\n    // Get the last id in my arr of users and add by one\r\n    countRegedUser++;    \r\n    return countRegedUser;\r\n}\r\n// Validate the user who whants logging in\r\nexport const validateUser = (incommingUser) => {\r\n        let getFullName = '';\r\n        let userReturnData = {userMatch: false};\r\n        \r\n    let userList = regedUserList['regedUser'];\r\n    console.log('130');\r\n    console.log(incommingUser);\r\n    \r\n    // Check the userList for a userName vs password match\r\n    for (let index = 0; index < userList.length; index++) {\r\n        const getUsername = userList[index].userName;\r\n        const getPassword = userList[index].userPassWord;\r\n        // Check if there are any match with a reged user\r\n        if (incommingUser.userName === getUsername && incommingUser.userPassWord === getPassword) {\r\n            userReturnData = {\r\n                userId: userId()-1,\r\n                userMatch: true,\r\n                loginName: userList[index].fullName\r\n            }\r\n        }\r\n    }\r\n    return userReturnData;\r\n} \r\nexport const verifyUser = (getInlogedUser) => {  \r\n    let getCorrectUserData = [];  \r\n    incommingSQLDataArr.map((obj) => {\r\n        for (const key in obj) {\r\n            if (obj[key].userName === getInlogedUser) {\r\n                getCorrectUserData.push(obj[key]);\r\n            }\r\n        }\r\n        return getCorrectUserData;\r\n    });\r\n    return getCorrectUserData;\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1584353176717
  }
}