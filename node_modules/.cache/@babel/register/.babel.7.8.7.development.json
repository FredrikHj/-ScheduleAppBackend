{
  "{\"sourceRoot\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"filename\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\\\\ServerGetSQLData.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "filename": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\ServerGetSQLData.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\ServerGetSQLData.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\ServerGetSQLData.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
        "sourceFileName": "ServerGetSQLData.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _SQLFunctions = require(\"./Functions/SQLFunctions\");\n\nvar _UserFunctions = require(\"./Functions/UserFunctions\");\n\n// Import functions\nvar SQLConfig = require('./Functions/SQLConfig'); // Basic Server module\n\n\nvar express = require('express');\n\nvar jwt = require('jsonwebtoken');\n\nvar fileSystem = require('fs');\n\nvar cors = require('cors');\n\nvar app = express();\napp.use(express.json());\napp.use(cors());\nvar addRecord = false;\nvar inNewRecord = false;\nvar countRegedUser = 0; // The server information\n\nvar port = process.env.PORT || SQLConfig.serverPort;\nvar serverIO = app.listen(port, function () {\n  return console.log(\"getSQLData is listening on port \".concat(port, \"!\"));\n}); // All the accessable users for the app\n\nvar regedUserList = require('./RegedUser.json'); // ============================ Create a user ============================\n//Create id\n\n\nvar userId = function userId() {\n  //Note - When calling this function I need set the id value = -1 able starting the user id from nr 1 -->\n  for (var index = 0; index < regedUserList.regedUser.length; index++) {\n    countRegedUser = regedUserList.regedUser[index].userId;\n  } // Get the last id in my arr of users and add by one\n\n\n  countRegedUser++;\n  return countRegedUser;\n}; // Reg a user\n\n\nvar userReg = function userReg(userBody) {\n  console.log('46');\n  console.log(userBody);\n  var regedUser = {\n    userId: userId(),\n    fullName: userBody.fullName,\n    userName: userBody.userName,\n    userPassWord: userBody.userPassWord\n  };\n  regedUserList['regedUser'].push(regedUser);\n  console.log(regedUserList);\n  fileSystem.writeFile('./RegedUser.json', JSON.stringify(regedUserList //debugging  \n  , null, 2), function (err) {\n    console.log(err);\n  });\n}; // Run function for the mehods ================================================================================================\n\n\nvar emtyDataArrays = function emtyDataArrays(emtyingArr) {\n  //Emtying the array at the end\n  emtyingArr = [];\n}; // Validate the user who whants logging in\n\n\nvar validateUser = function validateUser(incommingUser) {\n  var getFullName = '';\n  var userReturnData = {\n    userMatch: false\n  };\n  var userList = regedUserList['regedUser'];\n  console.log('130');\n  console.log(incommingUser); // Check the userList for a userName vs password match\n\n  for (var index = 0; index < userList.length; index++) {\n    var getUsername = userList[index].userName;\n    var getPassword = userList[index].userPassWord; // Check if there are any match with a reged user\n\n    if (incommingUser.userName === getUsername && incommingUser.userPassWord === getPassword) {\n      userReturnData = {\n        userId: userId() - 1,\n        userMatch: true,\n        loginName: userList[index].fullName\n      };\n    }\n  }\n\n  return userReturnData;\n}; // Middleware for verfy token\n\n\nvar verifyToken = function verifyToken(req, res, next) {\n  var bearerHeader = req.headers['authorization'].split(' ')[1];\n  console.log(\"verifyToken -> bearerHeader\", bearerHeader); // check there is a token\n\n  if (bearerHeader !== undefined) {\n    req.token = bearerHeader;\n    console.log(\"verifyToken -> req.token\", req.token); //jwt.verify(bearerHeader, );\n\n    next();\n  } else res.status(403).send('Authorization failed!');\n}; // Run method when requested from client ======================================================================================\n// Run Logout  \n\n\napp.get('/SQLData', function (req, res) {\n  (0, _SQLFunctions.runSQLConn)((0, _SQLFunctions.buildCorrectSQLStatements)('first run', ''));\n  setTimeout(function () {\n    res.status(200).send(_SQLFunctions.incommingSQLDataArr);\n  }, 1000);\n  console.log('=========================userSpec==========================================');\n}); // User loging in =============================================================================================================\n// Request a UserValidation and store the unser as a token back --> send the token as a response\n\napp.post('/SQLData/Login', function (req, res) {\n  /*  The userdata is incomming and send into he function to validate the Logging in user:\r\n      if = true, the code = 200 is send back together with a tokem else the code = 404 is send with no data */\n  var incommingUserData = req.body.bodyData;\n  var returninUserData = validateUser(incommingUserData);\n\n  if (returninUserData.userMatch === true) {\n    jwt.sign(returninUserData, 'inlogSecretKey', function (error, token) {\n      if (token) {\n        res.statusMessage = \"You are authenticated'\";\n        res.status(200).send(token);\n      }\n\n      if (error) res.status(500);\n    });\n  }\n\n  if (returninUserData.userMatch === false) {\n    res.statusMessage = \"User does not find!\";\n    res.status(203).send(null); // User is unmatch\n  }\n\n  returninUserData = {};\n}); // Requested userData is send back if the token is the same as created\n\napp.get('/SQLData/:user', verifyToken, function (req, res) {\n  inNewRecord = true;\n  var getInlogedUser = req.params.user; //runSQLConn(buildCorrectSQLStatements('userSpec', getInlogedUser));\n\n  setTimeout(function () {\n    res.status(200).send((0, _UserFunctions.sendCorrectUserData)(getInlogedUser));\n  }, 3000);\n}); // AddSQLData & RegUsers ============================================================\n\napp.post('/SQLData/AddRecord', function (req, res) {\n  addRecord = true;\n  var currentInData = req.body.bodyData;\n  (0, _SQLFunctions.runSQLConn)((0, _SQLFunctions.buildCorrectSQLStatements)('addRecord', currentInData)); //incommingSQLDataArr.push(currentStatement);\n\n  console.log('===================================================================');\n  addRecord = false;\n  emtyDataArrays();\n}); // UserReg =========================================================================\n\napp.post('/SQLData/UserReg', function (req, res) {\n  addRecord = true;\n  console.log('192');\n  console.log(req.body.bodyData);\n  userReg(req.body.bodyData);\n  console.log('===================================================================');\n  addRecord = false;\n  emtyDataArrays();\n}); // =================================================================================\n// Run filtering\n\napp.post('/SQLData/filter', function (req, res) {}); // ============================================================================================================================\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "ServerGetSQLData.js"
      ],
      "names": [
        "SQLConfig",
        "require",
        "express",
        "jwt",
        "fileSystem",
        "cors",
        "app",
        "use",
        "json",
        "addRecord",
        "inNewRecord",
        "countRegedUser",
        "port",
        "process",
        "env",
        "PORT",
        "serverPort",
        "serverIO",
        "listen",
        "console",
        "log",
        "regedUserList",
        "userId",
        "index",
        "regedUser",
        "length",
        "userReg",
        "userBody",
        "fullName",
        "userName",
        "userPassWord",
        "push",
        "writeFile",
        "JSON",
        "stringify",
        "err",
        "emtyDataArrays",
        "emtyingArr",
        "validateUser",
        "incommingUser",
        "getFullName",
        "userReturnData",
        "userMatch",
        "userList",
        "getUsername",
        "getPassword",
        "loginName",
        "verifyToken",
        "req",
        "res",
        "next",
        "bearerHeader",
        "headers",
        "split",
        "undefined",
        "token",
        "status",
        "send",
        "get",
        "setTimeout",
        "incommingSQLDataArr",
        "post",
        "incommingUserData",
        "body",
        "bodyData",
        "returninUserData",
        "sign",
        "error",
        "statusMessage",
        "getInlogedUser",
        "params",
        "user",
        "currentInData"
      ],
      "mappings": ";;AACA;;AACA;;AAFA;AAIA,IAAMA,SAAS,GAAGC,OAAO,CAAC,uBAAD,CAAzB,C,CAEA;;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,cAAD,CAAjB;;AACA,IAAMG,UAAU,GAAGH,OAAO,CAAC,IAAD,CAA1B;;AACA,IAAII,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAMK,GAAG,GAAGJ,OAAO,EAAnB;AACAI,GAAG,CAACC,GAAJ,CAAQL,OAAO,CAACM,IAAR,EAAR;AACAF,GAAG,CAACC,GAAJ,CAAQF,IAAI,EAAZ;AAEA,IAAII,SAAS,GAAG,KAAhB;AACA,IAAIC,WAAW,GAAG,KAAlB;AACA,IAAIC,cAAc,GAAG,CAArB,C,CAEA;;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoBf,SAAS,CAACgB,UAA3C;AACA,IAAIC,QAAQ,GAAGX,GAAG,CAACY,MAAJ,CAAWN,IAAX,EAAiB;AAAA,SAAMO,OAAO,CAACC,GAAR,2CAA+CR,IAA/C,OAAN;AAAA,CAAjB,CAAf,C,CAEA;;AACA,IAAIS,aAAa,GAAGpB,OAAO,CAAC,kBAAD,CAA3B,C,CAEA;AACA;;;AACA,IAAIqB,MAAM,GAAI,SAAVA,MAAU,GAAM;AAChB;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,aAAa,CAACG,SAAd,CAAwBC,MAApD,EAA4DF,KAAK,EAAjE,EAAqE;AACjEZ,IAAAA,cAAc,GAAGU,aAAa,CAACG,SAAd,CAAwBD,KAAxB,EAA+BD,MAAhD;AACH,GAJe,CAKhB;;;AACAX,EAAAA,cAAc;AACd,SAAOA,cAAP;AACH,CARD,C,CASA;;;AACA,IAAIe,OAAO,GAAG,SAAVA,OAAU,CAACC,QAAD,EAAc;AACxBR,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AAEA,MAAIH,SAAS,GAAG;AACZF,IAAAA,MAAM,EAAEA,MAAM,EADF;AAEZM,IAAAA,QAAQ,EAAED,QAAQ,CAACC,QAFP;AAGZC,IAAAA,QAAQ,EAAEF,QAAQ,CAACE,QAHP;AAIZC,IAAAA,YAAY,EAAEH,QAAQ,CAACG;AAJX,GAAhB;AAOAT,EAAAA,aAAa,CAAC,WAAD,CAAb,CAA2BU,IAA3B,CAAgCP,SAAhC;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYC,aAAZ;AAEAjB,EAAAA,UAAU,CAAC4B,SAAX,CAAqB,kBAArB,EAAyCC,IAAI,CAACC,SAAL,CAAeb,aAAf,CAA6B;AAA7B,IACnC,IADmC,EAC7B,CAD6B,CAAzC,EAEO,UAASc,GAAT,EAAc;AAAChB,IAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACjB,GAHL;AAKC,CAnBL,C,CAqBI;;;AAEA,IAAIC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,UAAD,EAAgB;AACjC;AACAA,EAAAA,UAAU,GAAG,EAAb;AACH,CAHD,C,CAIA;;;AACA,IAAIC,YAAY,GAAG,SAAfA,YAAe,CAACC,aAAD,EAAmB;AAClC,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,cAAc,GAAG;AAACC,IAAAA,SAAS,EAAE;AAAZ,GAArB;AAEJ,MAAIC,QAAQ,GAAGtB,aAAa,CAAC,WAAD,CAA5B;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYmB,aAAZ,EANsC,CAQtC;;AACA,OAAK,IAAIhB,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGoB,QAAQ,CAAClB,MAArC,EAA6CF,KAAK,EAAlD,EAAsD;AAClD,QAAMqB,WAAW,GAAGD,QAAQ,CAACpB,KAAD,CAAR,CAAgBM,QAApC;AACA,QAAMgB,WAAW,GAAGF,QAAQ,CAACpB,KAAD,CAAR,CAAgBO,YAApC,CAFkD,CAGlD;;AACA,QAAIS,aAAa,CAACV,QAAd,KAA2Be,WAA3B,IAA0CL,aAAa,CAACT,YAAd,KAA+Be,WAA7E,EAA0F;AACtFJ,MAAAA,cAAc,GAAG;AACbnB,QAAAA,MAAM,EAAEA,MAAM,KAAG,CADJ;AAEboB,QAAAA,SAAS,EAAE,IAFE;AAGbI,QAAAA,SAAS,EAAEH,QAAQ,CAACpB,KAAD,CAAR,CAAgBK;AAHd,OAAjB;AAKH;AACJ;;AACD,SAAOa,cAAP;AACH,CAtBG,C,CAuBJ;;;AACA,IAAIM,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAmB;AACjC,MAAMC,YAAY,GAAGH,GAAG,CAACI,OAAJ,CAAY,eAAZ,EAA6BC,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CAArB;AACAlC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2C+B,YAA3C,EAFiC,CAIjC;;AACA,MAAIA,YAAY,KAAKG,SAArB,EAAgC;AAC5BN,IAAAA,GAAG,CAACO,KAAJ,GAAYJ,YAAZ;AACAhC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwC4B,GAAG,CAACO,KAA5C,EAF4B,CAG5B;;AACAL,IAAAA,IAAI;AACP,GALD,MAMKD,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,uBAArB;AACR,CAZD,C,CAcA;AACA;;;AACAnD,GAAG,CAACoD,GAAJ,CAAQ,UAAR,EAAoB,UAACV,GAAD,EAAMC,GAAN,EAAc;AAC9B,gCAAW,6CAA0B,WAA1B,EAAuC,EAAvC,CAAX;AACAU,EAAAA,UAAU,CAAC,YAAO;AACdV,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBG,iCAArB;AACH,GAFS,EAEP,IAFO,CAAV;AAGIzC,EAAAA,OAAO,CAACC,GAAR,CAAY,6EAAZ;AACP,CAND,E,CAQA;AACA;;AACAd,GAAG,CAACuD,IAAJ,CAAS,gBAAT,EAA2B,UAACb,GAAD,EAAMC,GAAN,EAAc;AACrC;;AAEA,MAAIa,iBAAiB,GAAGd,GAAG,CAACe,IAAJ,CAASC,QAAjC;AACA,MAAIC,gBAAgB,GAAG3B,YAAY,CAACwB,iBAAD,CAAnC;;AAEA,MAAIG,gBAAgB,CAACvB,SAAjB,KAA+B,IAAnC,EAAyC;AACrCvC,IAAAA,GAAG,CAAC+D,IAAJ,CAASD,gBAAT,EAA2B,gBAA3B,EAA6C,UAACE,KAAD,EAAQZ,KAAR,EAAkB;AAC3D,UAAGA,KAAH,EAAS;AACLN,QAAAA,GAAG,CAACmB,aAAJ,GAAoB,wBAApB;AACAnB,QAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,KAArB;AACH;;AACD,UAAIY,KAAJ,EAAWlB,GAAG,CAACO,MAAJ,CAAW,GAAX;AACd,KAND;AAOF;;AAEF,MAAIS,gBAAgB,CAACvB,SAAjB,KAA+B,KAAnC,EAA0C;AACtCO,IAAAA,GAAG,CAACmB,aAAJ,GAAoB,qBAApB;AACAnB,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,IAArB,EAFsC,CAEV;AAC/B;;AACDQ,EAAAA,gBAAgB,GAAG,EAAnB;AACH,CArBD,E,CAsBA;;AACA3D,GAAG,CAACoD,GAAJ,CAAQ,gBAAR,EAA0BX,WAA1B,EAAuC,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjDvC,EAAAA,WAAW,GAAG,IAAd;AACA,MAAI2D,cAAc,GAAGrB,GAAG,CAACsB,MAAJ,CAAWC,IAAhC,CAFiD,CAIjD;;AAEAZ,EAAAA,UAAU,CAAC,YAAM;AACbV,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,wCAAoBY,cAApB,CAArB;AACH,GAFS,EAEP,IAFO,CAAV;AAGH,CATD,E,CAYA;;AACA/D,GAAG,CAACuD,IAAJ,CAAS,oBAAT,EAA+B,UAACb,GAAD,EAAMC,GAAN,EAAc;AACzCxC,EAAAA,SAAS,GAAG,IAAZ;AACA,MAAI+D,aAAa,GAAGxB,GAAG,CAACe,IAAJ,CAASC,QAA7B;AAEA,gCAAW,6CAA0B,WAA1B,EAAuCQ,aAAvC,CAAX,EAJyC,CAKzC;;AACArD,EAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACAX,EAAAA,SAAS,GAAG,KAAZ;AACA2B,EAAAA,cAAc;AACjB,CATD,E,CAUA;;AACA9B,GAAG,CAACuD,IAAJ,CAAS,kBAAT,EAA6B,UAACb,GAAD,EAAMC,GAAN,EAAc;AACvCxC,EAAAA,SAAS,GAAG,IAAZ;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY4B,GAAG,CAACe,IAAJ,CAASC,QAArB;AAEAtC,EAAAA,OAAO,CAACsB,GAAG,CAACe,IAAJ,CAASC,QAAV,CAAP;AAGA7C,EAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACAX,EAAAA,SAAS,GAAG,KAAZ;AACA2B,EAAAA,cAAc;AACjB,CAXD,E,CAYA;AAEA;;AACA9B,GAAG,CAACuD,IAAJ,CAAS,iBAAT,EAA4B,UAACb,GAAD,EAAMC,GAAN,EAAc,CAGzC,CAHD,E,CAKA",
      "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "sourcesContent": [
        "// Import functions\r\nimport {runSQLConn, buildCorrectSQLStatements, incommingSQLDataArr} from './Functions/SQLFunctions'; \r\nimport {sendCorrectUserData} from './Functions/UserFunctions';\r\n\r\nconst SQLConfig = require('./Functions/SQLConfig');\r\n\r\n// Basic Server module\r\nconst express = require('express');\r\nlet jwt = require('jsonwebtoken');\r\nconst fileSystem = require('fs');\r\nlet cors = require('cors');\r\nconst app = express();\r\napp.use(express.json());\r\napp.use(cors());\r\n\r\nlet addRecord = false;\r\nlet inNewRecord = false; \r\nlet countRegedUser = 0;\r\n \r\n// The server information\r\nconst port = process.env.PORT || SQLConfig.serverPort;\r\nlet serverIO = app.listen(port, () => console.log(`getSQLData is listening on port ${port}!`));\r\n\r\n// All the accessable users for the app\r\nlet regedUserList = require('./RegedUser.json');\r\n\r\n// ============================ Create a user ============================\r\n//Create id\r\nlet userId  = () => { \r\n    //Note - When calling this function I need set the id value = -1 able starting the user id from nr 1 -->\r\n    for (let index = 0; index < regedUserList.regedUser.length; index++) {\r\n        countRegedUser = regedUserList.regedUser[index].userId;\r\n    }\r\n    // Get the last id in my arr of users and add by one\r\n    countRegedUser++;    \r\n    return countRegedUser;\r\n}\r\n// Reg a user\r\nlet userReg = (userBody) => {\r\n    console.log('46');\r\n    console.log(userBody);\r\n\r\n    let regedUser = {\r\n        userId: userId(),\r\n        fullName: userBody.fullName,\r\n        userName: userBody.userName,\r\n        userPassWord: userBody.userPassWord\r\n        \r\n    };\r\n    regedUserList['regedUser'].push(regedUser);\r\n    console.log(regedUserList);\r\n    \r\n    fileSystem.writeFile('./RegedUser.json', JSON.stringify(regedUserList //debugging  \r\n        , null, 2\r\n        ), function(err) {console.log(err);     \r\n        });\r\n        \r\n    };\r\n    \r\n    // Run function for the mehods ================================================================================================\r\n    \r\n    let emtyDataArrays = (emtyingArr) => {\r\n        //Emtying the array at the end\r\n        emtyingArr = [];\r\n    }\r\n    // Validate the user who whants logging in\r\n    let validateUser = (incommingUser) => {\r\n        let getFullName = '';\r\n        let userReturnData = {userMatch: false};\r\n        \r\n    let userList = regedUserList['regedUser'];\r\n    console.log('130');\r\n    console.log(incommingUser);\r\n    \r\n    // Check the userList for a userName vs password match\r\n    for (let index = 0; index < userList.length; index++) {\r\n        const getUsername = userList[index].userName;\r\n        const getPassword = userList[index].userPassWord;\r\n        // Check if there are any match with a reged user\r\n        if (incommingUser.userName === getUsername && incommingUser.userPassWord === getPassword) {\r\n            userReturnData = {\r\n                userId: userId()-1,\r\n                userMatch: true,\r\n                loginName: userList[index].fullName\r\n            }\r\n        }\r\n    }\r\n    return userReturnData;\r\n} \r\n// Middleware for verfy token\r\nlet verifyToken = (req, res, next) =>{\r\n    const bearerHeader = req.headers['authorization'].split(' ')[1];\r\n    console.log(\"verifyToken -> bearerHeader\", bearerHeader);\r\n\r\n    // check there is a token\r\n    if (bearerHeader !== undefined) {\r\n        req.token = bearerHeader;\r\n        console.log(\"verifyToken -> req.token\", req.token)\r\n        //jwt.verify(bearerHeader, );\r\n        next();\r\n    }\r\n    else res.status(403).send('Authorization failed!');\r\n} \r\n\r\n// Run method when requested from client ======================================================================================\r\n// Run Logout  \r\napp.get('/SQLData', (req, res) => {\r\n    runSQLConn(buildCorrectSQLStatements('first run', '')); \r\n    setTimeout(()  => {\r\n        res.status(200).send(incommingSQLDataArr);\r\n    }, 1000);  \r\n        console.log('=========================userSpec==========================================');\r\n});\r\n\r\n// User loging in =============================================================================================================\r\n// Request a UserValidation and store the unser as a token back --> send the token as a response\r\napp.post('/SQLData/Login', (req, res) => {\r\n    /*  The userdata is incomming and send into he function to validate the Logging in user:\r\n        if = true, the code = 200 is send back together with a tokem else the code = 404 is send with no data */\r\n    let incommingUserData = req.body.bodyData;\r\n    let returninUserData = validateUser(incommingUserData);\r\n     \r\n    if (returninUserData.userMatch === true) {        \r\n        jwt.sign(returninUserData, 'inlogSecretKey', (error, token) => {\r\n            if(token){\r\n                res.statusMessage = \"You are authenticated'\";\r\n                res.status(200).send(token);\r\n            }\r\n            if (error) res.status(500);             \r\n        });        \r\n     }    \r\n\r\n    if (returninUserData.userMatch === false) {\r\n        res.statusMessage = \"User does not find!\";\r\n        res.status(203).send(null); // User is unmatch\r\n    }\r\n    returninUserData = {};\r\n});\r\n// Requested userData is send back if the token is the same as created\r\napp.get('/SQLData/:user', verifyToken, (req, res) => {\r\n    inNewRecord = true;\r\n    let getInlogedUser = req.params.user;\r\n    \r\n    //runSQLConn(buildCorrectSQLStatements('userSpec', getInlogedUser));\r\n    \r\n    setTimeout(() => {   \r\n        res.status(200).send(sendCorrectUserData(getInlogedUser));\r\n    }, 3000);\r\n});\r\n\r\n\r\n// AddSQLData & RegUsers ============================================================\r\napp.post('/SQLData/AddRecord', (req, res) => {\r\n    addRecord = true;\r\n    let currentInData = req.body.bodyData;\r\n\r\n    runSQLConn(buildCorrectSQLStatements('addRecord', currentInData));\r\n    //incommingSQLDataArr.push(currentStatement);\r\n    console.log('===================================================================');\r\n    addRecord = false;\r\n    emtyDataArrays();\r\n});\r\n// UserReg =========================================================================\r\napp.post('/SQLData/UserReg', (req, res) => {\r\n    addRecord = true;\r\n    console.log('192');\r\n    console.log(req.body.bodyData);\r\n    \r\n    userReg(req.body.bodyData);\r\n\r\n\r\n    console.log('===================================================================');\r\n    addRecord = false;\r\n    emtyDataArrays();\r\n});\r\n// =================================================================================\r\n\r\n// Run filtering\r\napp.post('/SQLData/filter', (req, res) => {\r\n    \r\n\r\n});\r\n\r\n// ============================================================================================================================"
      ]
    },
    "sourceType": "script",
    "mtime": 1584201406939
  },
  "{\"sourceRoot\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"filename\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\\\\SQLFunction.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "filename": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\SQLFunction.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\SQLFunction.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\SQLFunction.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
        "sourceFileName": "SQLFunction.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildCorrectSQLStatements = exports.runSQLConn = exports.test = exports.incommingSQLDataArr = void 0;\n\n//SQL Config\nvar mysql = require('mysql');\n\nvar SQLConfig = require('./SQLConfig');\n\nvar incommingSQLDataArr = [];\nexports.incommingSQLDataArr = incommingSQLDataArr;\nvar currentStatement = '';\nvar choosenStatement = '';\nvar count = 0;\nvar defaultStatement = \"SELECT * FROM \".concat(SQLConfig.SQLTable);\nvar test = 2;\nexports.test = test;\n\nvar runSQLConn = function runSQLConn(SQLStatement) {\n  count++;\n  console.log(\"K\\xF6rning - \".concat(count)); // Creates a connection between the server and my client and listen for SQL changes¨\n  //let SQLConn = mysql.createConnection([{multipleStatements: true}, 'mysql://djcp7bmvky3s0mnm:osp74zwrq5ut4gun@m60mxazb4g6sb4nn.chr7pe7iynqr.eu-west-1.rds.amazonaws.com:3306/q3uqurm7z68qb3h2']);\n\n  console.log(\"Ansluten till DB :)\");\n  var SQLConn = mysql.createConnection({\n    host: SQLConfig.host,\n    user: SQLConfig.user,\n    password: SQLConfig.password,\n    port: SQLConfig.sqlPort,\n    database: SQLConfig.database,\n    multipleStatements: SQLConfig.multipleStatements\n  });\n  SQLConn.connect(function (err) {\n    if (err) throw err;\n    SQLConn.query(SQLStatement, function (err, sqlResult) {\n      console.log('85');\n      incommingSQLDataArr.push(sqlResult); //console.log(\"incommingSQLDataArr - 43\", incommingSQLDataArr)\n\n      if (err) {\n        //SQLConn.release();\n        return;\n      }\n    });\n    SQLConn.end();\n  });\n  console.log(\"incommingSQLDataArr - 67\", incommingSQLDataArr);\n};\n\nexports.runSQLConn = runSQLConn;\n\nvar buildCorrectSQLStatements = function buildCorrectSQLStatements(statementType, SQLObj) {\n  // Find correct SQLStatement\n  var statementCols = 'date, activity, state, concerned, type, place, content';\n  if (statementType === 'first run') choosenStatement = \"SELECT * FROM \".concat(SQLConfig.SQLTable, \" ORDER BY date DESC\");\n\n  if (statementType === 'addRecord') {\n    var statementInsertIntoData = \"('\".concat(SQLObj.join(\"','\"), \"');\");\n    choosenStatement = \"INSERT INTO \".concat(SQLConfig.SQLTable, \" (sent, \").concat(statementCols, \") VALUES\").concat(statementInsertIntoData);\n  }\n\n  if (statementType === 'userSpec') {\n    choosenStatement = \"SELECT * FROM \".concat(SQLConfig.SQLTable, \" WHERE userName=\").concat(SQLObj, \" ORDER BY date DESC\");\n  } //if (statementType === 'filter') choosenStatement = `SELECT * FROM data ${SQLObj.currentStatement.operator} ${ SQLObj.currentStatement.filterIn } in ('${ SQLObj.currentStatement.SQLFilterStr}')`;\n\n\n  currentStatement = choosenStatement;\n  console.log('116');\n  console.log(currentStatement);\n  return currentStatement;\n}; //Function to choose correct statement according the inomming data\n\n\nexports.buildCorrectSQLStatements = buildCorrectSQLStatements;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNRTEZ1bmN0aW9uLmpzIl0sIm5hbWVzIjpbIm15c3FsIiwicmVxdWlyZSIsIlNRTENvbmZpZyIsImluY29tbWluZ1NRTERhdGFBcnIiLCJjdXJyZW50U3RhdGVtZW50IiwiY2hvb3NlblN0YXRlbWVudCIsImNvdW50IiwiZGVmYXVsdFN0YXRlbWVudCIsIlNRTFRhYmxlIiwidGVzdCIsInJ1blNRTENvbm4iLCJTUUxTdGF0ZW1lbnQiLCJjb25zb2xlIiwibG9nIiwiU1FMQ29ubiIsImNyZWF0ZUNvbm5lY3Rpb24iLCJob3N0IiwidXNlciIsInBhc3N3b3JkIiwicG9ydCIsInNxbFBvcnQiLCJkYXRhYmFzZSIsIm11bHRpcGxlU3RhdGVtZW50cyIsImNvbm5lY3QiLCJlcnIiLCJxdWVyeSIsInNxbFJlc3VsdCIsInB1c2giLCJlbmQiLCJidWlsZENvcnJlY3RTUUxTdGF0ZW1lbnRzIiwic3RhdGVtZW50VHlwZSIsIlNRTE9iaiIsInN0YXRlbWVudENvbHMiLCJzdGF0ZW1lbnRJbnNlcnRJbnRvRGF0YSIsImpvaW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBLElBQUlBLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBbkI7O0FBQ0EsSUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsYUFBRCxDQUF6Qjs7QUFDTyxJQUFJRSxtQkFBbUIsR0FBRyxFQUExQjs7QUFDUCxJQUFJQyxnQkFBZ0IsR0FBRyxFQUF2QjtBQUNBLElBQUlDLGdCQUFnQixHQUFHLEVBQXZCO0FBQ0EsSUFBSUMsS0FBSyxHQUFHLENBQVo7QUFFQSxJQUFJQyxnQkFBZ0IsMkJBQW9CTCxTQUFTLENBQUNNLFFBQTlCLENBQXBCO0FBRU8sSUFBSUMsSUFBSSxHQUFHLENBQVg7OztBQUVBLElBQUlDLFVBQVUsR0FBRyxTQUFiQSxVQUFhLENBQUNDLFlBQUQsRUFBaUI7QUFFckNMLEVBQUFBLEtBQUs7QUFDTE0sRUFBQUEsT0FBTyxDQUFDQyxHQUFSLHdCQUF5QlAsS0FBekIsR0FIcUMsQ0FJckM7QUFDQTs7QUFFQU0sRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVkscUJBQVo7QUFDQSxNQUFJQyxPQUFPLEdBQUdkLEtBQUssQ0FBQ2UsZ0JBQU4sQ0FBdUI7QUFDakNDLElBQUFBLElBQUksRUFBRWQsU0FBUyxDQUFDYyxJQURpQjtBQUVqQ0MsSUFBQUEsSUFBSSxFQUFFZixTQUFTLENBQUNlLElBRmlCO0FBR2pDQyxJQUFBQSxRQUFRLEVBQUVoQixTQUFTLENBQUNnQixRQUhhO0FBSWpDQyxJQUFBQSxJQUFJLEVBQUVqQixTQUFTLENBQUNrQixPQUppQjtBQUtqQ0MsSUFBQUEsUUFBUSxFQUFFbkIsU0FBUyxDQUFDbUIsUUFMYTtBQU1qQ0MsSUFBQUEsa0JBQWtCLEVBQUVwQixTQUFTLENBQUNvQjtBQU5HLEdBQXZCLENBQWQ7QUFRQVIsRUFBQUEsT0FBTyxDQUFDUyxPQUFSLENBQWdCLFVBQVNDLEdBQVQsRUFBYztBQUMxQixRQUFJQSxHQUFKLEVBQVMsTUFBTUEsR0FBTjtBQUNUVixJQUFBQSxPQUFPLENBQUNXLEtBQVIsQ0FBY2QsWUFBZCxFQUE0QixVQUFVYSxHQUFWLEVBQWVFLFNBQWYsRUFBMEI7QUFDbERkLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLElBQVo7QUFDQVYsTUFBQUEsbUJBQW1CLENBQUN3QixJQUFwQixDQUF5QkQsU0FBekIsRUFGa0QsQ0FHbEQ7O0FBQ0EsVUFBSUYsR0FBSixFQUFTO0FBQ0w7QUFDQTtBQUNIO0FBQ0osS0FSRDtBQVNBVixJQUFBQSxPQUFPLENBQUNjLEdBQVI7QUFDSCxHQVpEO0FBYUFoQixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSwwQkFBWixFQUF3Q1YsbUJBQXhDO0FBQ0gsQ0E5Qk07Ozs7QUErQkEsSUFBSTBCLHlCQUF5QixHQUFHLFNBQTVCQSx5QkFBNEIsQ0FBQ0MsYUFBRCxFQUFnQkMsTUFBaEIsRUFBMEI7QUFBRTtBQUMvRCxNQUFJQyxhQUFhLEdBQUcsd0RBQXBCO0FBRUEsTUFBSUYsYUFBYSxLQUFLLFdBQXRCLEVBQW1DekIsZ0JBQWdCLDJCQUFvQkgsU0FBUyxDQUFDTSxRQUE5Qix3QkFBaEI7O0FBRW5DLE1BQUlzQixhQUFhLEtBQUssV0FBdEIsRUFBbUM7QUFDL0IsUUFBSUcsdUJBQXVCLGVBQVNGLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLEtBQVosQ0FBVCxRQUEzQjtBQUNBN0IsSUFBQUEsZ0JBQWdCLHlCQUFtQkgsU0FBUyxDQUFDTSxRQUE3QixxQkFBaUR3QixhQUFqRCxxQkFBMkVDLHVCQUEzRSxDQUFoQjtBQUNIOztBQUdELE1BQUlILGFBQWEsS0FBSyxVQUF0QixFQUFrQztBQUM5QnpCLElBQUFBLGdCQUFnQiwyQkFBb0JILFNBQVMsQ0FBQ00sUUFBOUIsNkJBQTBEdUIsTUFBMUQsd0JBQWhCO0FBQ0gsR0FiNEQsQ0FlN0Q7OztBQUVBM0IsRUFBQUEsZ0JBQWdCLEdBQUdDLGdCQUFuQjtBQUNBTyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxLQUFaO0FBQ0FELEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZVCxnQkFBWjtBQUVBLFNBQU9BLGdCQUFQO0FBQ0gsQ0F0Qk0sQyxDQXVCSCIsInNvdXJjZVJvb3QiOiJEOlxcV2ViXFxIQkdXb3Jrc1xcU2NoZWR1a2VBcHBcXFNlcnZlckhlcm9rdSIsInNvdXJjZXNDb250ZW50IjpbIi8vU1FMIENvbmZpZ1xyXG52YXIgbXlzcWwgPSByZXF1aXJlKCdteXNxbCcpO1xyXG5jb25zdCBTUUxDb25maWcgPSByZXF1aXJlKCcuL1NRTENvbmZpZycpO1xyXG5leHBvcnQgbGV0IGluY29tbWluZ1NRTERhdGFBcnIgPSBbXTtcclxubGV0IGN1cnJlbnRTdGF0ZW1lbnQgPSAnJztcclxubGV0IGNob29zZW5TdGF0ZW1lbnQgPSAnJztcclxubGV0IGNvdW50ID0gMDtcclxuXHJcbmxldCBkZWZhdWx0U3RhdGVtZW50ID0gYFNFTEVDVCAqIEZST00gJHtTUUxDb25maWcuU1FMVGFibGV9YDtcclxuXHJcbmV4cG9ydCBsZXQgdGVzdCA9IDI7XHJcblxyXG5leHBvcnQgbGV0IHJ1blNRTENvbm4gPSAoU1FMU3RhdGVtZW50KSA9PnsgICAgICAgIFxyXG5cclxuICAgIGNvdW50Kys7XHJcbiAgICBjb25zb2xlLmxvZyhgS8O2cm5pbmcgLSAke2NvdW50fWApO1xyXG4gICAgLy8gQ3JlYXRlcyBhIGNvbm5lY3Rpb24gYmV0d2VlbiB0aGUgc2VydmVyIGFuZCBteSBjbGllbnQgYW5kIGxpc3RlbiBmb3IgU1FMIGNoYW5nZXPCqFxyXG4gICAgLy9sZXQgU1FMQ29ubiA9IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oW3ttdWx0aXBsZVN0YXRlbWVudHM6IHRydWV9LCAnbXlzcWw6Ly9kamNwN2Jtdmt5M3MwbW5tOm9zcDc0endycTV1dDRndW5AbTYwbXhhemI0ZzZzYjRubi5jaHI3cGU3aXlucXIuZXUtd2VzdC0xLnJkcy5hbWF6b25hd3MuY29tOjMzMDYvcTN1cXVybTd6NjhxYjNoMiddKTtcclxuXHJcbiAgICBjb25zb2xlLmxvZyhcIkFuc2x1dGVuIHRpbGwgREIgOilcIik7XHJcbiAgICBsZXQgU1FMQ29ubiA9IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oe1xyXG4gICAgICAgIGhvc3Q6IFNRTENvbmZpZy5ob3N0LFxyXG4gICAgICAgIHVzZXI6IFNRTENvbmZpZy51c2VyLFxyXG4gICAgICAgIHBhc3N3b3JkOiBTUUxDb25maWcucGFzc3dvcmQsXHJcbiAgICAgICAgcG9ydDogU1FMQ29uZmlnLnNxbFBvcnQsXHJcbiAgICAgICAgZGF0YWJhc2U6IFNRTENvbmZpZy5kYXRhYmFzZSxcclxuICAgICAgICBtdWx0aXBsZVN0YXRlbWVudHM6IFNRTENvbmZpZy5tdWx0aXBsZVN0YXRlbWVudHMsXHJcbiAgICB9KTtcclxuICAgIFNRTENvbm4uY29ubmVjdChmdW5jdGlvbihlcnIpIHsgXHJcbiAgICAgICAgaWYgKGVycikgdGhyb3cgZXJyOyAgICAgICAgXHJcbiAgICAgICAgU1FMQ29ubi5xdWVyeShTUUxTdGF0ZW1lbnQsIGZ1bmN0aW9uIChlcnIsIHNxbFJlc3VsdCkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnODUnKTtcclxuICAgICAgICAgICAgaW5jb21taW5nU1FMRGF0YUFyci5wdXNoKHNxbFJlc3VsdCk7XHJcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coXCJpbmNvbW1pbmdTUUxEYXRhQXJyIC0gNDNcIiwgaW5jb21taW5nU1FMRGF0YUFycilcclxuICAgICAgICAgICAgaWYgKGVycikge1xyXG4gICAgICAgICAgICAgICAgLy9TUUxDb25uLnJlbGVhc2UoKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pOyBcclxuICAgICAgICBTUUxDb25uLmVuZCgpO1xyXG4gICAgfSk7XHJcbiAgICBjb25zb2xlLmxvZyhcImluY29tbWluZ1NRTERhdGFBcnIgLSA2N1wiLCBpbmNvbW1pbmdTUUxEYXRhQXJyKTtcclxufVxyXG5leHBvcnQgbGV0IGJ1aWxkQ29ycmVjdFNRTFN0YXRlbWVudHMgPSAoc3RhdGVtZW50VHlwZSwgU1FMT2JqKSA9PnsgLy8gRmluZCBjb3JyZWN0IFNRTFN0YXRlbWVudFxyXG4gICAgbGV0IHN0YXRlbWVudENvbHMgPSAnZGF0ZSwgYWN0aXZpdHksIHN0YXRlLCBjb25jZXJuZWQsIHR5cGUsIHBsYWNlLCBjb250ZW50JzsgICAgXHJcbiAgICBcclxuICAgIGlmIChzdGF0ZW1lbnRUeXBlID09PSAnZmlyc3QgcnVuJykgY2hvb3NlblN0YXRlbWVudCA9IGBTRUxFQ1QgKiBGUk9NICR7U1FMQ29uZmlnLlNRTFRhYmxlfSBPUkRFUiBCWSBkYXRlIERFU0NgO1xyXG4gICAgXHJcbiAgICBpZiAoc3RhdGVtZW50VHlwZSA9PT0gJ2FkZFJlY29yZCcpIHtcclxuICAgICAgICBsZXQgc3RhdGVtZW50SW5zZXJ0SW50b0RhdGEgPSBgKCckeyBTUUxPYmouam9pbihcIicsJ1wiKX0nKTtgO1xyXG4gICAgICAgIGNob29zZW5TdGF0ZW1lbnQgPSBgSU5TRVJUIElOVE8gJHsgU1FMQ29uZmlnLlNRTFRhYmxlfSAoc2VudCwgJHsgc3RhdGVtZW50Q29scyB9KSBWQUxVRVMkeyBzdGF0ZW1lbnRJbnNlcnRJbnRvRGF0YX1gOyAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgaWYgKHN0YXRlbWVudFR5cGUgPT09ICd1c2VyU3BlYycpIHtcclxuICAgICAgICBjaG9vc2VuU3RhdGVtZW50ID0gYFNFTEVDVCAqIEZST00gJHtTUUxDb25maWcuU1FMVGFibGV9IFdIRVJFIHVzZXJOYW1lPSR7IFNRTE9iaiB9IE9SREVSIEJZIGRhdGUgREVTQ2A7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vaWYgKHN0YXRlbWVudFR5cGUgPT09ICdmaWx0ZXInKSBjaG9vc2VuU3RhdGVtZW50ID0gYFNFTEVDVCAqIEZST00gZGF0YSAke1NRTE9iai5jdXJyZW50U3RhdGVtZW50Lm9wZXJhdG9yfSAkeyBTUUxPYmouY3VycmVudFN0YXRlbWVudC5maWx0ZXJJbiB9IGluICgnJHsgU1FMT2JqLmN1cnJlbnRTdGF0ZW1lbnQuU1FMRmlsdGVyU3RyfScpYDtcclxuICAgIFxyXG4gICAgY3VycmVudFN0YXRlbWVudCA9IGNob29zZW5TdGF0ZW1lbnQ7XHJcbiAgICBjb25zb2xlLmxvZygnMTE2Jyk7XHJcbiAgICBjb25zb2xlLmxvZyhjdXJyZW50U3RhdGVtZW50KTtcclxuICAgIFxyXG4gICAgcmV0dXJuIGN1cnJlbnRTdGF0ZW1lbnQ7XHJcbn1cclxuICAgIC8vRnVuY3Rpb24gdG8gY2hvb3NlIGNvcnJlY3Qgc3RhdGVtZW50IGFjY29yZGluZyB0aGUgaW5vbW1pbmcgZGF0YSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "SQLFunction.js"
      ],
      "names": [
        "mysql",
        "require",
        "SQLConfig",
        "incommingSQLDataArr",
        "currentStatement",
        "choosenStatement",
        "count",
        "defaultStatement",
        "SQLTable",
        "test",
        "runSQLConn",
        "SQLStatement",
        "console",
        "log",
        "SQLConn",
        "createConnection",
        "host",
        "user",
        "password",
        "port",
        "sqlPort",
        "database",
        "multipleStatements",
        "connect",
        "err",
        "query",
        "sqlResult",
        "push",
        "end",
        "buildCorrectSQLStatements",
        "statementType",
        "SQLObj",
        "statementCols",
        "statementInsertIntoData",
        "join"
      ],
      "mappings": ";;;;;;;AAAA;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAzB;;AACO,IAAIE,mBAAmB,GAAG,EAA1B;;AACP,IAAIC,gBAAgB,GAAG,EAAvB;AACA,IAAIC,gBAAgB,GAAG,EAAvB;AACA,IAAIC,KAAK,GAAG,CAAZ;AAEA,IAAIC,gBAAgB,2BAAoBL,SAAS,CAACM,QAA9B,CAApB;AAEO,IAAIC,IAAI,GAAG,CAAX;;;AAEA,IAAIC,UAAU,GAAG,SAAbA,UAAa,CAACC,YAAD,EAAiB;AAErCL,EAAAA,KAAK;AACLM,EAAAA,OAAO,CAACC,GAAR,wBAAyBP,KAAzB,GAHqC,CAIrC;AACA;;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,MAAIC,OAAO,GAAGd,KAAK,CAACe,gBAAN,CAAuB;AACjCC,IAAAA,IAAI,EAAEd,SAAS,CAACc,IADiB;AAEjCC,IAAAA,IAAI,EAAEf,SAAS,CAACe,IAFiB;AAGjCC,IAAAA,QAAQ,EAAEhB,SAAS,CAACgB,QAHa;AAIjCC,IAAAA,IAAI,EAAEjB,SAAS,CAACkB,OAJiB;AAKjCC,IAAAA,QAAQ,EAAEnB,SAAS,CAACmB,QALa;AAMjCC,IAAAA,kBAAkB,EAAEpB,SAAS,CAACoB;AANG,GAAvB,CAAd;AAQAR,EAAAA,OAAO,CAACS,OAAR,CAAgB,UAASC,GAAT,EAAc;AAC1B,QAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTV,IAAAA,OAAO,CAACW,KAAR,CAAcd,YAAd,EAA4B,UAAUa,GAAV,EAAeE,SAAf,EAA0B;AAClDd,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAV,MAAAA,mBAAmB,CAACwB,IAApB,CAAyBD,SAAzB,EAFkD,CAGlD;;AACA,UAAIF,GAAJ,EAAS;AACL;AACA;AACH;AACJ,KARD;AASAV,IAAAA,OAAO,CAACc,GAAR;AACH,GAZD;AAaAhB,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCV,mBAAxC;AACH,CA9BM;;;;AA+BA,IAAI0B,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,aAAD,EAAgBC,MAAhB,EAA0B;AAAE;AAC/D,MAAIC,aAAa,GAAG,wDAApB;AAEA,MAAIF,aAAa,KAAK,WAAtB,EAAmCzB,gBAAgB,2BAAoBH,SAAS,CAACM,QAA9B,wBAAhB;;AAEnC,MAAIsB,aAAa,KAAK,WAAtB,EAAmC;AAC/B,QAAIG,uBAAuB,eAASF,MAAM,CAACG,IAAP,CAAY,KAAZ,CAAT,QAA3B;AACA7B,IAAAA,gBAAgB,yBAAmBH,SAAS,CAACM,QAA7B,qBAAiDwB,aAAjD,qBAA2EC,uBAA3E,CAAhB;AACH;;AAGD,MAAIH,aAAa,KAAK,UAAtB,EAAkC;AAC9BzB,IAAAA,gBAAgB,2BAAoBH,SAAS,CAACM,QAA9B,6BAA0DuB,MAA1D,wBAAhB;AACH,GAb4D,CAe7D;;;AAEA3B,EAAAA,gBAAgB,GAAGC,gBAAnB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYT,gBAAZ;AAEA,SAAOA,gBAAP;AACH,CAtBM,C,CAuBH",
      "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "sourcesContent": [
        "//SQL Config\r\nvar mysql = require('mysql');\r\nconst SQLConfig = require('./SQLConfig');\r\nexport let incommingSQLDataArr = [];\r\nlet currentStatement = '';\r\nlet choosenStatement = '';\r\nlet count = 0;\r\n\r\nlet defaultStatement = `SELECT * FROM ${SQLConfig.SQLTable}`;\r\n\r\nexport let test = 2;\r\n\r\nexport let runSQLConn = (SQLStatement) =>{        \r\n\r\n    count++;\r\n    console.log(`Körning - ${count}`);\r\n    // Creates a connection between the server and my client and listen for SQL changes¨\r\n    //let SQLConn = mysql.createConnection([{multipleStatements: true}, 'mysql://djcp7bmvky3s0mnm:osp74zwrq5ut4gun@m60mxazb4g6sb4nn.chr7pe7iynqr.eu-west-1.rds.amazonaws.com:3306/q3uqurm7z68qb3h2']);\r\n\r\n    console.log(\"Ansluten till DB :)\");\r\n    let SQLConn = mysql.createConnection({\r\n        host: SQLConfig.host,\r\n        user: SQLConfig.user,\r\n        password: SQLConfig.password,\r\n        port: SQLConfig.sqlPort,\r\n        database: SQLConfig.database,\r\n        multipleStatements: SQLConfig.multipleStatements,\r\n    });\r\n    SQLConn.connect(function(err) { \r\n        if (err) throw err;        \r\n        SQLConn.query(SQLStatement, function (err, sqlResult) {\r\n            console.log('85');\r\n            incommingSQLDataArr.push(sqlResult);\r\n            //console.log(\"incommingSQLDataArr - 43\", incommingSQLDataArr)\r\n            if (err) {\r\n                //SQLConn.release();\r\n                return;\r\n            }\r\n        }); \r\n        SQLConn.end();\r\n    });\r\n    console.log(\"incommingSQLDataArr - 67\", incommingSQLDataArr);\r\n}\r\nexport let buildCorrectSQLStatements = (statementType, SQLObj) =>{ // Find correct SQLStatement\r\n    let statementCols = 'date, activity, state, concerned, type, place, content';    \r\n    \r\n    if (statementType === 'first run') choosenStatement = `SELECT * FROM ${SQLConfig.SQLTable} ORDER BY date DESC`;\r\n    \r\n    if (statementType === 'addRecord') {\r\n        let statementInsertIntoData = `('${ SQLObj.join(\"','\")}');`;\r\n        choosenStatement = `INSERT INTO ${ SQLConfig.SQLTable} (sent, ${ statementCols }) VALUES${ statementInsertIntoData}`;  \r\n    }\r\n    \r\n    \r\n    if (statementType === 'userSpec') {\r\n        choosenStatement = `SELECT * FROM ${SQLConfig.SQLTable} WHERE userName=${ SQLObj } ORDER BY date DESC`;\r\n    }\r\n    \r\n    //if (statementType === 'filter') choosenStatement = `SELECT * FROM data ${SQLObj.currentStatement.operator} ${ SQLObj.currentStatement.filterIn } in ('${ SQLObj.currentStatement.SQLFilterStr}')`;\r\n    \r\n    currentStatement = choosenStatement;\r\n    console.log('116');\r\n    console.log(currentStatement);\r\n    \r\n    return currentStatement;\r\n}\r\n    //Function to choose correct statement according the inomming data"
      ]
    },
    "sourceType": "script",
    "mtime": 1584021344732
  },
  "{\"sourceRoot\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\\\\Functions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"filename\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\\\\Functions\\\\SQLFunction.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "filename": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions\\SQLFunction.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions\\SQLFunction.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions\\SQLFunction.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions",
        "sourceFileName": "SQLFunction.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildCorrectSQLStatements = exports.runSQLConn = exports.test = exports.incommingSQLDataArr = void 0;\n\n//SQL Config\nvar mysql = require('mysql');\n\nvar SQLConfig = require('./SQLConfig');\n\nvar incommingSQLDataArr = [];\nexports.incommingSQLDataArr = incommingSQLDataArr;\nvar currentStatement = '';\nvar choosenStatement = '';\nvar count = 0;\nvar defaultStatement = \"SELECT * FROM \".concat(SQLConfig.SQLTable);\nvar test = 2;\nexports.test = test;\n\nvar runSQLConn = function runSQLConn(SQLStatement) {\n  count++;\n  console.log(\"K\\xF6rning - \".concat(count)); // Creates a connection between the server and my client and listen for SQL changes¨\n  //let SQLConn = mysql.createConnection([{multipleStatements: true}, 'mysql://djcp7bmvky3s0mnm:osp74zwrq5ut4gun@m60mxazb4g6sb4nn.chr7pe7iynqr.eu-west-1.rds.amazonaws.com:3306/q3uqurm7z68qb3h2']);\n\n  console.log(\"Ansluten till DB :)\");\n  var SQLConn = mysql.createConnection({\n    host: SQLConfig.host,\n    user: SQLConfig.user,\n    password: SQLConfig.password,\n    port: SQLConfig.sqlPort,\n    database: SQLConfig.database,\n    multipleStatements: SQLConfig.multipleStatements\n  });\n  SQLConn.connect(function (err) {\n    if (err) throw err;\n    SQLConn.query(SQLStatement, function (err, sqlResult) {\n      console.log('85');\n      incommingSQLDataArr.push(sqlResult); //console.log(\"incommingSQLDataArr - 43\", incommingSQLDataArr)\n\n      if (err) {\n        //SQLConn.release();\n        return;\n      }\n    });\n    SQLConn.end();\n  });\n  console.log(\"incommingSQLDataArr - 67\", incommingSQLDataArr);\n};\n\nexports.runSQLConn = runSQLConn;\n\nvar buildCorrectSQLStatements = function buildCorrectSQLStatements(statementType, SQLObj) {\n  // Find correct SQLStatement\n  var statementCols = 'date, activity, state, concerned, type, place, content';\n  if (statementType === 'first run') choosenStatement = \"SELECT * FROM \".concat(SQLConfig.SQLTable, \" ORDER BY date DESC\");\n\n  if (statementType === 'addRecord') {\n    var statementInsertIntoData = \"('\".concat(SQLObj.join(\"','\"), \"');\");\n    choosenStatement = \"INSERT INTO \".concat(SQLConfig.SQLTable, \" (sent, \").concat(statementCols, \") VALUES\").concat(statementInsertIntoData);\n  }\n\n  if (statementType === 'userSpec') {\n    choosenStatement = \"SELECT * FROM \".concat(SQLConfig.SQLTable, \" WHERE userName=\").concat(SQLObj, \" ORDER BY date DESC\");\n  } //if (statementType === 'filter') choosenStatement = `SELECT * FROM data ${SQLObj.currentStatement.operator} ${ SQLObj.currentStatement.filterIn } in ('${ SQLObj.currentStatement.SQLFilterStr}')`;\n\n\n  currentStatement = choosenStatement;\n  console.log('116');\n  console.log(currentStatement);\n  return currentStatement;\n}; //Function to choose correct statement according the inomming data\n\n\nexports.buildCorrectSQLStatements = buildCorrectSQLStatements;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNRTEZ1bmN0aW9uLmpzIl0sIm5hbWVzIjpbIm15c3FsIiwicmVxdWlyZSIsIlNRTENvbmZpZyIsImluY29tbWluZ1NRTERhdGFBcnIiLCJjdXJyZW50U3RhdGVtZW50IiwiY2hvb3NlblN0YXRlbWVudCIsImNvdW50IiwiZGVmYXVsdFN0YXRlbWVudCIsIlNRTFRhYmxlIiwidGVzdCIsInJ1blNRTENvbm4iLCJTUUxTdGF0ZW1lbnQiLCJjb25zb2xlIiwibG9nIiwiU1FMQ29ubiIsImNyZWF0ZUNvbm5lY3Rpb24iLCJob3N0IiwidXNlciIsInBhc3N3b3JkIiwicG9ydCIsInNxbFBvcnQiLCJkYXRhYmFzZSIsIm11bHRpcGxlU3RhdGVtZW50cyIsImNvbm5lY3QiLCJlcnIiLCJxdWVyeSIsInNxbFJlc3VsdCIsInB1c2giLCJlbmQiLCJidWlsZENvcnJlY3RTUUxTdGF0ZW1lbnRzIiwic3RhdGVtZW50VHlwZSIsIlNRTE9iaiIsInN0YXRlbWVudENvbHMiLCJzdGF0ZW1lbnRJbnNlcnRJbnRvRGF0YSIsImpvaW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBLElBQUlBLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBbkI7O0FBQ0EsSUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsYUFBRCxDQUF6Qjs7QUFDTyxJQUFJRSxtQkFBbUIsR0FBRyxFQUExQjs7QUFDUCxJQUFJQyxnQkFBZ0IsR0FBRyxFQUF2QjtBQUNBLElBQUlDLGdCQUFnQixHQUFHLEVBQXZCO0FBQ0EsSUFBSUMsS0FBSyxHQUFHLENBQVo7QUFFQSxJQUFJQyxnQkFBZ0IsMkJBQW9CTCxTQUFTLENBQUNNLFFBQTlCLENBQXBCO0FBRU8sSUFBSUMsSUFBSSxHQUFHLENBQVg7OztBQUVBLElBQUlDLFVBQVUsR0FBRyxTQUFiQSxVQUFhLENBQUNDLFlBQUQsRUFBaUI7QUFFckNMLEVBQUFBLEtBQUs7QUFDTE0sRUFBQUEsT0FBTyxDQUFDQyxHQUFSLHdCQUF5QlAsS0FBekIsR0FIcUMsQ0FJckM7QUFDQTs7QUFFQU0sRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVkscUJBQVo7QUFDQSxNQUFJQyxPQUFPLEdBQUdkLEtBQUssQ0FBQ2UsZ0JBQU4sQ0FBdUI7QUFDakNDLElBQUFBLElBQUksRUFBRWQsU0FBUyxDQUFDYyxJQURpQjtBQUVqQ0MsSUFBQUEsSUFBSSxFQUFFZixTQUFTLENBQUNlLElBRmlCO0FBR2pDQyxJQUFBQSxRQUFRLEVBQUVoQixTQUFTLENBQUNnQixRQUhhO0FBSWpDQyxJQUFBQSxJQUFJLEVBQUVqQixTQUFTLENBQUNrQixPQUppQjtBQUtqQ0MsSUFBQUEsUUFBUSxFQUFFbkIsU0FBUyxDQUFDbUIsUUFMYTtBQU1qQ0MsSUFBQUEsa0JBQWtCLEVBQUVwQixTQUFTLENBQUNvQjtBQU5HLEdBQXZCLENBQWQ7QUFRQVIsRUFBQUEsT0FBTyxDQUFDUyxPQUFSLENBQWdCLFVBQVNDLEdBQVQsRUFBYztBQUMxQixRQUFJQSxHQUFKLEVBQVMsTUFBTUEsR0FBTjtBQUNUVixJQUFBQSxPQUFPLENBQUNXLEtBQVIsQ0FBY2QsWUFBZCxFQUE0QixVQUFVYSxHQUFWLEVBQWVFLFNBQWYsRUFBMEI7QUFDbERkLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLElBQVo7QUFDQVYsTUFBQUEsbUJBQW1CLENBQUN3QixJQUFwQixDQUF5QkQsU0FBekIsRUFGa0QsQ0FHbEQ7O0FBQ0EsVUFBSUYsR0FBSixFQUFTO0FBQ0w7QUFDQTtBQUNIO0FBQ0osS0FSRDtBQVNBVixJQUFBQSxPQUFPLENBQUNjLEdBQVI7QUFDSCxHQVpEO0FBYUFoQixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSwwQkFBWixFQUF3Q1YsbUJBQXhDO0FBQ0gsQ0E5Qk07Ozs7QUErQkEsSUFBSTBCLHlCQUF5QixHQUFHLFNBQTVCQSx5QkFBNEIsQ0FBQ0MsYUFBRCxFQUFnQkMsTUFBaEIsRUFBMEI7QUFBRTtBQUMvRCxNQUFJQyxhQUFhLEdBQUcsd0RBQXBCO0FBRUEsTUFBSUYsYUFBYSxLQUFLLFdBQXRCLEVBQW1DekIsZ0JBQWdCLDJCQUFvQkgsU0FBUyxDQUFDTSxRQUE5Qix3QkFBaEI7O0FBRW5DLE1BQUlzQixhQUFhLEtBQUssV0FBdEIsRUFBbUM7QUFDL0IsUUFBSUcsdUJBQXVCLGVBQVNGLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLEtBQVosQ0FBVCxRQUEzQjtBQUNBN0IsSUFBQUEsZ0JBQWdCLHlCQUFtQkgsU0FBUyxDQUFDTSxRQUE3QixxQkFBaUR3QixhQUFqRCxxQkFBMkVDLHVCQUEzRSxDQUFoQjtBQUNIOztBQUdELE1BQUlILGFBQWEsS0FBSyxVQUF0QixFQUFrQztBQUM5QnpCLElBQUFBLGdCQUFnQiwyQkFBb0JILFNBQVMsQ0FBQ00sUUFBOUIsNkJBQTBEdUIsTUFBMUQsd0JBQWhCO0FBQ0gsR0FiNEQsQ0FlN0Q7OztBQUVBM0IsRUFBQUEsZ0JBQWdCLEdBQUdDLGdCQUFuQjtBQUNBTyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxLQUFaO0FBQ0FELEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZVCxnQkFBWjtBQUVBLFNBQU9BLGdCQUFQO0FBQ0gsQ0F0Qk0sQyxDQXVCSCIsInNvdXJjZVJvb3QiOiJEOlxcV2ViXFxIQkdXb3Jrc1xcU2NoZWR1a2VBcHBcXFNlcnZlckhlcm9rdVxcRnVuY3Rpb25zIiwic291cmNlc0NvbnRlbnQiOlsiLy9TUUwgQ29uZmlnXHJcbnZhciBteXNxbCA9IHJlcXVpcmUoJ215c3FsJyk7XHJcbmNvbnN0IFNRTENvbmZpZyA9IHJlcXVpcmUoJy4vU1FMQ29uZmlnJyk7XHJcbmV4cG9ydCBsZXQgaW5jb21taW5nU1FMRGF0YUFyciA9IFtdO1xyXG5sZXQgY3VycmVudFN0YXRlbWVudCA9ICcnO1xyXG5sZXQgY2hvb3NlblN0YXRlbWVudCA9ICcnO1xyXG5sZXQgY291bnQgPSAwO1xyXG5cclxubGV0IGRlZmF1bHRTdGF0ZW1lbnQgPSBgU0VMRUNUICogRlJPTSAke1NRTENvbmZpZy5TUUxUYWJsZX1gO1xyXG5cclxuZXhwb3J0IGxldCB0ZXN0ID0gMjtcclxuXHJcbmV4cG9ydCBsZXQgcnVuU1FMQ29ubiA9IChTUUxTdGF0ZW1lbnQpID0+eyAgICAgICAgXHJcblxyXG4gICAgY291bnQrKztcclxuICAgIGNvbnNvbGUubG9nKGBLw7ZybmluZyAtICR7Y291bnR9YCk7XHJcbiAgICAvLyBDcmVhdGVzIGEgY29ubmVjdGlvbiBiZXR3ZWVuIHRoZSBzZXJ2ZXIgYW5kIG15IGNsaWVudCBhbmQgbGlzdGVuIGZvciBTUUwgY2hhbmdlc8KoXHJcbiAgICAvL2xldCBTUUxDb25uID0gbXlzcWwuY3JlYXRlQ29ubmVjdGlvbihbe211bHRpcGxlU3RhdGVtZW50czogdHJ1ZX0sICdteXNxbDovL2RqY3A3Ym12a3kzczBtbm06b3NwNzR6d3JxNXV0NGd1bkBtNjBteGF6YjRnNnNiNG5uLmNocjdwZTdpeW5xci5ldS13ZXN0LTEucmRzLmFtYXpvbmF3cy5jb206MzMwNi9xM3VxdXJtN3o2OHFiM2gyJ10pO1xyXG5cclxuICAgIGNvbnNvbGUubG9nKFwiQW5zbHV0ZW4gdGlsbCBEQiA6KVwiKTtcclxuICAgIGxldCBTUUxDb25uID0gbXlzcWwuY3JlYXRlQ29ubmVjdGlvbih7XHJcbiAgICAgICAgaG9zdDogU1FMQ29uZmlnLmhvc3QsXHJcbiAgICAgICAgdXNlcjogU1FMQ29uZmlnLnVzZXIsXHJcbiAgICAgICAgcGFzc3dvcmQ6IFNRTENvbmZpZy5wYXNzd29yZCxcclxuICAgICAgICBwb3J0OiBTUUxDb25maWcuc3FsUG9ydCxcclxuICAgICAgICBkYXRhYmFzZTogU1FMQ29uZmlnLmRhdGFiYXNlLFxyXG4gICAgICAgIG11bHRpcGxlU3RhdGVtZW50czogU1FMQ29uZmlnLm11bHRpcGxlU3RhdGVtZW50cyxcclxuICAgIH0pO1xyXG4gICAgU1FMQ29ubi5jb25uZWN0KGZ1bmN0aW9uKGVycikgeyBcclxuICAgICAgICBpZiAoZXJyKSB0aHJvdyBlcnI7ICAgICAgICBcclxuICAgICAgICBTUUxDb25uLnF1ZXJ5KFNRTFN0YXRlbWVudCwgZnVuY3Rpb24gKGVyciwgc3FsUmVzdWx0KSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCc4NScpO1xyXG4gICAgICAgICAgICBpbmNvbW1pbmdTUUxEYXRhQXJyLnB1c2goc3FsUmVzdWx0KTtcclxuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcImluY29tbWluZ1NRTERhdGFBcnIgLSA0M1wiLCBpbmNvbW1pbmdTUUxEYXRhQXJyKVxyXG4gICAgICAgICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICAgICAgICAvL1NRTENvbm4ucmVsZWFzZSgpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7IFxyXG4gICAgICAgIFNRTENvbm4uZW5kKCk7XHJcbiAgICB9KTtcclxuICAgIGNvbnNvbGUubG9nKFwiaW5jb21taW5nU1FMRGF0YUFyciAtIDY3XCIsIGluY29tbWluZ1NRTERhdGFBcnIpO1xyXG59XHJcbmV4cG9ydCBsZXQgYnVpbGRDb3JyZWN0U1FMU3RhdGVtZW50cyA9IChzdGF0ZW1lbnRUeXBlLCBTUUxPYmopID0+eyAvLyBGaW5kIGNvcnJlY3QgU1FMU3RhdGVtZW50XHJcbiAgICBsZXQgc3RhdGVtZW50Q29scyA9ICdkYXRlLCBhY3Rpdml0eSwgc3RhdGUsIGNvbmNlcm5lZCwgdHlwZSwgcGxhY2UsIGNvbnRlbnQnOyAgICBcclxuICAgIFxyXG4gICAgaWYgKHN0YXRlbWVudFR5cGUgPT09ICdmaXJzdCBydW4nKSBjaG9vc2VuU3RhdGVtZW50ID0gYFNFTEVDVCAqIEZST00gJHtTUUxDb25maWcuU1FMVGFibGV9IE9SREVSIEJZIGRhdGUgREVTQ2A7XHJcbiAgICBcclxuICAgIGlmIChzdGF0ZW1lbnRUeXBlID09PSAnYWRkUmVjb3JkJykge1xyXG4gICAgICAgIGxldCBzdGF0ZW1lbnRJbnNlcnRJbnRvRGF0YSA9IGAoJyR7IFNRTE9iai5qb2luKFwiJywnXCIpfScpO2A7XHJcbiAgICAgICAgY2hvb3NlblN0YXRlbWVudCA9IGBJTlNFUlQgSU5UTyAkeyBTUUxDb25maWcuU1FMVGFibGV9IChzZW50LCAkeyBzdGF0ZW1lbnRDb2xzIH0pIFZBTFVFUyR7IHN0YXRlbWVudEluc2VydEludG9EYXRhfWA7ICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgXHJcbiAgICBpZiAoc3RhdGVtZW50VHlwZSA9PT0gJ3VzZXJTcGVjJykge1xyXG4gICAgICAgIGNob29zZW5TdGF0ZW1lbnQgPSBgU0VMRUNUICogRlJPTSAke1NRTENvbmZpZy5TUUxUYWJsZX0gV0hFUkUgdXNlck5hbWU9JHsgU1FMT2JqIH0gT1JERVIgQlkgZGF0ZSBERVNDYDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLy9pZiAoc3RhdGVtZW50VHlwZSA9PT0gJ2ZpbHRlcicpIGNob29zZW5TdGF0ZW1lbnQgPSBgU0VMRUNUICogRlJPTSBkYXRhICR7U1FMT2JqLmN1cnJlbnRTdGF0ZW1lbnQub3BlcmF0b3J9ICR7IFNRTE9iai5jdXJyZW50U3RhdGVtZW50LmZpbHRlckluIH0gaW4gKCckeyBTUUxPYmouY3VycmVudFN0YXRlbWVudC5TUUxGaWx0ZXJTdHJ9JylgO1xyXG4gICAgXHJcbiAgICBjdXJyZW50U3RhdGVtZW50ID0gY2hvb3NlblN0YXRlbWVudDtcclxuICAgIGNvbnNvbGUubG9nKCcxMTYnKTtcclxuICAgIGNvbnNvbGUubG9nKGN1cnJlbnRTdGF0ZW1lbnQpO1xyXG4gICAgXHJcbiAgICByZXR1cm4gY3VycmVudFN0YXRlbWVudDtcclxufVxyXG4gICAgLy9GdW5jdGlvbiB0byBjaG9vc2UgY29ycmVjdCBzdGF0ZW1lbnQgYWNjb3JkaW5nIHRoZSBpbm9tbWluZyBkYXRhIl19",
    "map": {
      "version": 3,
      "sources": [
        "SQLFunction.js"
      ],
      "names": [
        "mysql",
        "require",
        "SQLConfig",
        "incommingSQLDataArr",
        "currentStatement",
        "choosenStatement",
        "count",
        "defaultStatement",
        "SQLTable",
        "test",
        "runSQLConn",
        "SQLStatement",
        "console",
        "log",
        "SQLConn",
        "createConnection",
        "host",
        "user",
        "password",
        "port",
        "sqlPort",
        "database",
        "multipleStatements",
        "connect",
        "err",
        "query",
        "sqlResult",
        "push",
        "end",
        "buildCorrectSQLStatements",
        "statementType",
        "SQLObj",
        "statementCols",
        "statementInsertIntoData",
        "join"
      ],
      "mappings": ";;;;;;;AAAA;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAzB;;AACO,IAAIE,mBAAmB,GAAG,EAA1B;;AACP,IAAIC,gBAAgB,GAAG,EAAvB;AACA,IAAIC,gBAAgB,GAAG,EAAvB;AACA,IAAIC,KAAK,GAAG,CAAZ;AAEA,IAAIC,gBAAgB,2BAAoBL,SAAS,CAACM,QAA9B,CAApB;AAEO,IAAIC,IAAI,GAAG,CAAX;;;AAEA,IAAIC,UAAU,GAAG,SAAbA,UAAa,CAACC,YAAD,EAAiB;AAErCL,EAAAA,KAAK;AACLM,EAAAA,OAAO,CAACC,GAAR,wBAAyBP,KAAzB,GAHqC,CAIrC;AACA;;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,MAAIC,OAAO,GAAGd,KAAK,CAACe,gBAAN,CAAuB;AACjCC,IAAAA,IAAI,EAAEd,SAAS,CAACc,IADiB;AAEjCC,IAAAA,IAAI,EAAEf,SAAS,CAACe,IAFiB;AAGjCC,IAAAA,QAAQ,EAAEhB,SAAS,CAACgB,QAHa;AAIjCC,IAAAA,IAAI,EAAEjB,SAAS,CAACkB,OAJiB;AAKjCC,IAAAA,QAAQ,EAAEnB,SAAS,CAACmB,QALa;AAMjCC,IAAAA,kBAAkB,EAAEpB,SAAS,CAACoB;AANG,GAAvB,CAAd;AAQAR,EAAAA,OAAO,CAACS,OAAR,CAAgB,UAASC,GAAT,EAAc;AAC1B,QAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTV,IAAAA,OAAO,CAACW,KAAR,CAAcd,YAAd,EAA4B,UAAUa,GAAV,EAAeE,SAAf,EAA0B;AAClDd,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAV,MAAAA,mBAAmB,CAACwB,IAApB,CAAyBD,SAAzB,EAFkD,CAGlD;;AACA,UAAIF,GAAJ,EAAS;AACL;AACA;AACH;AACJ,KARD;AASAV,IAAAA,OAAO,CAACc,GAAR;AACH,GAZD;AAaAhB,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCV,mBAAxC;AACH,CA9BM;;;;AA+BA,IAAI0B,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,aAAD,EAAgBC,MAAhB,EAA0B;AAAE;AAC/D,MAAIC,aAAa,GAAG,wDAApB;AAEA,MAAIF,aAAa,KAAK,WAAtB,EAAmCzB,gBAAgB,2BAAoBH,SAAS,CAACM,QAA9B,wBAAhB;;AAEnC,MAAIsB,aAAa,KAAK,WAAtB,EAAmC;AAC/B,QAAIG,uBAAuB,eAASF,MAAM,CAACG,IAAP,CAAY,KAAZ,CAAT,QAA3B;AACA7B,IAAAA,gBAAgB,yBAAmBH,SAAS,CAACM,QAA7B,qBAAiDwB,aAAjD,qBAA2EC,uBAA3E,CAAhB;AACH;;AAGD,MAAIH,aAAa,KAAK,UAAtB,EAAkC;AAC9BzB,IAAAA,gBAAgB,2BAAoBH,SAAS,CAACM,QAA9B,6BAA0DuB,MAA1D,wBAAhB;AACH,GAb4D,CAe7D;;;AAEA3B,EAAAA,gBAAgB,GAAGC,gBAAnB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYT,gBAAZ;AAEA,SAAOA,gBAAP;AACH,CAtBM,C,CAuBH",
      "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions",
      "sourcesContent": [
        "//SQL Config\r\nvar mysql = require('mysql');\r\nconst SQLConfig = require('./SQLConfig');\r\nexport let incommingSQLDataArr = [];\r\nlet currentStatement = '';\r\nlet choosenStatement = '';\r\nlet count = 0;\r\n\r\nlet defaultStatement = `SELECT * FROM ${SQLConfig.SQLTable}`;\r\n\r\nexport let test = 2;\r\n\r\nexport let runSQLConn = (SQLStatement) =>{        \r\n\r\n    count++;\r\n    console.log(`Körning - ${count}`);\r\n    // Creates a connection between the server and my client and listen for SQL changes¨\r\n    //let SQLConn = mysql.createConnection([{multipleStatements: true}, 'mysql://djcp7bmvky3s0mnm:osp74zwrq5ut4gun@m60mxazb4g6sb4nn.chr7pe7iynqr.eu-west-1.rds.amazonaws.com:3306/q3uqurm7z68qb3h2']);\r\n\r\n    console.log(\"Ansluten till DB :)\");\r\n    let SQLConn = mysql.createConnection({\r\n        host: SQLConfig.host,\r\n        user: SQLConfig.user,\r\n        password: SQLConfig.password,\r\n        port: SQLConfig.sqlPort,\r\n        database: SQLConfig.database,\r\n        multipleStatements: SQLConfig.multipleStatements,\r\n    });\r\n    SQLConn.connect(function(err) { \r\n        if (err) throw err;        \r\n        SQLConn.query(SQLStatement, function (err, sqlResult) {\r\n            console.log('85');\r\n            incommingSQLDataArr.push(sqlResult);\r\n            //console.log(\"incommingSQLDataArr - 43\", incommingSQLDataArr)\r\n            if (err) {\r\n                //SQLConn.release();\r\n                return;\r\n            }\r\n        }); \r\n        SQLConn.end();\r\n    });\r\n    console.log(\"incommingSQLDataArr - 67\", incommingSQLDataArr);\r\n}\r\nexport let buildCorrectSQLStatements = (statementType, SQLObj) =>{ // Find correct SQLStatement\r\n    let statementCols = 'date, activity, state, concerned, type, place, content';    \r\n    \r\n    if (statementType === 'first run') choosenStatement = `SELECT * FROM ${SQLConfig.SQLTable} ORDER BY date DESC`;\r\n    \r\n    if (statementType === 'addRecord') {\r\n        let statementInsertIntoData = `('${ SQLObj.join(\"','\")}');`;\r\n        choosenStatement = `INSERT INTO ${ SQLConfig.SQLTable} (sent, ${ statementCols }) VALUES${ statementInsertIntoData}`;  \r\n    }\r\n    \r\n    \r\n    if (statementType === 'userSpec') {\r\n        choosenStatement = `SELECT * FROM ${SQLConfig.SQLTable} WHERE userName=${ SQLObj } ORDER BY date DESC`;\r\n    }\r\n    \r\n    //if (statementType === 'filter') choosenStatement = `SELECT * FROM data ${SQLObj.currentStatement.operator} ${ SQLObj.currentStatement.filterIn } in ('${ SQLObj.currentStatement.SQLFilterStr}')`;\r\n    \r\n    currentStatement = choosenStatement;\r\n    console.log('116');\r\n    console.log(currentStatement);\r\n    \r\n    return currentStatement;\r\n}\r\n    //Function to choose correct statement according the inomming data"
      ]
    },
    "sourceType": "script",
    "mtime": 1584021568401
  },
  "{\"sourceRoot\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\\\\Functions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"filename\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\\\\Functions\\\\SQLFunctions.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "filename": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions\\SQLFunctions.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions\\SQLFunctions.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions\\SQLFunctions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions",
        "sourceFileName": "SQLFunctions.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildCorrectSQLStatements = exports.runSQLConn = exports.test = exports.incommingSQLDataArr = void 0;\n\n//SQL Config\nvar mysql = require('mysql');\n\nvar SQLConfig = require('./SQLConfig');\n\nvar incommingSQLDataArr = [];\nexports.incommingSQLDataArr = incommingSQLDataArr;\nvar currentStatement = '';\nvar choosenStatement = '';\nvar count = 0;\nvar defaultStatement = \"SELECT * FROM \".concat(SQLConfig.SQLTable);\nvar test = 2;\nexports.test = test;\n\nvar runSQLConn = function runSQLConn(SQLStatement) {\n  count++;\n  console.log(\"K\\xF6rning - \".concat(count)); // Creates a connection between the server and my client and listen for SQL changes¨\n  //let SQLConn = mysql.createConnection([{multipleStatements: true}, 'mysql://djcp7bmvky3s0mnm:osp74zwrq5ut4gun@m60mxazb4g6sb4nn.chr7pe7iynqr.eu-west-1.rds.amazonaws.com:3306/q3uqurm7z68qb3h2']);\n\n  console.log(\"Ansluten till DB :)\");\n  var SQLConn = mysql.createConnection({\n    host: SQLConfig.host,\n    user: SQLConfig.user,\n    password: SQLConfig.password,\n    port: SQLConfig.sqlPort,\n    database: SQLConfig.database,\n    multipleStatements: SQLConfig.multipleStatements\n  });\n  SQLConn.connect(function (err) {\n    if (err) throw err;\n    SQLConn.query(SQLStatement, function (err, sqlResult) {\n      console.log('85');\n      incommingSQLDataArr.push(sqlResult); //console.log(\"incommingSQLDataArr - 43\", incommingSQLDataArr)\n\n      if (err) {\n        //SQLConn.release();\n        return;\n      }\n    });\n    SQLConn.end();\n  });\n  console.log(\"incommingSQLDataArr - 67\", incommingSQLDataArr);\n};\n\nexports.runSQLConn = runSQLConn;\n\nvar buildCorrectSQLStatements = function buildCorrectSQLStatements(statementType, SQLObj) {\n  // Find correct SQLStatement\n  var statementCols = 'date, activity, state, concerned, type, place, content';\n  if (statementType === 'first run') choosenStatement = \"SELECT * FROM \".concat(SQLConfig.SQLTable, \" ORDER BY date DESC\");\n\n  if (statementType === 'addRecord') {\n    var statementInsertIntoData = \"('\".concat(SQLObj.join(\"','\"), \"');\");\n    choosenStatement = \"INSERT INTO \".concat(SQLConfig.SQLTable, \" (sent, \").concat(statementCols, \") VALUES\").concat(statementInsertIntoData);\n  }\n\n  if (statementType === 'userSpec') {\n    choosenStatement = \"SELECT * FROM \".concat(SQLConfig.SQLTable, \" WHERE userName=\").concat(SQLObj, \" ORDER BY date DESC\");\n  } //if (statementType === 'filter') choosenStatement = `SELECT * FROM data ${SQLObj.currentStatement.operator} ${ SQLObj.currentStatement.filterIn } in ('${ SQLObj.currentStatement.SQLFilterStr}')`;\n\n\n  currentStatement = choosenStatement;\n  console.log('116');\n  console.log(currentStatement);\n  return currentStatement;\n}; //Function to choose correct statement according the inomming data\n\n\nexports.buildCorrectSQLStatements = buildCorrectSQLStatements;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNRTEZ1bmN0aW9ucy5qcyJdLCJuYW1lcyI6WyJteXNxbCIsInJlcXVpcmUiLCJTUUxDb25maWciLCJpbmNvbW1pbmdTUUxEYXRhQXJyIiwiY3VycmVudFN0YXRlbWVudCIsImNob29zZW5TdGF0ZW1lbnQiLCJjb3VudCIsImRlZmF1bHRTdGF0ZW1lbnQiLCJTUUxUYWJsZSIsInRlc3QiLCJydW5TUUxDb25uIiwiU1FMU3RhdGVtZW50IiwiY29uc29sZSIsImxvZyIsIlNRTENvbm4iLCJjcmVhdGVDb25uZWN0aW9uIiwiaG9zdCIsInVzZXIiLCJwYXNzd29yZCIsInBvcnQiLCJzcWxQb3J0IiwiZGF0YWJhc2UiLCJtdWx0aXBsZVN0YXRlbWVudHMiLCJjb25uZWN0IiwiZXJyIiwicXVlcnkiLCJzcWxSZXN1bHQiLCJwdXNoIiwiZW5kIiwiYnVpbGRDb3JyZWN0U1FMU3RhdGVtZW50cyIsInN0YXRlbWVudFR5cGUiLCJTUUxPYmoiLCJzdGF0ZW1lbnRDb2xzIiwic3RhdGVtZW50SW5zZXJ0SW50b0RhdGEiLCJqb2luIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQSxJQUFJQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQW5COztBQUNBLElBQU1DLFNBQVMsR0FBR0QsT0FBTyxDQUFDLGFBQUQsQ0FBekI7O0FBQ08sSUFBSUUsbUJBQW1CLEdBQUcsRUFBMUI7O0FBQ1AsSUFBSUMsZ0JBQWdCLEdBQUcsRUFBdkI7QUFDQSxJQUFJQyxnQkFBZ0IsR0FBRyxFQUF2QjtBQUNBLElBQUlDLEtBQUssR0FBRyxDQUFaO0FBRUEsSUFBSUMsZ0JBQWdCLDJCQUFvQkwsU0FBUyxDQUFDTSxRQUE5QixDQUFwQjtBQUVPLElBQUlDLElBQUksR0FBRyxDQUFYOzs7QUFFQSxJQUFJQyxVQUFVLEdBQUcsU0FBYkEsVUFBYSxDQUFDQyxZQUFELEVBQWlCO0FBRXJDTCxFQUFBQSxLQUFLO0FBQ0xNLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUix3QkFBeUJQLEtBQXpCLEdBSHFDLENBSXJDO0FBQ0E7O0FBRUFNLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHFCQUFaO0FBQ0EsTUFBSUMsT0FBTyxHQUFHZCxLQUFLLENBQUNlLGdCQUFOLENBQXVCO0FBQ2pDQyxJQUFBQSxJQUFJLEVBQUVkLFNBQVMsQ0FBQ2MsSUFEaUI7QUFFakNDLElBQUFBLElBQUksRUFBRWYsU0FBUyxDQUFDZSxJQUZpQjtBQUdqQ0MsSUFBQUEsUUFBUSxFQUFFaEIsU0FBUyxDQUFDZ0IsUUFIYTtBQUlqQ0MsSUFBQUEsSUFBSSxFQUFFakIsU0FBUyxDQUFDa0IsT0FKaUI7QUFLakNDLElBQUFBLFFBQVEsRUFBRW5CLFNBQVMsQ0FBQ21CLFFBTGE7QUFNakNDLElBQUFBLGtCQUFrQixFQUFFcEIsU0FBUyxDQUFDb0I7QUFORyxHQUF2QixDQUFkO0FBUUFSLEVBQUFBLE9BQU8sQ0FBQ1MsT0FBUixDQUFnQixVQUFTQyxHQUFULEVBQWM7QUFDMUIsUUFBSUEsR0FBSixFQUFTLE1BQU1BLEdBQU47QUFDVFYsSUFBQUEsT0FBTyxDQUFDVyxLQUFSLENBQWNkLFlBQWQsRUFBNEIsVUFBVWEsR0FBVixFQUFlRSxTQUFmLEVBQTBCO0FBQ2xEZCxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxJQUFaO0FBQ0FWLE1BQUFBLG1CQUFtQixDQUFDd0IsSUFBcEIsQ0FBeUJELFNBQXpCLEVBRmtELENBR2xEOztBQUNBLFVBQUlGLEdBQUosRUFBUztBQUNMO0FBQ0E7QUFDSDtBQUNKLEtBUkQ7QUFTQVYsSUFBQUEsT0FBTyxDQUFDYyxHQUFSO0FBQ0gsR0FaRDtBQWFBaEIsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMEJBQVosRUFBd0NWLG1CQUF4QztBQUNILENBOUJNOzs7O0FBK0JBLElBQUkwQix5QkFBeUIsR0FBRyxTQUE1QkEseUJBQTRCLENBQUNDLGFBQUQsRUFBZ0JDLE1BQWhCLEVBQTBCO0FBQUU7QUFDL0QsTUFBSUMsYUFBYSxHQUFHLHdEQUFwQjtBQUVBLE1BQUlGLGFBQWEsS0FBSyxXQUF0QixFQUFtQ3pCLGdCQUFnQiwyQkFBb0JILFNBQVMsQ0FBQ00sUUFBOUIsd0JBQWhCOztBQUVuQyxNQUFJc0IsYUFBYSxLQUFLLFdBQXRCLEVBQW1DO0FBQy9CLFFBQUlHLHVCQUF1QixlQUFTRixNQUFNLENBQUNHLElBQVAsQ0FBWSxLQUFaLENBQVQsUUFBM0I7QUFDQTdCLElBQUFBLGdCQUFnQix5QkFBbUJILFNBQVMsQ0FBQ00sUUFBN0IscUJBQWlEd0IsYUFBakQscUJBQTJFQyx1QkFBM0UsQ0FBaEI7QUFDSDs7QUFHRCxNQUFJSCxhQUFhLEtBQUssVUFBdEIsRUFBa0M7QUFDOUJ6QixJQUFBQSxnQkFBZ0IsMkJBQW9CSCxTQUFTLENBQUNNLFFBQTlCLDZCQUEwRHVCLE1BQTFELHdCQUFoQjtBQUNILEdBYjRELENBZTdEOzs7QUFFQTNCLEVBQUFBLGdCQUFnQixHQUFHQyxnQkFBbkI7QUFDQU8sRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksS0FBWjtBQUNBRCxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVQsZ0JBQVo7QUFFQSxTQUFPQSxnQkFBUDtBQUNILENBdEJNLEMsQ0F1QkgiLCJzb3VyY2VSb290IjoiRDpcXFdlYlxcSEJHV29ya3NcXFNjaGVkdWtlQXBwXFxTZXJ2ZXJIZXJva3VcXEZ1bmN0aW9ucyIsInNvdXJjZXNDb250ZW50IjpbIi8vU1FMIENvbmZpZ1xyXG52YXIgbXlzcWwgPSByZXF1aXJlKCdteXNxbCcpO1xyXG5jb25zdCBTUUxDb25maWcgPSByZXF1aXJlKCcuL1NRTENvbmZpZycpO1xyXG5leHBvcnQgbGV0IGluY29tbWluZ1NRTERhdGFBcnIgPSBbXTtcclxubGV0IGN1cnJlbnRTdGF0ZW1lbnQgPSAnJztcclxubGV0IGNob29zZW5TdGF0ZW1lbnQgPSAnJztcclxubGV0IGNvdW50ID0gMDtcclxuXHJcbmxldCBkZWZhdWx0U3RhdGVtZW50ID0gYFNFTEVDVCAqIEZST00gJHtTUUxDb25maWcuU1FMVGFibGV9YDtcclxuXHJcbmV4cG9ydCBsZXQgdGVzdCA9IDI7XHJcblxyXG5leHBvcnQgbGV0IHJ1blNRTENvbm4gPSAoU1FMU3RhdGVtZW50KSA9PnsgICAgICAgIFxyXG5cclxuICAgIGNvdW50Kys7XHJcbiAgICBjb25zb2xlLmxvZyhgS8O2cm5pbmcgLSAke2NvdW50fWApO1xyXG4gICAgLy8gQ3JlYXRlcyBhIGNvbm5lY3Rpb24gYmV0d2VlbiB0aGUgc2VydmVyIGFuZCBteSBjbGllbnQgYW5kIGxpc3RlbiBmb3IgU1FMIGNoYW5nZXPCqFxyXG4gICAgLy9sZXQgU1FMQ29ubiA9IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oW3ttdWx0aXBsZVN0YXRlbWVudHM6IHRydWV9LCAnbXlzcWw6Ly9kamNwN2Jtdmt5M3MwbW5tOm9zcDc0endycTV1dDRndW5AbTYwbXhhemI0ZzZzYjRubi5jaHI3cGU3aXlucXIuZXUtd2VzdC0xLnJkcy5hbWF6b25hd3MuY29tOjMzMDYvcTN1cXVybTd6NjhxYjNoMiddKTtcclxuXHJcbiAgICBjb25zb2xlLmxvZyhcIkFuc2x1dGVuIHRpbGwgREIgOilcIik7XHJcbiAgICBsZXQgU1FMQ29ubiA9IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oe1xyXG4gICAgICAgIGhvc3Q6IFNRTENvbmZpZy5ob3N0LFxyXG4gICAgICAgIHVzZXI6IFNRTENvbmZpZy51c2VyLFxyXG4gICAgICAgIHBhc3N3b3JkOiBTUUxDb25maWcucGFzc3dvcmQsXHJcbiAgICAgICAgcG9ydDogU1FMQ29uZmlnLnNxbFBvcnQsXHJcbiAgICAgICAgZGF0YWJhc2U6IFNRTENvbmZpZy5kYXRhYmFzZSxcclxuICAgICAgICBtdWx0aXBsZVN0YXRlbWVudHM6IFNRTENvbmZpZy5tdWx0aXBsZVN0YXRlbWVudHMsXHJcbiAgICB9KTtcclxuICAgIFNRTENvbm4uY29ubmVjdChmdW5jdGlvbihlcnIpIHsgXHJcbiAgICAgICAgaWYgKGVycikgdGhyb3cgZXJyOyAgICAgICAgXHJcbiAgICAgICAgU1FMQ29ubi5xdWVyeShTUUxTdGF0ZW1lbnQsIGZ1bmN0aW9uIChlcnIsIHNxbFJlc3VsdCkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnODUnKTtcclxuICAgICAgICAgICAgaW5jb21taW5nU1FMRGF0YUFyci5wdXNoKHNxbFJlc3VsdCk7XHJcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coXCJpbmNvbW1pbmdTUUxEYXRhQXJyIC0gNDNcIiwgaW5jb21taW5nU1FMRGF0YUFycilcclxuICAgICAgICAgICAgaWYgKGVycikge1xyXG4gICAgICAgICAgICAgICAgLy9TUUxDb25uLnJlbGVhc2UoKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pOyBcclxuICAgICAgICBTUUxDb25uLmVuZCgpO1xyXG4gICAgfSk7XHJcbiAgICBjb25zb2xlLmxvZyhcImluY29tbWluZ1NRTERhdGFBcnIgLSA2N1wiLCBpbmNvbW1pbmdTUUxEYXRhQXJyKTtcclxufVxyXG5leHBvcnQgbGV0IGJ1aWxkQ29ycmVjdFNRTFN0YXRlbWVudHMgPSAoc3RhdGVtZW50VHlwZSwgU1FMT2JqKSA9PnsgLy8gRmluZCBjb3JyZWN0IFNRTFN0YXRlbWVudFxyXG4gICAgbGV0IHN0YXRlbWVudENvbHMgPSAnZGF0ZSwgYWN0aXZpdHksIHN0YXRlLCBjb25jZXJuZWQsIHR5cGUsIHBsYWNlLCBjb250ZW50JzsgICAgXHJcbiAgICBcclxuICAgIGlmIChzdGF0ZW1lbnRUeXBlID09PSAnZmlyc3QgcnVuJykgY2hvb3NlblN0YXRlbWVudCA9IGBTRUxFQ1QgKiBGUk9NICR7U1FMQ29uZmlnLlNRTFRhYmxlfSBPUkRFUiBCWSBkYXRlIERFU0NgO1xyXG4gICAgXHJcbiAgICBpZiAoc3RhdGVtZW50VHlwZSA9PT0gJ2FkZFJlY29yZCcpIHtcclxuICAgICAgICBsZXQgc3RhdGVtZW50SW5zZXJ0SW50b0RhdGEgPSBgKCckeyBTUUxPYmouam9pbihcIicsJ1wiKX0nKTtgO1xyXG4gICAgICAgIGNob29zZW5TdGF0ZW1lbnQgPSBgSU5TRVJUIElOVE8gJHsgU1FMQ29uZmlnLlNRTFRhYmxlfSAoc2VudCwgJHsgc3RhdGVtZW50Q29scyB9KSBWQUxVRVMkeyBzdGF0ZW1lbnRJbnNlcnRJbnRvRGF0YX1gOyAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgaWYgKHN0YXRlbWVudFR5cGUgPT09ICd1c2VyU3BlYycpIHtcclxuICAgICAgICBjaG9vc2VuU3RhdGVtZW50ID0gYFNFTEVDVCAqIEZST00gJHtTUUxDb25maWcuU1FMVGFibGV9IFdIRVJFIHVzZXJOYW1lPSR7IFNRTE9iaiB9IE9SREVSIEJZIGRhdGUgREVTQ2A7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vaWYgKHN0YXRlbWVudFR5cGUgPT09ICdmaWx0ZXInKSBjaG9vc2VuU3RhdGVtZW50ID0gYFNFTEVDVCAqIEZST00gZGF0YSAke1NRTE9iai5jdXJyZW50U3RhdGVtZW50Lm9wZXJhdG9yfSAkeyBTUUxPYmouY3VycmVudFN0YXRlbWVudC5maWx0ZXJJbiB9IGluICgnJHsgU1FMT2JqLmN1cnJlbnRTdGF0ZW1lbnQuU1FMRmlsdGVyU3RyfScpYDtcclxuICAgIFxyXG4gICAgY3VycmVudFN0YXRlbWVudCA9IGNob29zZW5TdGF0ZW1lbnQ7XHJcbiAgICBjb25zb2xlLmxvZygnMTE2Jyk7XHJcbiAgICBjb25zb2xlLmxvZyhjdXJyZW50U3RhdGVtZW50KTtcclxuICAgIFxyXG4gICAgcmV0dXJuIGN1cnJlbnRTdGF0ZW1lbnQ7XHJcbn1cclxuICAgIC8vRnVuY3Rpb24gdG8gY2hvb3NlIGNvcnJlY3Qgc3RhdGVtZW50IGFjY29yZGluZyB0aGUgaW5vbW1pbmcgZGF0YSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "SQLFunctions.js"
      ],
      "names": [
        "mysql",
        "require",
        "SQLConfig",
        "incommingSQLDataArr",
        "currentStatement",
        "choosenStatement",
        "count",
        "defaultStatement",
        "SQLTable",
        "test",
        "runSQLConn",
        "SQLStatement",
        "console",
        "log",
        "SQLConn",
        "createConnection",
        "host",
        "user",
        "password",
        "port",
        "sqlPort",
        "database",
        "multipleStatements",
        "connect",
        "err",
        "query",
        "sqlResult",
        "push",
        "end",
        "buildCorrectSQLStatements",
        "statementType",
        "SQLObj",
        "statementCols",
        "statementInsertIntoData",
        "join"
      ],
      "mappings": ";;;;;;;AAAA;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAzB;;AACO,IAAIE,mBAAmB,GAAG,EAA1B;;AACP,IAAIC,gBAAgB,GAAG,EAAvB;AACA,IAAIC,gBAAgB,GAAG,EAAvB;AACA,IAAIC,KAAK,GAAG,CAAZ;AAEA,IAAIC,gBAAgB,2BAAoBL,SAAS,CAACM,QAA9B,CAApB;AAEO,IAAIC,IAAI,GAAG,CAAX;;;AAEA,IAAIC,UAAU,GAAG,SAAbA,UAAa,CAACC,YAAD,EAAiB;AAErCL,EAAAA,KAAK;AACLM,EAAAA,OAAO,CAACC,GAAR,wBAAyBP,KAAzB,GAHqC,CAIrC;AACA;;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,MAAIC,OAAO,GAAGd,KAAK,CAACe,gBAAN,CAAuB;AACjCC,IAAAA,IAAI,EAAEd,SAAS,CAACc,IADiB;AAEjCC,IAAAA,IAAI,EAAEf,SAAS,CAACe,IAFiB;AAGjCC,IAAAA,QAAQ,EAAEhB,SAAS,CAACgB,QAHa;AAIjCC,IAAAA,IAAI,EAAEjB,SAAS,CAACkB,OAJiB;AAKjCC,IAAAA,QAAQ,EAAEnB,SAAS,CAACmB,QALa;AAMjCC,IAAAA,kBAAkB,EAAEpB,SAAS,CAACoB;AANG,GAAvB,CAAd;AAQAR,EAAAA,OAAO,CAACS,OAAR,CAAgB,UAASC,GAAT,EAAc;AAC1B,QAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTV,IAAAA,OAAO,CAACW,KAAR,CAAcd,YAAd,EAA4B,UAAUa,GAAV,EAAeE,SAAf,EAA0B;AAClDd,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAV,MAAAA,mBAAmB,CAACwB,IAApB,CAAyBD,SAAzB,EAFkD,CAGlD;;AACA,UAAIF,GAAJ,EAAS;AACL;AACA;AACH;AACJ,KARD;AASAV,IAAAA,OAAO,CAACc,GAAR;AACH,GAZD;AAaAhB,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCV,mBAAxC;AACH,CA9BM;;;;AA+BA,IAAI0B,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,aAAD,EAAgBC,MAAhB,EAA0B;AAAE;AAC/D,MAAIC,aAAa,GAAG,wDAApB;AAEA,MAAIF,aAAa,KAAK,WAAtB,EAAmCzB,gBAAgB,2BAAoBH,SAAS,CAACM,QAA9B,wBAAhB;;AAEnC,MAAIsB,aAAa,KAAK,WAAtB,EAAmC;AAC/B,QAAIG,uBAAuB,eAASF,MAAM,CAACG,IAAP,CAAY,KAAZ,CAAT,QAA3B;AACA7B,IAAAA,gBAAgB,yBAAmBH,SAAS,CAACM,QAA7B,qBAAiDwB,aAAjD,qBAA2EC,uBAA3E,CAAhB;AACH;;AAGD,MAAIH,aAAa,KAAK,UAAtB,EAAkC;AAC9BzB,IAAAA,gBAAgB,2BAAoBH,SAAS,CAACM,QAA9B,6BAA0DuB,MAA1D,wBAAhB;AACH,GAb4D,CAe7D;;;AAEA3B,EAAAA,gBAAgB,GAAGC,gBAAnB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYT,gBAAZ;AAEA,SAAOA,gBAAP;AACH,CAtBM,C,CAuBH",
      "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions",
      "sourcesContent": [
        "//SQL Config\r\nvar mysql = require('mysql');\r\nconst SQLConfig = require('./SQLConfig');\r\nexport let incommingSQLDataArr = [];\r\nlet currentStatement = '';\r\nlet choosenStatement = '';\r\nlet count = 0;\r\n\r\nlet defaultStatement = `SELECT * FROM ${SQLConfig.SQLTable}`;\r\n\r\nexport let test = 2;\r\n\r\nexport let runSQLConn = (SQLStatement) =>{        \r\n\r\n    count++;\r\n    console.log(`Körning - ${count}`);\r\n    // Creates a connection between the server and my client and listen for SQL changes¨\r\n    //let SQLConn = mysql.createConnection([{multipleStatements: true}, 'mysql://djcp7bmvky3s0mnm:osp74zwrq5ut4gun@m60mxazb4g6sb4nn.chr7pe7iynqr.eu-west-1.rds.amazonaws.com:3306/q3uqurm7z68qb3h2']);\r\n\r\n    console.log(\"Ansluten till DB :)\");\r\n    let SQLConn = mysql.createConnection({\r\n        host: SQLConfig.host,\r\n        user: SQLConfig.user,\r\n        password: SQLConfig.password,\r\n        port: SQLConfig.sqlPort,\r\n        database: SQLConfig.database,\r\n        multipleStatements: SQLConfig.multipleStatements,\r\n    });\r\n    SQLConn.connect(function(err) { \r\n        if (err) throw err;        \r\n        SQLConn.query(SQLStatement, function (err, sqlResult) {\r\n            console.log('85');\r\n            incommingSQLDataArr.push(sqlResult);\r\n            //console.log(\"incommingSQLDataArr - 43\", incommingSQLDataArr)\r\n            if (err) {\r\n                //SQLConn.release();\r\n                return;\r\n            }\r\n        }); \r\n        SQLConn.end();\r\n    });\r\n    console.log(\"incommingSQLDataArr - 67\", incommingSQLDataArr);\r\n}\r\nexport let buildCorrectSQLStatements = (statementType, SQLObj) =>{ // Find correct SQLStatement\r\n    let statementCols = 'date, activity, state, concerned, type, place, content';    \r\n    \r\n    if (statementType === 'first run') choosenStatement = `SELECT * FROM ${SQLConfig.SQLTable} ORDER BY date DESC`;\r\n    \r\n    if (statementType === 'addRecord') {\r\n        let statementInsertIntoData = `('${ SQLObj.join(\"','\")}');`;\r\n        choosenStatement = `INSERT INTO ${ SQLConfig.SQLTable} (sent, ${ statementCols }) VALUES${ statementInsertIntoData}`;  \r\n    }\r\n    \r\n    \r\n    if (statementType === 'userSpec') {\r\n        choosenStatement = `SELECT * FROM ${SQLConfig.SQLTable} WHERE userName=${ SQLObj } ORDER BY date DESC`;\r\n    }\r\n    \r\n    //if (statementType === 'filter') choosenStatement = `SELECT * FROM data ${SQLObj.currentStatement.operator} ${ SQLObj.currentStatement.filterIn } in ('${ SQLObj.currentStatement.SQLFilterStr}')`;\r\n    \r\n    currentStatement = choosenStatement;\r\n    console.log('116');\r\n    console.log(currentStatement);\r\n    \r\n    return currentStatement;\r\n}\r\n    //Function to choose correct statement according the inomming data"
      ]
    },
    "sourceType": "script",
    "mtime": 1584021638070
  },
  "{\"sourceRoot\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\\\\Functions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"filename\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\\\\Functions\\\\WebTokenFunctions.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "filename": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions\\WebTokenFunctions.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions\\WebTokenFunctions.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions\\WebTokenFunctions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions",
        "sourceFileName": "WebTokenFunctions.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiJEOlxcV2ViXFxIQkdXb3Jrc1xcU2NoZWR1a2VBcHBcXFNlcnZlckhlcm9rdVxcRnVuY3Rpb25zIiwic291cmNlc0NvbnRlbnQiOltdfQ==",
    "map": {
      "version": 3,
      "sources": [],
      "names": [],
      "mappings": "",
      "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions",
      "sourcesContent": []
    },
    "sourceType": "script",
    "mtime": 1584039399925
  },
  "{\"sourceRoot\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\\\\Functions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"filename\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\\\\Functions\\\\UserFunctions.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Web\\\\HBGWorks\\\\SchedukeApp\\\\ServerHeroku\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "filename": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions\\UserFunctions.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions\\UserFunctions.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions\\UserFunctions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions",
        "sourceFileName": "UserFunctions.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sendCorrectUserData = void 0;\n\nvar _SQLFunctions = require(\"./SQLFunctions\");\n\nvar sendCorrectUserData = function sendCorrectUserData(getInlogedUser) {\n  var getCorrectUserData = [];\n\n  _SQLFunctions.incommingSQLDataArr.map(function (obj) {\n    for (var key in obj) {\n      if (obj[key].userName === getInlogedUser) {\n        getCorrectUserData.push(obj[key]);\n      }\n    }\n\n    return getCorrectUserData;\n  });\n\n  return getCorrectUserData;\n};\n\nexports.sendCorrectUserData = sendCorrectUserData;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXJGdW5jdGlvbnMuanMiXSwibmFtZXMiOlsic2VuZENvcnJlY3RVc2VyRGF0YSIsImdldElubG9nZWRVc2VyIiwiZ2V0Q29ycmVjdFVzZXJEYXRhIiwiaW5jb21taW5nU1FMRGF0YUFyciIsIm1hcCIsIm9iaiIsImtleSIsInVzZXJOYW1lIiwicHVzaCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVPLElBQUlBLG1CQUFtQixHQUFHLFNBQXRCQSxtQkFBc0IsQ0FBQ0MsY0FBRCxFQUFvQjtBQUNqRCxNQUFJQyxrQkFBa0IsR0FBRyxFQUF6Qjs7QUFDQUMsb0NBQW9CQyxHQUFwQixDQUF3QixVQUFDQyxHQUFELEVBQVM7QUFDN0IsU0FBSyxJQUFNQyxHQUFYLElBQWtCRCxHQUFsQixFQUF1QjtBQUNuQixVQUFJQSxHQUFHLENBQUNDLEdBQUQsQ0FBSCxDQUFTQyxRQUFULEtBQXNCTixjQUExQixFQUEwQztBQUN0Q0MsUUFBQUEsa0JBQWtCLENBQUNNLElBQW5CLENBQXdCSCxHQUFHLENBQUNDLEdBQUQsQ0FBM0I7QUFDSDtBQUNKOztBQUNELFdBQU9KLGtCQUFQO0FBQ0gsR0FQRDs7QUFRQSxTQUFPQSxrQkFBUDtBQUNILENBWE0iLCJzb3VyY2VSb290IjoiRDpcXFdlYlxcSEJHV29ya3NcXFNjaGVkdWtlQXBwXFxTZXJ2ZXJIZXJva3VcXEZ1bmN0aW9ucyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7aW5jb21taW5nU1FMRGF0YUFycn0gZnJvbSAnLi9TUUxGdW5jdGlvbnMnOyBcclxuXHJcbmV4cG9ydCBsZXQgc2VuZENvcnJlY3RVc2VyRGF0YSA9IChnZXRJbmxvZ2VkVXNlcikgPT4geyAgXHJcbiAgICBsZXQgZ2V0Q29ycmVjdFVzZXJEYXRhID0gW107ICBcclxuICAgIGluY29tbWluZ1NRTERhdGFBcnIubWFwKChvYmopID0+IHtcclxuICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiBvYmopIHtcclxuICAgICAgICAgICAgaWYgKG9ialtrZXldLnVzZXJOYW1lID09PSBnZXRJbmxvZ2VkVXNlcikge1xyXG4gICAgICAgICAgICAgICAgZ2V0Q29ycmVjdFVzZXJEYXRhLnB1c2gob2JqW2tleV0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBnZXRDb3JyZWN0VXNlckRhdGE7XHJcbiAgICB9KTtcclxuICAgIHJldHVybiBnZXRDb3JyZWN0VXNlckRhdGE7XHJcbn0gIl19",
    "map": {
      "version": 3,
      "sources": [
        "UserFunctions.js"
      ],
      "names": [
        "sendCorrectUserData",
        "getInlogedUser",
        "getCorrectUserData",
        "incommingSQLDataArr",
        "map",
        "obj",
        "key",
        "userName",
        "push"
      ],
      "mappings": ";;;;;;;AAAA;;AAEO,IAAIA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,cAAD,EAAoB;AACjD,MAAIC,kBAAkB,GAAG,EAAzB;;AACAC,oCAAoBC,GAApB,CAAwB,UAACC,GAAD,EAAS;AAC7B,SAAK,IAAMC,GAAX,IAAkBD,GAAlB,EAAuB;AACnB,UAAIA,GAAG,CAACC,GAAD,CAAH,CAASC,QAAT,KAAsBN,cAA1B,EAA0C;AACtCC,QAAAA,kBAAkB,CAACM,IAAnB,CAAwBH,GAAG,CAACC,GAAD,CAA3B;AACH;AACJ;;AACD,WAAOJ,kBAAP;AACH,GAPD;;AAQA,SAAOA,kBAAP;AACH,CAXM",
      "sourceRoot": "D:\\Web\\HBGWorks\\SchedukeApp\\ServerHeroku\\Functions",
      "sourcesContent": [
        "import {incommingSQLDataArr} from './SQLFunctions'; \r\n\r\nexport let sendCorrectUserData = (getInlogedUser) => {  \r\n    let getCorrectUserData = [];  \r\n    incommingSQLDataArr.map((obj) => {\r\n        for (const key in obj) {\r\n            if (obj[key].userName === getInlogedUser) {\r\n                getCorrectUserData.push(obj[key]);\r\n            }\r\n        }\r\n        return getCorrectUserData;\r\n    });\r\n    return getCorrectUserData;\r\n} "
      ]
    },
    "sourceType": "script",
    "mtime": 1584039871765
  },
  "{\"sourceRoot\":\"C:\\\\Web\\\\HBGWorks\\\\ScheduleApp\\\\ServerHeroku\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Web\\\\HBGWorks\\\\ScheduleApp\\\\ServerHeroku\",\"filename\":\"C:\\\\Web\\\\HBGWorks\\\\ScheduleApp\\\\ServerHeroku\\\\ServerGetSQLData.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Web\\\\HBGWorks\\\\ScheduleApp\\\\ServerHeroku\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku",
      "filename": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\ServerGetSQLData.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\ServerGetSQLData.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\ServerGetSQLData.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku",
        "sourceFileName": "ServerGetSQLData.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _SQLFunctions = require(\"./Functions/SQLFunctions\");\n\nvar _UserFunctions = require(\"./Functions/UserFunctions\");\n\n// Import functions\nvar SQLConfig = require('./Functions/SQLConfig'); // Basic Server module\n\n\nvar express = require('express');\n\nvar jwt = require('jsonwebtoken');\n\nvar fileSystem = require('fs');\n\nvar cors = require('cors');\n\nvar app = express();\napp.use(express.json());\napp.use(cors());\nvar addRecord = false;\nvar inNewRecord = false;\nvar countRegedUser = 0; // The server information\n\nvar port = process.env.PORT || SQLConfig.serverPort;\nvar serverIO = app.listen(port, function () {\n  return console.log(\"getSQLData is listening on port \".concat(port, \"!\"));\n}); // All the accessable users for the app\n\nvar regedUserList = require('./RegedUser.json'); // ============================ Create a user ============================\n//Create id\n\n\nvar userId = function userId() {\n  //Note - When calling this function I need set the id value = -1 able starting the user id from nr 1 -->\n  for (var index = 0; index < regedUserList.regedUser.length; index++) {\n    countRegedUser = regedUserList.regedUser[index].userId;\n  } // Get the last id in my arr of users and add by one\n\n\n  countRegedUser++;\n  return countRegedUser;\n}; // Reg a user\n\n\nvar userReg = function userReg(userBody) {\n  console.log('46');\n  console.log(userBody);\n  var regedUser = {\n    userId: userId(),\n    fullName: userBody.fullName,\n    userName: userBody.userName,\n    userPassWord: userBody.userPassWord\n  };\n  regedUserList['regedUser'].push(regedUser);\n  console.log(regedUserList);\n  fileSystem.writeFile('./RegedUser.json', JSON.stringify(regedUserList //debugging  \n  , null, 2), function (err) {\n    console.log(err);\n  });\n}; // Run function for the mehods ================================================================================================\n\n\nvar emtyDataArrays = function emtyDataArrays(emtyingArr) {\n  //Emtying the array at the end\n  emtyingArr = [];\n}; // Validate the user who whants logging in\n\n\nvar validateUser = function validateUser(incommingUser) {\n  var getFullName = '';\n  var userReturnData = {\n    userMatch: false\n  };\n  var userList = regedUserList['regedUser'];\n  console.log('130');\n  console.log(incommingUser); // Check the userList for a userName vs password match\n\n  for (var index = 0; index < userList.length; index++) {\n    var getUsername = userList[index].userName;\n    var getPassword = userList[index].userPassWord; // Check if there are any match with a reged user\n\n    if (incommingUser.userName === getUsername && incommingUser.userPassWord === getPassword) {\n      userReturnData = {\n        userId: userId() - 1,\n        userMatch: true,\n        loginName: userList[index].fullName\n      };\n    }\n  }\n\n  return userReturnData;\n}; // Middleware for verfy token\n\n\nvar verifyToken = function verifyToken(req, res, next) {\n  var bearerHeader = req.headers['authorization'];\n  console.log(\"verifyToken -> bearerHeader\", bearerHeader); // check token if not undefined\n\n  if (bearerHeader !== undefined) {} else {\n    console.log('EWFWF');\n    res.status(403).send('Authorization failed!');\n  }\n}; // Run method when requested from client ======================================================================================\n// Run Logout  \n\n\napp.get('/SQLData', function (req, res) {\n  (0, _SQLFunctions.runSQLConn)((0, _SQLFunctions.buildCorrectSQLStatements)('first run', ''));\n  setTimeout(function () {\n    res.status(200).send(_SQLFunctions.incommingSQLDataArr);\n  }, 1000);\n  console.log('=========================userSpec==========================================');\n}); // User loging in =============================================================================================================\n// UserValidation and send a token back as response\n\napp.post('/SQLData/Login', function (req, res) {\n  /*  The userdata is incomming and send into he function to validate the Logging in user:\r\n      if = true, the code = 200 is send back together with a tokem else the code = 404 is send with no data */\n  var incommingUserData = req.body.bodyData;\n  var returninUserData = validateUser(incommingUserData);\n\n  if (returninUserData.userMatch === true) {\n    jwt.sign(returninUserData, 'inlogSecretKey', function (error, token) {\n      console.log(\"token\", token);\n      res.statusMessage = \"Du har loggats in :)\";\n      res.status(200).send(token); // User is match\n    });\n  }\n\n  if (returninUserData.userMatch === false) {\n    res.statusMessage = \"Användaren finns inte!\";\n    res.status(203).send(null); // User is unmatch\n  }\n\n  returninUserData = {};\n}); // Requested userData is send back if the token is the same as created\n\napp.get('/SQLData/:user', verifyToken, function (req, res) {\n  inNewRecord = true;\n  var getInlogedUser = req.params.user; //runSQLConn(buildCorrectSQLStatements('userSpec', getInlogedUser));\n\n  setTimeout(function () {\n    res.status(200).send((0, _UserFunctions.sendCorrectUserData)(getInlogedUser));\n  }, 3000);\n}); // AddSQLData & RegUsers ============================================================\n\napp.post('/SQLData/AddRecord', function (req, res) {\n  addRecord = true;\n  var currentInData = req.body.bodyData;\n  (0, _SQLFunctions.runSQLConn)((0, _SQLFunctions.buildCorrectSQLStatements)('addRecord', currentInData)); //incommingSQLDataArr.push(currentStatement);\n\n  console.log('===================================================================');\n  addRecord = false;\n  emtyDataArrays();\n}); // UserReg =========================================================================\n\napp.post('/SQLData/UserReg', function (req, res) {\n  addRecord = true;\n  console.log('192');\n  console.log(req.body.bodyData);\n  userReg(req.body.bodyData);\n  console.log('===================================================================');\n  addRecord = false;\n  emtyDataArrays();\n}); // =================================================================================\n// Run filtering\n\napp.post('/SQLData/filter', function (req, res) {}); // ============================================================================================================================\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "ServerGetSQLData.js"
      ],
      "names": [
        "SQLConfig",
        "require",
        "express",
        "jwt",
        "fileSystem",
        "cors",
        "app",
        "use",
        "json",
        "addRecord",
        "inNewRecord",
        "countRegedUser",
        "port",
        "process",
        "env",
        "PORT",
        "serverPort",
        "serverIO",
        "listen",
        "console",
        "log",
        "regedUserList",
        "userId",
        "index",
        "regedUser",
        "length",
        "userReg",
        "userBody",
        "fullName",
        "userName",
        "userPassWord",
        "push",
        "writeFile",
        "JSON",
        "stringify",
        "err",
        "emtyDataArrays",
        "emtyingArr",
        "validateUser",
        "incommingUser",
        "getFullName",
        "userReturnData",
        "userMatch",
        "userList",
        "getUsername",
        "getPassword",
        "loginName",
        "verifyToken",
        "req",
        "res",
        "next",
        "bearerHeader",
        "headers",
        "undefined",
        "status",
        "send",
        "get",
        "setTimeout",
        "incommingSQLDataArr",
        "post",
        "incommingUserData",
        "body",
        "bodyData",
        "returninUserData",
        "sign",
        "error",
        "token",
        "statusMessage",
        "getInlogedUser",
        "params",
        "user",
        "currentInData"
      ],
      "mappings": ";;AACA;;AACA;;AAFA;AAIA,IAAMA,SAAS,GAAGC,OAAO,CAAC,uBAAD,CAAzB,C,CAEA;;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,cAAD,CAAjB;;AACA,IAAMG,UAAU,GAAGH,OAAO,CAAC,IAAD,CAA1B;;AACA,IAAII,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAMK,GAAG,GAAGJ,OAAO,EAAnB;AACAI,GAAG,CAACC,GAAJ,CAAQL,OAAO,CAACM,IAAR,EAAR;AACAF,GAAG,CAACC,GAAJ,CAAQF,IAAI,EAAZ;AAEA,IAAII,SAAS,GAAG,KAAhB;AACA,IAAIC,WAAW,GAAG,KAAlB;AACA,IAAIC,cAAc,GAAG,CAArB,C,CAEA;;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoBf,SAAS,CAACgB,UAA3C;AACA,IAAIC,QAAQ,GAAGX,GAAG,CAACY,MAAJ,CAAWN,IAAX,EAAiB;AAAA,SAAMO,OAAO,CAACC,GAAR,2CAA+CR,IAA/C,OAAN;AAAA,CAAjB,CAAf,C,CAEA;;AACA,IAAIS,aAAa,GAAGpB,OAAO,CAAC,kBAAD,CAA3B,C,CAEA;AACA;;;AACA,IAAIqB,MAAM,GAAI,SAAVA,MAAU,GAAM;AAChB;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,aAAa,CAACG,SAAd,CAAwBC,MAApD,EAA4DF,KAAK,EAAjE,EAAqE;AACjEZ,IAAAA,cAAc,GAAGU,aAAa,CAACG,SAAd,CAAwBD,KAAxB,EAA+BD,MAAhD;AACH,GAJe,CAKhB;;;AACAX,EAAAA,cAAc;AACd,SAAOA,cAAP;AACH,CARD,C,CASA;;;AACA,IAAIe,OAAO,GAAG,SAAVA,OAAU,CAACC,QAAD,EAAc;AACxBR,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AAEA,MAAIH,SAAS,GAAG;AACZF,IAAAA,MAAM,EAAEA,MAAM,EADF;AAEZM,IAAAA,QAAQ,EAAED,QAAQ,CAACC,QAFP;AAGZC,IAAAA,QAAQ,EAAEF,QAAQ,CAACE,QAHP;AAIZC,IAAAA,YAAY,EAAEH,QAAQ,CAACG;AAJX,GAAhB;AAOAT,EAAAA,aAAa,CAAC,WAAD,CAAb,CAA2BU,IAA3B,CAAgCP,SAAhC;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYC,aAAZ;AAEAjB,EAAAA,UAAU,CAAC4B,SAAX,CAAqB,kBAArB,EAAyCC,IAAI,CAACC,SAAL,CAAeb,aAAf,CAA6B;AAA7B,IACnC,IADmC,EAC7B,CAD6B,CAAzC,EAEO,UAASc,GAAT,EAAc;AAAChB,IAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACjB,GAHL;AAKC,CAnBL,C,CAqBI;;;AAEA,IAAIC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,UAAD,EAAgB;AACjC;AACAA,EAAAA,UAAU,GAAG,EAAb;AACH,CAHD,C,CAIA;;;AACA,IAAIC,YAAY,GAAG,SAAfA,YAAe,CAACC,aAAD,EAAmB;AAClC,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,cAAc,GAAG;AAACC,IAAAA,SAAS,EAAE;AAAZ,GAArB;AAEJ,MAAIC,QAAQ,GAAGtB,aAAa,CAAC,WAAD,CAA5B;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYmB,aAAZ,EANsC,CAQtC;;AACA,OAAK,IAAIhB,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGoB,QAAQ,CAAClB,MAArC,EAA6CF,KAAK,EAAlD,EAAsD;AAClD,QAAMqB,WAAW,GAAGD,QAAQ,CAACpB,KAAD,CAAR,CAAgBM,QAApC;AACA,QAAMgB,WAAW,GAAGF,QAAQ,CAACpB,KAAD,CAAR,CAAgBO,YAApC,CAFkD,CAGlD;;AACA,QAAIS,aAAa,CAACV,QAAd,KAA2Be,WAA3B,IAA0CL,aAAa,CAACT,YAAd,KAA+Be,WAA7E,EAA0F;AACtFJ,MAAAA,cAAc,GAAG;AACbnB,QAAAA,MAAM,EAAEA,MAAM,KAAG,CADJ;AAEboB,QAAAA,SAAS,EAAE,IAFE;AAGbI,QAAAA,SAAS,EAAEH,QAAQ,CAACpB,KAAD,CAAR,CAAgBK;AAHd,OAAjB;AAKH;AACJ;;AACD,SAAOa,cAAP;AACH,CAtBG,C,CAuBJ;;;AACA,IAAIM,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAmB;AACjC,MAAMC,YAAY,GAAGH,GAAG,CAACI,OAAJ,CAAY,eAAZ,CAArB;AACAjC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2C+B,YAA3C,EAFiC,CAIjC;;AACA,MAAIA,YAAY,KAAKE,SAArB,EAAgC,CAE/B,CAFD,MAGK;AACDlC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAEA6B,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,uBAArB;AACH;AAEJ,CAdD,C,CAgBA;AACA;;;AACAjD,GAAG,CAACkD,GAAJ,CAAQ,UAAR,EAAoB,UAACR,GAAD,EAAMC,GAAN,EAAc;AAC9B,gCAAW,6CAA0B,WAA1B,EAAuC,EAAvC,CAAX;AACAQ,EAAAA,UAAU,CAAC,YAAO;AACdR,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBG,iCAArB;AACH,GAFS,EAEP,IAFO,CAAV;AAGIvC,EAAAA,OAAO,CAACC,GAAR,CAAY,6EAAZ;AACP,CAND,E,CAQA;AACA;;AACAd,GAAG,CAACqD,IAAJ,CAAS,gBAAT,EAA2B,UAACX,GAAD,EAAMC,GAAN,EAAc;AACrC;;AAEA,MAAIW,iBAAiB,GAAGZ,GAAG,CAACa,IAAJ,CAASC,QAAjC;AACA,MAAIC,gBAAgB,GAAGzB,YAAY,CAACsB,iBAAD,CAAnC;;AAEA,MAAIG,gBAAgB,CAACrB,SAAjB,KAA+B,IAAnC,EAAyC;AACrCvC,IAAAA,GAAG,CAAC6D,IAAJ,CAASD,gBAAT,EAA2B,gBAA3B,EAA6C,UAACE,KAAD,EAAQC,KAAR,EAAkB;AAC1D/C,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB8C,KAArB;AAEAjB,MAAAA,GAAG,CAACkB,aAAJ,GAAoB,sBAApB;AACAlB,MAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBW,KAArB,EAJ0D,CAI7B;AACjC,KALD;AAMF;;AAEF,MAAIH,gBAAgB,CAACrB,SAAjB,KAA+B,KAAnC,EAA0C;AACtCO,IAAAA,GAAG,CAACkB,aAAJ,GAAoB,wBAApB;AACAlB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,IAArB,EAFsC,CAEV;AAC/B;;AACDQ,EAAAA,gBAAgB,GAAG,EAAnB;AACH,CApBD,E,CAqBA;;AACAzD,GAAG,CAACkD,GAAJ,CAAQ,gBAAR,EAA0BT,WAA1B,EAAuC,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjDvC,EAAAA,WAAW,GAAG,IAAd;AACA,MAAI0D,cAAc,GAAGpB,GAAG,CAACqB,MAAJ,CAAWC,IAAhC,CAFiD,CAIjD;;AAEAb,EAAAA,UAAU,CAAC,YAAM;AACbR,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,wCAAoBa,cAApB,CAArB;AACH,GAFS,EAEP,IAFO,CAAV;AAGH,CATD,E,CAYA;;AACA9D,GAAG,CAACqD,IAAJ,CAAS,oBAAT,EAA+B,UAACX,GAAD,EAAMC,GAAN,EAAc;AACzCxC,EAAAA,SAAS,GAAG,IAAZ;AACA,MAAI8D,aAAa,GAAGvB,GAAG,CAACa,IAAJ,CAASC,QAA7B;AAEA,gCAAW,6CAA0B,WAA1B,EAAuCS,aAAvC,CAAX,EAJyC,CAKzC;;AACApD,EAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACAX,EAAAA,SAAS,GAAG,KAAZ;AACA2B,EAAAA,cAAc;AACjB,CATD,E,CAUA;;AACA9B,GAAG,CAACqD,IAAJ,CAAS,kBAAT,EAA6B,UAACX,GAAD,EAAMC,GAAN,EAAc;AACvCxC,EAAAA,SAAS,GAAG,IAAZ;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY4B,GAAG,CAACa,IAAJ,CAASC,QAArB;AAEApC,EAAAA,OAAO,CAACsB,GAAG,CAACa,IAAJ,CAASC,QAAV,CAAP;AAGA3C,EAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACAX,EAAAA,SAAS,GAAG,KAAZ;AACA2B,EAAAA,cAAc;AACjB,CAXD,E,CAYA;AAEA;;AACA9B,GAAG,CAACqD,IAAJ,CAAS,iBAAT,EAA4B,UAACX,GAAD,EAAMC,GAAN,EAAc,CAGzC,CAHD,E,CAKA",
      "sourceRoot": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku",
      "sourcesContent": [
        "// Import functions\r\nimport {runSQLConn, buildCorrectSQLStatements, incommingSQLDataArr} from './Functions/SQLFunctions'; \r\nimport {sendCorrectUserData} from './Functions/UserFunctions';\r\n\r\nconst SQLConfig = require('./Functions/SQLConfig');\r\n\r\n// Basic Server module\r\nconst express = require('express');\r\nlet jwt = require('jsonwebtoken');\r\nconst fileSystem = require('fs');\r\nlet cors = require('cors');\r\nconst app = express();\r\napp.use(express.json());\r\napp.use(cors());\r\n\r\nlet addRecord = false;\r\nlet inNewRecord = false; \r\nlet countRegedUser = 0;\r\n \r\n// The server information\r\nconst port = process.env.PORT || SQLConfig.serverPort;\r\nlet serverIO = app.listen(port, () => console.log(`getSQLData is listening on port ${port}!`));\r\n\r\n// All the accessable users for the app\r\nlet regedUserList = require('./RegedUser.json');\r\n\r\n// ============================ Create a user ============================\r\n//Create id\r\nlet userId  = () => { \r\n    //Note - When calling this function I need set the id value = -1 able starting the user id from nr 1 -->\r\n    for (let index = 0; index < regedUserList.regedUser.length; index++) {\r\n        countRegedUser = regedUserList.regedUser[index].userId;\r\n    }\r\n    // Get the last id in my arr of users and add by one\r\n    countRegedUser++;    \r\n    return countRegedUser;\r\n}\r\n// Reg a user\r\nlet userReg = (userBody) => {\r\n    console.log('46');\r\n    console.log(userBody);\r\n\r\n    let regedUser = {\r\n        userId: userId(),\r\n        fullName: userBody.fullName,\r\n        userName: userBody.userName,\r\n        userPassWord: userBody.userPassWord\r\n        \r\n    };\r\n    regedUserList['regedUser'].push(regedUser);\r\n    console.log(regedUserList);\r\n    \r\n    fileSystem.writeFile('./RegedUser.json', JSON.stringify(regedUserList //debugging  \r\n        , null, 2\r\n        ), function(err) {console.log(err);     \r\n        });\r\n        \r\n    };\r\n    \r\n    // Run function for the mehods ================================================================================================\r\n    \r\n    let emtyDataArrays = (emtyingArr) => {\r\n        //Emtying the array at the end\r\n        emtyingArr = [];\r\n    }\r\n    // Validate the user who whants logging in\r\n    let validateUser = (incommingUser) => {\r\n        let getFullName = '';\r\n        let userReturnData = {userMatch: false};\r\n        \r\n    let userList = regedUserList['regedUser'];\r\n    console.log('130');\r\n    console.log(incommingUser);\r\n    \r\n    // Check the userList for a userName vs password match\r\n    for (let index = 0; index < userList.length; index++) {\r\n        const getUsername = userList[index].userName;\r\n        const getPassword = userList[index].userPassWord;\r\n        // Check if there are any match with a reged user\r\n        if (incommingUser.userName === getUsername && incommingUser.userPassWord === getPassword) {\r\n            userReturnData = {\r\n                userId: userId()-1,\r\n                userMatch: true,\r\n                loginName: userList[index].fullName\r\n            }\r\n        }\r\n    }\r\n    return userReturnData;\r\n} \r\n// Middleware for verfy token\r\nlet verifyToken = (req, res, next) =>{\r\n    const bearerHeader = req.headers['authorization']\r\n    console.log(\"verifyToken -> bearerHeader\", bearerHeader)\r\n\r\n    // check token if not undefined\r\n    if (bearerHeader !== undefined) {\r\n        \r\n    }\r\n    else {\r\n        console.log('EWFWF');\r\n        \r\n        res.status(403).send('Authorization failed!');\r\n    }\r\n\r\n} \r\n\r\n// Run method when requested from client ======================================================================================\r\n// Run Logout  \r\napp.get('/SQLData', (req, res) => {\r\n    runSQLConn(buildCorrectSQLStatements('first run', '')); \r\n    setTimeout(()  => {\r\n        res.status(200).send(incommingSQLDataArr);\r\n    }, 1000);  \r\n        console.log('=========================userSpec==========================================');\r\n});\r\n\r\n// User loging in =============================================================================================================\r\n// UserValidation and send a token back as response\r\napp.post('/SQLData/Login', (req, res) => {\r\n    /*  The userdata is incomming and send into he function to validate the Logging in user:\r\n        if = true, the code = 200 is send back together with a tokem else the code = 404 is send with no data */\r\n    let incommingUserData = req.body.bodyData;\r\n    let returninUserData = validateUser(incommingUserData);\r\n     \r\n    if (returninUserData.userMatch === true) {        \r\n        jwt.sign(returninUserData, 'inlogSecretKey', (error, token) => {\r\n             console.log(\"token\", token)\r\n             \r\n             res.statusMessage = \"Du har loggats in :)\";\r\n             res.status(200).send(token); // User is match\r\n        });        \r\n     }    \r\n\r\n    if (returninUserData.userMatch === false) {\r\n        res.statusMessage = \"Användaren finns inte!\";\r\n        res.status(203).send(null); // User is unmatch\r\n    }\r\n    returninUserData = {};\r\n});\r\n// Requested userData is send back if the token is the same as created\r\napp.get('/SQLData/:user', verifyToken, (req, res) => {\r\n    inNewRecord = true;\r\n    let getInlogedUser = req.params.user;\r\n    \r\n    //runSQLConn(buildCorrectSQLStatements('userSpec', getInlogedUser));\r\n    \r\n    setTimeout(() => {   \r\n        res.status(200).send(sendCorrectUserData(getInlogedUser));\r\n    }, 3000);\r\n});\r\n\r\n\r\n// AddSQLData & RegUsers ============================================================\r\napp.post('/SQLData/AddRecord', (req, res) => {\r\n    addRecord = true;\r\n    let currentInData = req.body.bodyData;\r\n\r\n    runSQLConn(buildCorrectSQLStatements('addRecord', currentInData));\r\n    //incommingSQLDataArr.push(currentStatement);\r\n    console.log('===================================================================');\r\n    addRecord = false;\r\n    emtyDataArrays();\r\n});\r\n// UserReg =========================================================================\r\napp.post('/SQLData/UserReg', (req, res) => {\r\n    addRecord = true;\r\n    console.log('192');\r\n    console.log(req.body.bodyData);\r\n    \r\n    userReg(req.body.bodyData);\r\n\r\n\r\n    console.log('===================================================================');\r\n    addRecord = false;\r\n    emtyDataArrays();\r\n});\r\n// =================================================================================\r\n\r\n// Run filtering\r\napp.post('/SQLData/filter', (req, res) => {\r\n    \r\n\r\n});\r\n\r\n// ============================================================================================================================"
      ]
    },
    "sourceType": "script",
    "mtime": 1584120065996
  },
  "{\"sourceRoot\":\"C:\\\\Web\\\\HBGWorks\\\\ScheduleApp\\\\ServerHeroku\\\\Functions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Web\\\\HBGWorks\\\\ScheduleApp\\\\ServerHeroku\",\"filename\":\"C:\\\\Web\\\\HBGWorks\\\\ScheduleApp\\\\ServerHeroku\\\\Functions\\\\SQLFunctions.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Web\\\\HBGWorks\\\\ScheduleApp\\\\ServerHeroku\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\Functions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku",
      "filename": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\Functions\\SQLFunctions.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\Functions\\SQLFunctions.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\Functions\\SQLFunctions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\Functions",
        "sourceFileName": "SQLFunctions.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildCorrectSQLStatements = exports.runSQLConn = exports.test = exports.incommingSQLDataArr = void 0;\n\n//SQL Config\nvar mysql = require('mysql');\n\nvar SQLConfig = require('./SQLConfig');\n\nvar incommingSQLDataArr = [];\nexports.incommingSQLDataArr = incommingSQLDataArr;\nvar currentStatement = '';\nvar choosenStatement = '';\nvar count = 0;\nvar defaultStatement = \"SELECT * FROM \".concat(SQLConfig.SQLTable);\nvar test = 2;\nexports.test = test;\n\nvar runSQLConn = function runSQLConn(SQLStatement) {\n  count++;\n  console.log(\"K\\xF6rning - \".concat(count)); // Creates a connection between the server and my client and listen for SQL changes¨\n  //let SQLConn = mysql.createConnection([{multipleStatements: true}, 'mysql://djcp7bmvky3s0mnm:osp74zwrq5ut4gun@m60mxazb4g6sb4nn.chr7pe7iynqr.eu-west-1.rds.amazonaws.com:3306/q3uqurm7z68qb3h2']);\n\n  console.log(\"Ansluten till DB :)\");\n  var SQLConn = mysql.createConnection({\n    host: SQLConfig.host,\n    user: SQLConfig.user,\n    password: SQLConfig.password,\n    port: SQLConfig.sqlPort,\n    database: SQLConfig.database,\n    multipleStatements: SQLConfig.multipleStatements\n  });\n  SQLConn.connect(function (err) {\n    if (err) throw err;\n    SQLConn.query(SQLStatement, function (err, sqlResult) {\n      console.log('85');\n      incommingSQLDataArr.push(sqlResult); //console.log(\"incommingSQLDataArr - 43\", incommingSQLDataArr)\n\n      if (err) {\n        //SQLConn.release();\n        return;\n      }\n    });\n    SQLConn.end();\n  });\n  console.log(\"incommingSQLDataArr - 67\", incommingSQLDataArr);\n};\n\nexports.runSQLConn = runSQLConn;\n\nvar buildCorrectSQLStatements = function buildCorrectSQLStatements(statementType, SQLObj) {\n  // Find correct SQLStatement\n  var statementCols = 'date, activity, state, concerned, type, place, content';\n  if (statementType === 'first run') choosenStatement = \"SELECT * FROM \".concat(SQLConfig.SQLTable, \" ORDER BY date DESC\");\n\n  if (statementType === 'addRecord') {\n    var statementInsertIntoData = \"('\".concat(SQLObj.join(\"','\"), \"');\");\n    choosenStatement = \"INSERT INTO \".concat(SQLConfig.SQLTable, \" (sent, \").concat(statementCols, \") VALUES\").concat(statementInsertIntoData);\n  }\n\n  if (statementType === 'userSpec') {\n    choosenStatement = \"SELECT * FROM \".concat(SQLConfig.SQLTable, \" WHERE userName=\").concat(SQLObj, \" ORDER BY date DESC\");\n  } //if (statementType === 'filter') choosenStatement = `SELECT * FROM data ${SQLObj.currentStatement.operator} ${ SQLObj.currentStatement.filterIn } in ('${ SQLObj.currentStatement.SQLFilterStr}')`;\n\n\n  currentStatement = choosenStatement;\n  console.log('116');\n  console.log(currentStatement);\n  return currentStatement;\n}; //Function to choose correct statement according the inomming data\n\n\nexports.buildCorrectSQLStatements = buildCorrectSQLStatements;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNRTEZ1bmN0aW9ucy5qcyJdLCJuYW1lcyI6WyJteXNxbCIsInJlcXVpcmUiLCJTUUxDb25maWciLCJpbmNvbW1pbmdTUUxEYXRhQXJyIiwiY3VycmVudFN0YXRlbWVudCIsImNob29zZW5TdGF0ZW1lbnQiLCJjb3VudCIsImRlZmF1bHRTdGF0ZW1lbnQiLCJTUUxUYWJsZSIsInRlc3QiLCJydW5TUUxDb25uIiwiU1FMU3RhdGVtZW50IiwiY29uc29sZSIsImxvZyIsIlNRTENvbm4iLCJjcmVhdGVDb25uZWN0aW9uIiwiaG9zdCIsInVzZXIiLCJwYXNzd29yZCIsInBvcnQiLCJzcWxQb3J0IiwiZGF0YWJhc2UiLCJtdWx0aXBsZVN0YXRlbWVudHMiLCJjb25uZWN0IiwiZXJyIiwicXVlcnkiLCJzcWxSZXN1bHQiLCJwdXNoIiwiZW5kIiwiYnVpbGRDb3JyZWN0U1FMU3RhdGVtZW50cyIsInN0YXRlbWVudFR5cGUiLCJTUUxPYmoiLCJzdGF0ZW1lbnRDb2xzIiwic3RhdGVtZW50SW5zZXJ0SW50b0RhdGEiLCJqb2luIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQSxJQUFJQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQW5COztBQUNBLElBQU1DLFNBQVMsR0FBR0QsT0FBTyxDQUFDLGFBQUQsQ0FBekI7O0FBQ08sSUFBSUUsbUJBQW1CLEdBQUcsRUFBMUI7O0FBQ1AsSUFBSUMsZ0JBQWdCLEdBQUcsRUFBdkI7QUFDQSxJQUFJQyxnQkFBZ0IsR0FBRyxFQUF2QjtBQUNBLElBQUlDLEtBQUssR0FBRyxDQUFaO0FBRUEsSUFBSUMsZ0JBQWdCLDJCQUFvQkwsU0FBUyxDQUFDTSxRQUE5QixDQUFwQjtBQUVPLElBQUlDLElBQUksR0FBRyxDQUFYOzs7QUFFQSxJQUFJQyxVQUFVLEdBQUcsU0FBYkEsVUFBYSxDQUFDQyxZQUFELEVBQWlCO0FBRXJDTCxFQUFBQSxLQUFLO0FBQ0xNLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUix3QkFBeUJQLEtBQXpCLEdBSHFDLENBSXJDO0FBQ0E7O0FBRUFNLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHFCQUFaO0FBQ0EsTUFBSUMsT0FBTyxHQUFHZCxLQUFLLENBQUNlLGdCQUFOLENBQXVCO0FBQ2pDQyxJQUFBQSxJQUFJLEVBQUVkLFNBQVMsQ0FBQ2MsSUFEaUI7QUFFakNDLElBQUFBLElBQUksRUFBRWYsU0FBUyxDQUFDZSxJQUZpQjtBQUdqQ0MsSUFBQUEsUUFBUSxFQUFFaEIsU0FBUyxDQUFDZ0IsUUFIYTtBQUlqQ0MsSUFBQUEsSUFBSSxFQUFFakIsU0FBUyxDQUFDa0IsT0FKaUI7QUFLakNDLElBQUFBLFFBQVEsRUFBRW5CLFNBQVMsQ0FBQ21CLFFBTGE7QUFNakNDLElBQUFBLGtCQUFrQixFQUFFcEIsU0FBUyxDQUFDb0I7QUFORyxHQUF2QixDQUFkO0FBUUFSLEVBQUFBLE9BQU8sQ0FBQ1MsT0FBUixDQUFnQixVQUFTQyxHQUFULEVBQWM7QUFDMUIsUUFBSUEsR0FBSixFQUFTLE1BQU1BLEdBQU47QUFDVFYsSUFBQUEsT0FBTyxDQUFDVyxLQUFSLENBQWNkLFlBQWQsRUFBNEIsVUFBVWEsR0FBVixFQUFlRSxTQUFmLEVBQTBCO0FBQ2xEZCxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxJQUFaO0FBQ0FWLE1BQUFBLG1CQUFtQixDQUFDd0IsSUFBcEIsQ0FBeUJELFNBQXpCLEVBRmtELENBR2xEOztBQUNBLFVBQUlGLEdBQUosRUFBUztBQUNMO0FBQ0E7QUFDSDtBQUNKLEtBUkQ7QUFTQVYsSUFBQUEsT0FBTyxDQUFDYyxHQUFSO0FBQ0gsR0FaRDtBQWFBaEIsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMEJBQVosRUFBd0NWLG1CQUF4QztBQUNILENBOUJNOzs7O0FBK0JBLElBQUkwQix5QkFBeUIsR0FBRyxTQUE1QkEseUJBQTRCLENBQUNDLGFBQUQsRUFBZ0JDLE1BQWhCLEVBQTBCO0FBQUU7QUFDL0QsTUFBSUMsYUFBYSxHQUFHLHdEQUFwQjtBQUVBLE1BQUlGLGFBQWEsS0FBSyxXQUF0QixFQUFtQ3pCLGdCQUFnQiwyQkFBb0JILFNBQVMsQ0FBQ00sUUFBOUIsd0JBQWhCOztBQUVuQyxNQUFJc0IsYUFBYSxLQUFLLFdBQXRCLEVBQW1DO0FBQy9CLFFBQUlHLHVCQUF1QixlQUFTRixNQUFNLENBQUNHLElBQVAsQ0FBWSxLQUFaLENBQVQsUUFBM0I7QUFDQTdCLElBQUFBLGdCQUFnQix5QkFBbUJILFNBQVMsQ0FBQ00sUUFBN0IscUJBQWlEd0IsYUFBakQscUJBQTJFQyx1QkFBM0UsQ0FBaEI7QUFDSDs7QUFHRCxNQUFJSCxhQUFhLEtBQUssVUFBdEIsRUFBa0M7QUFDOUJ6QixJQUFBQSxnQkFBZ0IsMkJBQW9CSCxTQUFTLENBQUNNLFFBQTlCLDZCQUEwRHVCLE1BQTFELHdCQUFoQjtBQUNILEdBYjRELENBZTdEOzs7QUFFQTNCLEVBQUFBLGdCQUFnQixHQUFHQyxnQkFBbkI7QUFDQU8sRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksS0FBWjtBQUNBRCxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVQsZ0JBQVo7QUFFQSxTQUFPQSxnQkFBUDtBQUNILENBdEJNLEMsQ0F1QkgiLCJzb3VyY2VSb290IjoiQzpcXFdlYlxcSEJHV29ya3NcXFNjaGVkdWxlQXBwXFxTZXJ2ZXJIZXJva3VcXEZ1bmN0aW9ucyIsInNvdXJjZXNDb250ZW50IjpbIi8vU1FMIENvbmZpZ1xyXG52YXIgbXlzcWwgPSByZXF1aXJlKCdteXNxbCcpO1xyXG5jb25zdCBTUUxDb25maWcgPSByZXF1aXJlKCcuL1NRTENvbmZpZycpO1xyXG5leHBvcnQgbGV0IGluY29tbWluZ1NRTERhdGFBcnIgPSBbXTtcclxubGV0IGN1cnJlbnRTdGF0ZW1lbnQgPSAnJztcclxubGV0IGNob29zZW5TdGF0ZW1lbnQgPSAnJztcclxubGV0IGNvdW50ID0gMDtcclxuXHJcbmxldCBkZWZhdWx0U3RhdGVtZW50ID0gYFNFTEVDVCAqIEZST00gJHtTUUxDb25maWcuU1FMVGFibGV9YDtcclxuXHJcbmV4cG9ydCBsZXQgdGVzdCA9IDI7XHJcblxyXG5leHBvcnQgbGV0IHJ1blNRTENvbm4gPSAoU1FMU3RhdGVtZW50KSA9PnsgICAgICAgIFxyXG5cclxuICAgIGNvdW50Kys7XHJcbiAgICBjb25zb2xlLmxvZyhgS8O2cm5pbmcgLSAke2NvdW50fWApO1xyXG4gICAgLy8gQ3JlYXRlcyBhIGNvbm5lY3Rpb24gYmV0d2VlbiB0aGUgc2VydmVyIGFuZCBteSBjbGllbnQgYW5kIGxpc3RlbiBmb3IgU1FMIGNoYW5nZXPCqFxyXG4gICAgLy9sZXQgU1FMQ29ubiA9IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oW3ttdWx0aXBsZVN0YXRlbWVudHM6IHRydWV9LCAnbXlzcWw6Ly9kamNwN2Jtdmt5M3MwbW5tOm9zcDc0endycTV1dDRndW5AbTYwbXhhemI0ZzZzYjRubi5jaHI3cGU3aXlucXIuZXUtd2VzdC0xLnJkcy5hbWF6b25hd3MuY29tOjMzMDYvcTN1cXVybTd6NjhxYjNoMiddKTtcclxuXHJcbiAgICBjb25zb2xlLmxvZyhcIkFuc2x1dGVuIHRpbGwgREIgOilcIik7XHJcbiAgICBsZXQgU1FMQ29ubiA9IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oe1xyXG4gICAgICAgIGhvc3Q6IFNRTENvbmZpZy5ob3N0LFxyXG4gICAgICAgIHVzZXI6IFNRTENvbmZpZy51c2VyLFxyXG4gICAgICAgIHBhc3N3b3JkOiBTUUxDb25maWcucGFzc3dvcmQsXHJcbiAgICAgICAgcG9ydDogU1FMQ29uZmlnLnNxbFBvcnQsXHJcbiAgICAgICAgZGF0YWJhc2U6IFNRTENvbmZpZy5kYXRhYmFzZSxcclxuICAgICAgICBtdWx0aXBsZVN0YXRlbWVudHM6IFNRTENvbmZpZy5tdWx0aXBsZVN0YXRlbWVudHMsXHJcbiAgICB9KTtcclxuICAgIFNRTENvbm4uY29ubmVjdChmdW5jdGlvbihlcnIpIHsgXHJcbiAgICAgICAgaWYgKGVycikgdGhyb3cgZXJyOyAgICAgICAgXHJcbiAgICAgICAgU1FMQ29ubi5xdWVyeShTUUxTdGF0ZW1lbnQsIGZ1bmN0aW9uIChlcnIsIHNxbFJlc3VsdCkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnODUnKTtcclxuICAgICAgICAgICAgaW5jb21taW5nU1FMRGF0YUFyci5wdXNoKHNxbFJlc3VsdCk7XHJcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coXCJpbmNvbW1pbmdTUUxEYXRhQXJyIC0gNDNcIiwgaW5jb21taW5nU1FMRGF0YUFycilcclxuICAgICAgICAgICAgaWYgKGVycikge1xyXG4gICAgICAgICAgICAgICAgLy9TUUxDb25uLnJlbGVhc2UoKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pOyBcclxuICAgICAgICBTUUxDb25uLmVuZCgpO1xyXG4gICAgfSk7XHJcbiAgICBjb25zb2xlLmxvZyhcImluY29tbWluZ1NRTERhdGFBcnIgLSA2N1wiLCBpbmNvbW1pbmdTUUxEYXRhQXJyKTtcclxufVxyXG5leHBvcnQgbGV0IGJ1aWxkQ29ycmVjdFNRTFN0YXRlbWVudHMgPSAoc3RhdGVtZW50VHlwZSwgU1FMT2JqKSA9PnsgLy8gRmluZCBjb3JyZWN0IFNRTFN0YXRlbWVudFxyXG4gICAgbGV0IHN0YXRlbWVudENvbHMgPSAnZGF0ZSwgYWN0aXZpdHksIHN0YXRlLCBjb25jZXJuZWQsIHR5cGUsIHBsYWNlLCBjb250ZW50JzsgICAgXHJcbiAgICBcclxuICAgIGlmIChzdGF0ZW1lbnRUeXBlID09PSAnZmlyc3QgcnVuJykgY2hvb3NlblN0YXRlbWVudCA9IGBTRUxFQ1QgKiBGUk9NICR7U1FMQ29uZmlnLlNRTFRhYmxlfSBPUkRFUiBCWSBkYXRlIERFU0NgO1xyXG4gICAgXHJcbiAgICBpZiAoc3RhdGVtZW50VHlwZSA9PT0gJ2FkZFJlY29yZCcpIHtcclxuICAgICAgICBsZXQgc3RhdGVtZW50SW5zZXJ0SW50b0RhdGEgPSBgKCckeyBTUUxPYmouam9pbihcIicsJ1wiKX0nKTtgO1xyXG4gICAgICAgIGNob29zZW5TdGF0ZW1lbnQgPSBgSU5TRVJUIElOVE8gJHsgU1FMQ29uZmlnLlNRTFRhYmxlfSAoc2VudCwgJHsgc3RhdGVtZW50Q29scyB9KSBWQUxVRVMkeyBzdGF0ZW1lbnRJbnNlcnRJbnRvRGF0YX1gOyAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgaWYgKHN0YXRlbWVudFR5cGUgPT09ICd1c2VyU3BlYycpIHtcclxuICAgICAgICBjaG9vc2VuU3RhdGVtZW50ID0gYFNFTEVDVCAqIEZST00gJHtTUUxDb25maWcuU1FMVGFibGV9IFdIRVJFIHVzZXJOYW1lPSR7IFNRTE9iaiB9IE9SREVSIEJZIGRhdGUgREVTQ2A7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vaWYgKHN0YXRlbWVudFR5cGUgPT09ICdmaWx0ZXInKSBjaG9vc2VuU3RhdGVtZW50ID0gYFNFTEVDVCAqIEZST00gZGF0YSAke1NRTE9iai5jdXJyZW50U3RhdGVtZW50Lm9wZXJhdG9yfSAkeyBTUUxPYmouY3VycmVudFN0YXRlbWVudC5maWx0ZXJJbiB9IGluICgnJHsgU1FMT2JqLmN1cnJlbnRTdGF0ZW1lbnQuU1FMRmlsdGVyU3RyfScpYDtcclxuICAgIFxyXG4gICAgY3VycmVudFN0YXRlbWVudCA9IGNob29zZW5TdGF0ZW1lbnQ7XHJcbiAgICBjb25zb2xlLmxvZygnMTE2Jyk7XHJcbiAgICBjb25zb2xlLmxvZyhjdXJyZW50U3RhdGVtZW50KTtcclxuICAgIFxyXG4gICAgcmV0dXJuIGN1cnJlbnRTdGF0ZW1lbnQ7XHJcbn1cclxuICAgIC8vRnVuY3Rpb24gdG8gY2hvb3NlIGNvcnJlY3Qgc3RhdGVtZW50IGFjY29yZGluZyB0aGUgaW5vbW1pbmcgZGF0YSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "SQLFunctions.js"
      ],
      "names": [
        "mysql",
        "require",
        "SQLConfig",
        "incommingSQLDataArr",
        "currentStatement",
        "choosenStatement",
        "count",
        "defaultStatement",
        "SQLTable",
        "test",
        "runSQLConn",
        "SQLStatement",
        "console",
        "log",
        "SQLConn",
        "createConnection",
        "host",
        "user",
        "password",
        "port",
        "sqlPort",
        "database",
        "multipleStatements",
        "connect",
        "err",
        "query",
        "sqlResult",
        "push",
        "end",
        "buildCorrectSQLStatements",
        "statementType",
        "SQLObj",
        "statementCols",
        "statementInsertIntoData",
        "join"
      ],
      "mappings": ";;;;;;;AAAA;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAzB;;AACO,IAAIE,mBAAmB,GAAG,EAA1B;;AACP,IAAIC,gBAAgB,GAAG,EAAvB;AACA,IAAIC,gBAAgB,GAAG,EAAvB;AACA,IAAIC,KAAK,GAAG,CAAZ;AAEA,IAAIC,gBAAgB,2BAAoBL,SAAS,CAACM,QAA9B,CAApB;AAEO,IAAIC,IAAI,GAAG,CAAX;;;AAEA,IAAIC,UAAU,GAAG,SAAbA,UAAa,CAACC,YAAD,EAAiB;AAErCL,EAAAA,KAAK;AACLM,EAAAA,OAAO,CAACC,GAAR,wBAAyBP,KAAzB,GAHqC,CAIrC;AACA;;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,MAAIC,OAAO,GAAGd,KAAK,CAACe,gBAAN,CAAuB;AACjCC,IAAAA,IAAI,EAAEd,SAAS,CAACc,IADiB;AAEjCC,IAAAA,IAAI,EAAEf,SAAS,CAACe,IAFiB;AAGjCC,IAAAA,QAAQ,EAAEhB,SAAS,CAACgB,QAHa;AAIjCC,IAAAA,IAAI,EAAEjB,SAAS,CAACkB,OAJiB;AAKjCC,IAAAA,QAAQ,EAAEnB,SAAS,CAACmB,QALa;AAMjCC,IAAAA,kBAAkB,EAAEpB,SAAS,CAACoB;AANG,GAAvB,CAAd;AAQAR,EAAAA,OAAO,CAACS,OAAR,CAAgB,UAASC,GAAT,EAAc;AAC1B,QAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTV,IAAAA,OAAO,CAACW,KAAR,CAAcd,YAAd,EAA4B,UAAUa,GAAV,EAAeE,SAAf,EAA0B;AAClDd,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAV,MAAAA,mBAAmB,CAACwB,IAApB,CAAyBD,SAAzB,EAFkD,CAGlD;;AACA,UAAIF,GAAJ,EAAS;AACL;AACA;AACH;AACJ,KARD;AASAV,IAAAA,OAAO,CAACc,GAAR;AACH,GAZD;AAaAhB,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCV,mBAAxC;AACH,CA9BM;;;;AA+BA,IAAI0B,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,aAAD,EAAgBC,MAAhB,EAA0B;AAAE;AAC/D,MAAIC,aAAa,GAAG,wDAApB;AAEA,MAAIF,aAAa,KAAK,WAAtB,EAAmCzB,gBAAgB,2BAAoBH,SAAS,CAACM,QAA9B,wBAAhB;;AAEnC,MAAIsB,aAAa,KAAK,WAAtB,EAAmC;AAC/B,QAAIG,uBAAuB,eAASF,MAAM,CAACG,IAAP,CAAY,KAAZ,CAAT,QAA3B;AACA7B,IAAAA,gBAAgB,yBAAmBH,SAAS,CAACM,QAA7B,qBAAiDwB,aAAjD,qBAA2EC,uBAA3E,CAAhB;AACH;;AAGD,MAAIH,aAAa,KAAK,UAAtB,EAAkC;AAC9BzB,IAAAA,gBAAgB,2BAAoBH,SAAS,CAACM,QAA9B,6BAA0DuB,MAA1D,wBAAhB;AACH,GAb4D,CAe7D;;;AAEA3B,EAAAA,gBAAgB,GAAGC,gBAAnB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYT,gBAAZ;AAEA,SAAOA,gBAAP;AACH,CAtBM,C,CAuBH",
      "sourceRoot": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\Functions",
      "sourcesContent": [
        "//SQL Config\r\nvar mysql = require('mysql');\r\nconst SQLConfig = require('./SQLConfig');\r\nexport let incommingSQLDataArr = [];\r\nlet currentStatement = '';\r\nlet choosenStatement = '';\r\nlet count = 0;\r\n\r\nlet defaultStatement = `SELECT * FROM ${SQLConfig.SQLTable}`;\r\n\r\nexport let test = 2;\r\n\r\nexport let runSQLConn = (SQLStatement) =>{        \r\n\r\n    count++;\r\n    console.log(`Körning - ${count}`);\r\n    // Creates a connection between the server and my client and listen for SQL changes¨\r\n    //let SQLConn = mysql.createConnection([{multipleStatements: true}, 'mysql://djcp7bmvky3s0mnm:osp74zwrq5ut4gun@m60mxazb4g6sb4nn.chr7pe7iynqr.eu-west-1.rds.amazonaws.com:3306/q3uqurm7z68qb3h2']);\r\n\r\n    console.log(\"Ansluten till DB :)\");\r\n    let SQLConn = mysql.createConnection({\r\n        host: SQLConfig.host,\r\n        user: SQLConfig.user,\r\n        password: SQLConfig.password,\r\n        port: SQLConfig.sqlPort,\r\n        database: SQLConfig.database,\r\n        multipleStatements: SQLConfig.multipleStatements,\r\n    });\r\n    SQLConn.connect(function(err) { \r\n        if (err) throw err;        \r\n        SQLConn.query(SQLStatement, function (err, sqlResult) {\r\n            console.log('85');\r\n            incommingSQLDataArr.push(sqlResult);\r\n            //console.log(\"incommingSQLDataArr - 43\", incommingSQLDataArr)\r\n            if (err) {\r\n                //SQLConn.release();\r\n                return;\r\n            }\r\n        }); \r\n        SQLConn.end();\r\n    });\r\n    console.log(\"incommingSQLDataArr - 67\", incommingSQLDataArr);\r\n}\r\nexport let buildCorrectSQLStatements = (statementType, SQLObj) =>{ // Find correct SQLStatement\r\n    let statementCols = 'date, activity, state, concerned, type, place, content';    \r\n    \r\n    if (statementType === 'first run') choosenStatement = `SELECT * FROM ${SQLConfig.SQLTable} ORDER BY date DESC`;\r\n    \r\n    if (statementType === 'addRecord') {\r\n        let statementInsertIntoData = `('${ SQLObj.join(\"','\")}');`;\r\n        choosenStatement = `INSERT INTO ${ SQLConfig.SQLTable} (sent, ${ statementCols }) VALUES${ statementInsertIntoData}`;  \r\n    }\r\n    \r\n    \r\n    if (statementType === 'userSpec') {\r\n        choosenStatement = `SELECT * FROM ${SQLConfig.SQLTable} WHERE userName=${ SQLObj } ORDER BY date DESC`;\r\n    }\r\n    \r\n    //if (statementType === 'filter') choosenStatement = `SELECT * FROM data ${SQLObj.currentStatement.operator} ${ SQLObj.currentStatement.filterIn } in ('${ SQLObj.currentStatement.SQLFilterStr}')`;\r\n    \r\n    currentStatement = choosenStatement;\r\n    console.log('116');\r\n    console.log(currentStatement);\r\n    \r\n    return currentStatement;\r\n}\r\n    //Function to choose correct statement according the inomming data"
      ]
    },
    "sourceType": "script",
    "mtime": 1584115620599
  },
  "{\"sourceRoot\":\"C:\\\\Web\\\\HBGWorks\\\\ScheduleApp\\\\ServerHeroku\\\\Functions\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Web\\\\HBGWorks\\\\ScheduleApp\\\\ServerHeroku\",\"filename\":\"C:\\\\Web\\\\HBGWorks\\\\ScheduleApp\\\\ServerHeroku\\\\Functions\\\\UserFunctions.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Web\\\\HBGWorks\\\\ScheduleApp\\\\ServerHeroku\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\Functions",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku",
      "filename": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\Functions\\UserFunctions.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\Functions\\UserFunctions.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\Functions\\UserFunctions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\Functions",
        "sourceFileName": "UserFunctions.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sendCorrectUserData = void 0;\n\nvar _SQLFunctions = require(\"./SQLFunctions\");\n\nvar sendCorrectUserData = function sendCorrectUserData(getInlogedUser) {\n  var getCorrectUserData = [];\n\n  _SQLFunctions.incommingSQLDataArr.map(function (obj) {\n    for (var key in obj) {\n      if (obj[key].userName === getInlogedUser) {\n        getCorrectUserData.push(obj[key]);\n      }\n    }\n\n    return getCorrectUserData;\n  });\n\n  return getCorrectUserData;\n};\n\nexports.sendCorrectUserData = sendCorrectUserData;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXJGdW5jdGlvbnMuanMiXSwibmFtZXMiOlsic2VuZENvcnJlY3RVc2VyRGF0YSIsImdldElubG9nZWRVc2VyIiwiZ2V0Q29ycmVjdFVzZXJEYXRhIiwiaW5jb21taW5nU1FMRGF0YUFyciIsIm1hcCIsIm9iaiIsImtleSIsInVzZXJOYW1lIiwicHVzaCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVPLElBQUlBLG1CQUFtQixHQUFHLFNBQXRCQSxtQkFBc0IsQ0FBQ0MsY0FBRCxFQUFvQjtBQUNqRCxNQUFJQyxrQkFBa0IsR0FBRyxFQUF6Qjs7QUFDQUMsb0NBQW9CQyxHQUFwQixDQUF3QixVQUFDQyxHQUFELEVBQVM7QUFDN0IsU0FBSyxJQUFNQyxHQUFYLElBQWtCRCxHQUFsQixFQUF1QjtBQUNuQixVQUFJQSxHQUFHLENBQUNDLEdBQUQsQ0FBSCxDQUFTQyxRQUFULEtBQXNCTixjQUExQixFQUEwQztBQUN0Q0MsUUFBQUEsa0JBQWtCLENBQUNNLElBQW5CLENBQXdCSCxHQUFHLENBQUNDLEdBQUQsQ0FBM0I7QUFDSDtBQUNKOztBQUNELFdBQU9KLGtCQUFQO0FBQ0gsR0FQRDs7QUFRQSxTQUFPQSxrQkFBUDtBQUNILENBWE0iLCJzb3VyY2VSb290IjoiQzpcXFdlYlxcSEJHV29ya3NcXFNjaGVkdWxlQXBwXFxTZXJ2ZXJIZXJva3VcXEZ1bmN0aW9ucyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7aW5jb21taW5nU1FMRGF0YUFycn0gZnJvbSAnLi9TUUxGdW5jdGlvbnMnOyBcclxuXHJcbmV4cG9ydCBsZXQgc2VuZENvcnJlY3RVc2VyRGF0YSA9IChnZXRJbmxvZ2VkVXNlcikgPT4geyAgXHJcbiAgICBsZXQgZ2V0Q29ycmVjdFVzZXJEYXRhID0gW107ICBcclxuICAgIGluY29tbWluZ1NRTERhdGFBcnIubWFwKChvYmopID0+IHtcclxuICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiBvYmopIHtcclxuICAgICAgICAgICAgaWYgKG9ialtrZXldLnVzZXJOYW1lID09PSBnZXRJbmxvZ2VkVXNlcikge1xyXG4gICAgICAgICAgICAgICAgZ2V0Q29ycmVjdFVzZXJEYXRhLnB1c2gob2JqW2tleV0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBnZXRDb3JyZWN0VXNlckRhdGE7XHJcbiAgICB9KTtcclxuICAgIHJldHVybiBnZXRDb3JyZWN0VXNlckRhdGE7XHJcbn0gIl19",
    "map": {
      "version": 3,
      "sources": [
        "UserFunctions.js"
      ],
      "names": [
        "sendCorrectUserData",
        "getInlogedUser",
        "getCorrectUserData",
        "incommingSQLDataArr",
        "map",
        "obj",
        "key",
        "userName",
        "push"
      ],
      "mappings": ";;;;;;;AAAA;;AAEO,IAAIA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,cAAD,EAAoB;AACjD,MAAIC,kBAAkB,GAAG,EAAzB;;AACAC,oCAAoBC,GAApB,CAAwB,UAACC,GAAD,EAAS;AAC7B,SAAK,IAAMC,GAAX,IAAkBD,GAAlB,EAAuB;AACnB,UAAIA,GAAG,CAACC,GAAD,CAAH,CAASC,QAAT,KAAsBN,cAA1B,EAA0C;AACtCC,QAAAA,kBAAkB,CAACM,IAAnB,CAAwBH,GAAG,CAACC,GAAD,CAA3B;AACH;AACJ;;AACD,WAAOJ,kBAAP;AACH,GAPD;;AAQA,SAAOA,kBAAP;AACH,CAXM",
      "sourceRoot": "C:\\Web\\HBGWorks\\ScheduleApp\\ServerHeroku\\Functions",
      "sourcesContent": [
        "import {incommingSQLDataArr} from './SQLFunctions'; \r\n\r\nexport let sendCorrectUserData = (getInlogedUser) => {  \r\n    let getCorrectUserData = [];  \r\n    incommingSQLDataArr.map((obj) => {\r\n        for (const key in obj) {\r\n            if (obj[key].userName === getInlogedUser) {\r\n                getCorrectUserData.push(obj[key]);\r\n            }\r\n        }\r\n        return getCorrectUserData;\r\n    });\r\n    return getCorrectUserData;\r\n} "
      ]
    },
    "sourceType": "script",
    "mtime": 1584115620601
  }
}